Search.setIndex({"docnames": ["array/activations", "array/activations/ArrayWithActivations", "array/array", "array/array/Array", "array/array/Variable", "array/array_methods", "array/array_methods/abs", "array/array_methods/acos", "array/array_methods/acosh", "array/array_methods/adam_step", "array/array_methods/adam_update", "array/array_methods/add", "array/array_methods/add_ivy_array_instance_methods", "array/array_methods/all", "array/array_methods/all_equal", "array/array_methods/any", "array/array_methods/argmax", "array/array_methods/argmin", "array/array_methods/argsort", "array/array_methods/asarray", "array/array_methods/asin", "array/array_methods/asinh", "array/array_methods/astype", "array/array_methods/atan", "array/array_methods/atan2", "array/array_methods/atanh", "array/array_methods/binary_cross_entropy", "array/array_methods/bitwise_and", "array/array_methods/bitwise_invert", "array/array_methods/bitwise_left_shift", "array/array_methods/bitwise_or", "array/array_methods/bitwise_right_shift", "array/array_methods/bitwise_xor", "array/array_methods/broadcast_arrays", "array/array_methods/broadcast_to", "array/array_methods/can_cast", "array/array_methods/ceil", "array/array_methods/cholesky", "array/array_methods/clip", "array/array_methods/clip_matrix_norm", "array/array_methods/clip_vector_norm", "array/array_methods/concat", "array/array_methods/constant_pad", "array/array_methods/conv1d", "array/array_methods/cos", "array/array_methods/cosh", "array/array_methods/cross", "array/array_methods/cross_entropy", "array/array_methods/cumprod", "array/array_methods/depthwise_conv2d", "array/array_methods/det", "array/array_methods/dev", "array/array_methods/diagonal", "array/array_methods/divide", "array/array_methods/dtype", "array/array_methods/eigh", "array/array_methods/eigvalsh", "array/array_methods/einops_rearrange", "array/array_methods/einops_reduce", "array/array_methods/einops_repeat", "array/array_methods/einsum", "array/array_methods/empty_like", "array/array_methods/equal", "array/array_methods/erf", "array/array_methods/exp", "array/array_methods/expand_dims", "array/array_methods/expm1", "array/array_methods/finfo", "array/array_methods/flip", "array/array_methods/floor", "array/array_methods/floor_divide", "array/array_methods/from_dlpack", "array/array_methods/full_like", "array/array_methods/gather", "array/array_methods/gather_nd", "array/array_methods/gelu", "array/array_methods/gradient_descent_update", "array/array_methods/greater", "array/array_methods/greater_equal", "array/array_methods/has_nans", "array/array_methods/iinfo", "array/array_methods/inplace_decrement", "array/array_methods/inv", "array/array_methods/is_bool_dtype", "array/array_methods/is_float_dtype", "array/array_methods/is_int_dtype", "array/array_methods/is_uint_dtype", "array/array_methods/is_variable", "array/array_methods/isfinite", "array/array_methods/isinf", "array/array_methods/isnan", "array/array_methods/lamb_update", "array/array_methods/lars_update", "array/array_methods/layer_norm", "array/array_methods/leaky_relu", "array/array_methods/less", "array/array_methods/less_equal", "array/array_methods/log", "array/array_methods/log10", "array/array_methods/log1p", "array/array_methods/log2", "array/array_methods/logaddexp", "array/array_methods/logical_and", "array/array_methods/logical_not", "array/array_methods/logical_or", "array/array_methods/logical_xor", "array/array_methods/matmul", "array/array_methods/matrix_norm", "array/array_methods/matrix_rank", "array/array_methods/matrix_transpose", "array/array_methods/max", "array/array_methods/mean", "array/array_methods/meshgrid", "array/array_methods/min", "array/array_methods/multinomial", "array/array_methods/multiply", "array/array_methods/native_array", "array/array_methods/negative", "array/array_methods/nonzero", "array/array_methods/not_equal", "array/array_methods/ones_like", "array/array_methods/optimizer_update", "array/array_methods/outer", "array/array_methods/permute_dims", "array/array_methods/pinv", "array/array_methods/positive", "array/array_methods/pow", "array/array_methods/prod", "array/array_methods/qr", "array/array_methods/randint", "array/array_methods/random_normal", "array/array_methods/random_uniform", "array/array_methods/relu", "array/array_methods/remainder", "array/array_methods/repeat", "array/array_methods/reshape", "array/array_methods/result_type", "array/array_methods/roll", "array/array_methods/round", "array/array_methods/searchsorted", "array/array_methods/shuffle", "array/array_methods/sigmoid", "array/array_methods/sign", "array/array_methods/sin", "array/array_methods/sinh", "array/array_methods/softmax", "array/array_methods/softplus", "array/array_methods/solve", "array/array_methods/sort", "array/array_methods/sparse_cross_entropy", "array/array_methods/split", "array/array_methods/sqrt", "array/array_methods/square", "array/array_methods/squeeze", "array/array_methods/stable_divide", "array/array_methods/stack", "array/array_methods/std", "array/array_methods/stop_gradient", "array/array_methods/subtract", "array/array_methods/sum", "array/array_methods/svd", "array/array_methods/svdvals", "array/array_methods/swapaxes", "array/array_methods/tan", "array/array_methods/tanh", "array/array_methods/tensordot", "array/array_methods/tile", "array/array_methods/to_device", "array/array_methods/to_list", "array/array_methods/to_numpy", "array/array_methods/trace", "array/array_methods/tril", "array/array_methods/triu", "array/array_methods/trunc", "array/array_methods/unique_all", "array/array_methods/unique_counts", "array/array_methods/unique_inverse", "array/array_methods/unique_values", "array/array_methods/unstack", "array/array_methods/var", "array/array_methods/variable", "array/array_methods/variable_data", "array/array_methods/vecdot", "array/array_methods/vector_norm", "array/array_methods/vector_to_skew_symmetric_matrix", "array/array_methods/where", "array/array_methods/zero_pad", "array/array_methods/zeros_like", "array/conversions", "array/conversions/args_to_ivy", "array/conversions/args_to_native", "array/conversions/to_ivy", "array/conversions/to_native", "array/creation", "array/creation/ArrayWithCreation", "array/data_type", "array/data_type/ArrayWithDataTypes", "array/device", "array/device/ArrayWithDevice", "array/elementwise", "array/elementwise/ArrayWithElementwise", "array/general", "array/general/ArrayWithGeneral", "array/gradients", "array/gradients/ArrayWithGradients", "array/image", "array/image/ArrayWithImage", "array/layers", "array/layers/ArrayWithLayers", "array/linear_algebra", "array/linear_algebra/ArrayWithLinearAlgebra", "array/losses", "array/losses/ArrayWithLosses", "array/manipulation", "array/manipulation/ArrayWithManipulation", "array/norms", "array/norms/ArrayWithNorms", "array/random", "array/random/ArrayWithRandom", "array/searching", "array/searching/ArrayWithSearching", "array/set", "array/set/ArrayWithSet", "array/sorting", "array/sorting/ArrayWithSorting", "array/statistical", "array/statistical/ArrayWithStatistical", "array/utilities", "array/utilities/ArrayWithUtility", "array/utility", "array/utility/ArrayWithUtility", "array/wrapping", "array/wrapping/add_ivy_array_instance_methods", "backend_handler", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "container/activations", "container/activations/ContainerWithActivations", "container/base", "container/base/ContainerBase", "container/container", "container/container/Container", "container/container_methods", "container/container_methods/abs", "container/container_methods/acos", "container/container_methods/acosh", "container/container_methods/adam_step", "container/container_methods/adam_update", "container/container_methods/add", "container/container_methods/add_ivy_container_instance_methods", "container/container_methods/all", "container/container_methods/all_equal", "container/container_methods/any", "container/container_methods/argmax", "container/container_methods/argmin", "container/container_methods/argsort", "container/container_methods/asin", "container/container_methods/asinh", "container/container_methods/astype", "container/container_methods/atan", "container/container_methods/atan2", "container/container_methods/atanh", "container/container_methods/binary_cross_entropy", "container/container_methods/bitwise_and", "container/container_methods/bitwise_invert", "container/container_methods/bitwise_left_shift", "container/container_methods/bitwise_or", "container/container_methods/bitwise_right_shift", "container/container_methods/bitwise_xor", "container/container_methods/broadcast_arrays", "container/container_methods/broadcast_to", "container/container_methods/can_cast", "container/container_methods/ceil", "container/container_methods/cholesky", "container/container_methods/clip", "container/container_methods/clip_matrix_norm", "container/container_methods/clip_vector_norm", "container/container_methods/concat", "container/container_methods/constant_pad", "container/container_methods/conv1d", "container/container_methods/cos", "container/container_methods/cosh", "container/container_methods/cross", "container/container_methods/cross_entropy", "container/container_methods/cumprod", "container/container_methods/depthwise_conv2d", "container/container_methods/det", "container/container_methods/dev", "container/container_methods/diagonal", "container/container_methods/divide", "container/container_methods/dtype", "container/container_methods/eigh", "container/container_methods/einops_rearrange", "container/container_methods/einops_reduce", "container/container_methods/einops_repeat", "container/container_methods/einsum", "container/container_methods/empty_like", "container/container_methods/equal", "container/container_methods/erf", "container/container_methods/exp", "container/container_methods/expand_dims", "container/container_methods/expm1", "container/container_methods/finfo", "container/container_methods/flip", "container/container_methods/floor", "container/container_methods/floor_divide", "container/container_methods/from_dlpack", "container/container_methods/full_like", "container/container_methods/gather", "container/container_methods/gather_nd", "container/container_methods/gelu", "container/container_methods/gradient_descent_update", "container/container_methods/greater", "container/container_methods/greater_equal", "container/container_methods/has_nans", "container/container_methods/iinfo", "container/container_methods/inplace_decrement", "container/container_methods/inv", "container/container_methods/is_bool_dtype", "container/container_methods/is_float_dtype", "container/container_methods/is_int_dtype", "container/container_methods/is_uint_dtype", "container/container_methods/is_variable", "container/container_methods/isfinite", "container/container_methods/isinf", "container/container_methods/isnan", "container/container_methods/lamb_update", "container/container_methods/lars_update", "container/container_methods/layer_norm", "container/container_methods/leaky_relu", "container/container_methods/less", "container/container_methods/less_equal", "container/container_methods/log", "container/container_methods/log10", "container/container_methods/log1p", "container/container_methods/log2", "container/container_methods/logaddexp", "container/container_methods/logical_and", "container/container_methods/logical_not", "container/container_methods/logical_or", "container/container_methods/logical_xor", "container/container_methods/matmul", "container/container_methods/matrix_norm", "container/container_methods/matrix_power", "container/container_methods/matrix_rank", "container/container_methods/matrix_transpose", "container/container_methods/max", "container/container_methods/maximum", "container/container_methods/mean", "container/container_methods/meshgrid", "container/container_methods/min", "container/container_methods/minimum", "container/container_methods/multinomial", "container/container_methods/multiply", "container/container_methods/native_array", "container/container_methods/negative", "container/container_methods/nonzero", "container/container_methods/not_equal", "container/container_methods/ones_like", "container/container_methods/optimizer_update", "container/container_methods/outer", "container/container_methods/permute_dims", "container/container_methods/positive", "container/container_methods/pow", "container/container_methods/prod", "container/container_methods/qr", "container/container_methods/randint", "container/container_methods/random_normal", "container/container_methods/random_uniform", "container/container_methods/relu", "container/container_methods/remainder", "container/container_methods/repeat", "container/container_methods/reshape", "container/container_methods/result_type", "container/container_methods/roll", "container/container_methods/round", "container/container_methods/searchsorted", "container/container_methods/shuffle", "container/container_methods/sigmoid", "container/container_methods/sign", "container/container_methods/sin", "container/container_methods/sinh", "container/container_methods/slogdet", "container/container_methods/softmax", "container/container_methods/softplus", "container/container_methods/solve", "container/container_methods/sort", "container/container_methods/sparse_cross_entropy", "container/container_methods/split", "container/container_methods/sqrt", "container/container_methods/square", "container/container_methods/squeeze", "container/container_methods/stable_divide", "container/container_methods/stack", "container/container_methods/static_abs", "container/container_methods/static_acos", "container/container_methods/static_acosh", "container/container_methods/static_add", "container/container_methods/static_all", "container/container_methods/static_all_equal", "container/container_methods/static_any", "container/container_methods/static_arange", "container/container_methods/static_argmax", "container/container_methods/static_argmin", "container/container_methods/static_argsort", "container/container_methods/static_asarray", "container/container_methods/static_asin", "container/container_methods/static_asinh", "container/container_methods/static_astype", "container/container_methods/static_atan", "container/container_methods/static_atan2", "container/container_methods/static_atanh", "container/container_methods/static_binary_cross_entropy", "container/container_methods/static_bitwise_and", "container/container_methods/static_bitwise_invert", "container/container_methods/static_bitwise_left_shift", "container/container_methods/static_bitwise_or", "container/container_methods/static_bitwise_right_shift", "container/container_methods/static_bitwise_xor", "container/container_methods/static_broadcast_arrays", "container/container_methods/static_broadcast_to", "container/container_methods/static_can_cast", "container/container_methods/static_ceil", "container/container_methods/static_cholesky", "container/container_methods/static_clip", "container/container_methods/static_clip_matrix_norm", "container/container_methods/static_clip_vector_norm", "container/container_methods/static_concat", "container/container_methods/static_conv1d", "container/container_methods/static_cos", "container/container_methods/static_cosh", "container/container_methods/static_cross", "container/container_methods/static_cross_entropy", "container/container_methods/static_cumprod", "container/container_methods/static_default_float_dtype", "container/container_methods/static_depthwise_conv2d", "container/container_methods/static_det", "container/container_methods/static_dev", "container/container_methods/static_diagonal", "container/container_methods/static_divide", "container/container_methods/static_dtype", "container/container_methods/static_einops_rearrange", "container/container_methods/static_einops_reduce", "container/container_methods/static_einops_repeat", "container/container_methods/static_empty_like", "container/container_methods/static_equal", "container/container_methods/static_erf", "container/container_methods/static_exp", "container/container_methods/static_expand_dims", "container/container_methods/static_expm1", "container/container_methods/static_eye", "container/container_methods/static_finfo", "container/container_methods/static_floor", "container/container_methods/static_floor_divide", "container/container_methods/static_from_dlpack", "container/container_methods/static_full_like", "container/container_methods/static_function_supported_dtypes", "container/container_methods/static_function_unsupported_dtypes", "container/container_methods/static_gather", "container/container_methods/static_gather_nd", "container/container_methods/static_gelu", "container/container_methods/static_greater", "container/container_methods/static_greater_equal", "container/container_methods/static_has_nans", "container/container_methods/static_iinfo", "container/container_methods/static_inplace_decrement", "container/container_methods/static_inv", "container/container_methods/static_is_bool_dtype", "container/container_methods/static_is_float_dtype", "container/container_methods/static_is_int_dtype", "container/container_methods/static_is_uint_dtype", "container/container_methods/static_is_variable", "container/container_methods/static_isfinite", "container/container_methods/static_isinf", "container/container_methods/static_isnan", "container/container_methods/static_leaky_relu", "container/container_methods/static_less", "container/container_methods/static_less_equal", "container/container_methods/static_linspace", "container/container_methods/static_log", "container/container_methods/static_log10", "container/container_methods/static_log1p", "container/container_methods/static_log2", "container/container_methods/static_logaddexp", "container/container_methods/static_logical_and", "container/container_methods/static_logical_not", "container/container_methods/static_logical_or", "container/container_methods/static_logical_xor", "container/container_methods/static_logspace", "container/container_methods/static_matrix_norm", "container/container_methods/static_matrix_power", "container/container_methods/static_matrix_rank", "container/container_methods/static_matrix_transpose", "container/container_methods/static_maximum", "container/container_methods/static_meshgrid", "container/container_methods/static_minimum", "container/container_methods/static_multinomial", "container/container_methods/static_multiply", "container/container_methods/static_native_array", "container/container_methods/static_negative", "container/container_methods/static_nonzero", "container/container_methods/static_not_equal", "container/container_methods/static_ones", "container/container_methods/static_ones_like", "container/container_methods/static_outer", "container/container_methods/static_positive", "container/container_methods/static_pow", "container/container_methods/static_qr", "container/container_methods/static_randint", "container/container_methods/static_random_normal", "container/container_methods/static_random_uniform", "container/container_methods/static_relu", "container/container_methods/static_remainder", "container/container_methods/static_repeat", "container/container_methods/static_reshape", "container/container_methods/static_result_type", "container/container_methods/static_roll", "container/container_methods/static_round", "container/container_methods/static_searchsorted", "container/container_methods/static_shuffle", "container/container_methods/static_sigmoid", "container/container_methods/static_sign", "container/container_methods/static_sin", "container/container_methods/static_sinh", "container/container_methods/static_slogdet", "container/container_methods/static_softmax", "container/container_methods/static_softplus", "container/container_methods/static_solve", "container/container_methods/static_sort", "container/container_methods/static_sparse_cross_entropy", "container/container_methods/static_split", "container/container_methods/static_sqrt", "container/container_methods/static_square", "container/container_methods/static_stable_divide", "container/container_methods/static_stop_gradient", "container/container_methods/static_subtract", "container/container_methods/static_svd", "container/container_methods/static_svdvals", "container/container_methods/static_tan", "container/container_methods/static_tanh", "container/container_methods/static_tensordot", "container/container_methods/static_to_device", "container/container_methods/static_to_list", "container/container_methods/static_to_numpy", "container/container_methods/static_trace", "container/container_methods/static_tril", "container/container_methods/static_triu", "container/container_methods/static_trunc", "container/container_methods/static_unique_all", "container/container_methods/static_unique_counts", "container/container_methods/static_unique_inverse", "container/container_methods/static_unique_values", "container/container_methods/static_unstack", "container/container_methods/static_var", "container/container_methods/static_variable", "container/container_methods/static_variable_data", "container/container_methods/static_vecdot", "container/container_methods/static_vector_norm", "container/container_methods/static_vector_to_skew_symmetric_matrix", "container/container_methods/static_where", "container/container_methods/static_zeros", "container/container_methods/static_zeros_like", "container/container_methods/std", "container/container_methods/stop_gradient", "container/container_methods/subtract", "container/container_methods/sum", "container/container_methods/svd", "container/container_methods/svdvals", "container/container_methods/swapaxes", "container/container_methods/tan", "container/container_methods/tanh", "container/container_methods/tensordot", "container/container_methods/tile", "container/container_methods/to_device", "container/container_methods/to_list", "container/container_methods/to_numpy", "container/container_methods/trace", "container/container_methods/tril", "container/container_methods/triu", "container/container_methods/trunc", "container/container_methods/unique_all", "container/container_methods/unique_counts", "container/container_methods/unique_inverse", "container/container_methods/unique_values", "container/container_methods/unstack", "container/container_methods/var", "container/container_methods/variable", "container/container_methods/variable_data", "container/container_methods/vecdot", "container/container_methods/vector_norm", "container/container_methods/vector_to_skew_symmetric_matrix", "container/container_methods/where", "container/container_methods/zero_pad", "container/container_methods/zeros_like", "container/conversions", "container/conversions/static_to_ivy", "container/conversions/static_to_native", "container/conversions/to_ivy", "container/conversions/to_native", "container/creation", "container/creation/ContainerWithCreation", "container/data_type", "container/data_type/ContainerWithDataTypes", "container/device", "container/device/ContainerWithDevice", "container/elementwise", "container/elementwise/ContainerWithElementwise", "container/general", "container/general/ContainerWithGeneral", "container/gradients", "container/gradients/ContainerWithGradients", "container/image", "container/image/ContainerWithImage", "container/layers", "container/layers/ContainerWithLayers", "container/linear_algebra", "container/linear_algebra/ContainerWithLinearAlgebra", "container/losses", "container/losses/ContainerWithLosses", "container/manipulation", "container/manipulation/ContainerWithManipulation", "container/norms", "container/norms/ContainerWithNorms", "container/random", "container/random/ContainerWithRandom", "container/searching", "container/searching/ContainerWithSearching", "container/set", "container/set/ContainerWithSet", "container/sorting", "container/sorting/ContainerWithSorting", "container/statistical", "container/statistical/ContainerWithStatistical", "container/utility", "container/utility/ContainerWithUtility", "container/wrapping", "container/wrapping/add_ivy_container_instance_methods", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/building_the_docs", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_function_arguments", "deep_dive/11_submodule_helpers", "deep_dive/12_docstrings", "deep_dive/13_docstring_examples", "deep_dive/14_array_api_tests", "deep_dive/15_ivy_tests", "deep_dive/16_ivy_frontends", "deep_dive/17_ivy_frontends_tests", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_formatting", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/from_zero_dim_arrays_to_float", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/integer_array_to_float", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/gelu/gelu_container", "functional/ivy/activations/gelu/gelu_functional", "functional/ivy/activations/gelu/static_gelu_container", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/leaky_relu/leaky_relu_container", "functional/ivy/activations/leaky_relu/leaky_relu_functional", "functional/ivy/activations/leaky_relu/static_leaky_relu_container", "functional/ivy/activations/relu", "functional/ivy/activations/relu/relu_container", "functional/ivy/activations/relu/relu_functional", "functional/ivy/activations/relu/static_relu_container", "functional/ivy/activations/sigmoid", "functional/ivy/activations/sigmoid/sigmoid_container", "functional/ivy/activations/sigmoid/sigmoid_functional", "functional/ivy/activations/sigmoid/static_sigmoid_container", "functional/ivy/activations/softmax", "functional/ivy/activations/softmax/softmax_container", "functional/ivy/activations/softmax/softmax_functional", "functional/ivy/activations/softmax/static_softmax_container", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/arange/arange_functional", "functional/ivy/creation/arange/static_arange_container", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/asarray/static_asarray_container", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_container", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/empty_like/static_empty_like_container", "functional/ivy/creation/eye", "functional/ivy/creation/eye/eye_functional", "functional/ivy/creation/eye/static_eye_container", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_container", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/from_dlpack/static_from_dlpack_container", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_container", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/full_like/static_full_like_container", "functional/ivy/creation/linspace", "functional/ivy/creation/linspace/linspace_functional", "functional/ivy/creation/linspace/static_linspace_container", "functional/ivy/creation/logspace", "functional/ivy/creation/logspace/logspace_functional", "functional/ivy/creation/logspace/static_logspace_container", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_container", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/meshgrid/static_meshgrid_container", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_container", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/native_array/static_native_array_container", "functional/ivy/creation/ones", "functional/ivy/creation/ones/ones_functional", "functional/ivy/creation/ones/static_ones_container", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_container", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/ones_like/static_ones_like_container", "functional/ivy/creation/tril", "functional/ivy/creation/tril/static_tril_container", "functional/ivy/creation/tril/tril_container", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/static_triu_container", "functional/ivy/creation/triu/triu_container", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros/static_zeros_container", "functional/ivy/creation/zeros/zeros_functional", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/static_zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/astype/astype_container", "functional/ivy/data_type/astype/astype_functional", "functional/ivy/data_type/astype/static_astype_container", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/broadcast_to/broadcast_to_container", "functional/ivy/data_type/broadcast_to/broadcast_to_functional", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/check_float", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/default_uint_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype/dtype_container", "functional/ivy/data_type/dtype/dtype_functional", "functional/ivy/data_type/dtype/static_dtype_container", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/finfo/finfo_container", "functional/ivy/data_type/finfo/finfo_functional", "functional/ivy/data_type/finfo/static_finfo_container", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/iinfo/iinfo_container", "functional/ivy/data_type/iinfo/iinfo_functional", "functional/ivy/data_type/iinfo/static_iinfo_container", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_bool_dtype", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container", "functional/ivy/data_type/is_uint_dtype", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/promote_types_of_inputs", "functional/ivy/data_type/result_type", "functional/ivy/data_type/result_type/result_type_container", "functional/ivy/data_type/result_type/result_type_functional", "functional/ivy/data_type/result_type/static_result_type_container", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/set_default_uint_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/unset_default_uint_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev/dev_container", "functional/ivy/device/dev/dev_functional", "functional/ivy/device/dev/static_dev_container", "functional/ivy/device/dev_util", "functional/ivy/device/function_supported_devices", "functional/ivy/device/function_unsupported_devices", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/to_device/static_to_device_container", "functional/ivy/device/to_device/to_device_array", "functional/ivy/device/to_device/to_device_container", "functional/ivy/device/to_device/to_device_functional", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acos/static_acos_container", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/acosh/static_acosh_container", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asin/static_asin_container", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/asinh/static_asinh_container", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan/static_atan_container", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atan2/static_atan2_container", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/atanh/static_atanh_container", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/ceil/static_ceil_container", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cos/static_cos_container", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/cosh/static_cosh_container", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/equal/static_equal_container", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/erf/static_erf_container", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/exp/static_exp_container", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/expm1/static_expm1_container", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor/static_floor_container", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/floor_divide/static_floor_divide_container", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater/static_greater_container", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/greater_equal/static_greater_equal_container", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isfinite/static_isfinite_container", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isinf/static_isinf_container", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/isnan/static_isnan_container", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less/static_less_container", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/less_equal/static_less_equal_container", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log/static_log_container", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log10/static_log10_container", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log1p/static_log1p_container", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/log2/static_log2_container", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logaddexp/static_logaddexp_container", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_and/static_logical_and_container", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_not/static_logical_not_container", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_or/static_logical_or_container", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/logical_xor/static_logical_xor_container", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/maximum/maximum_container", "functional/ivy/elementwise/maximum/maximum_functional", "functional/ivy/elementwise/maximum/static_maximum_container", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/minimum/minimum_container", "functional/ivy/elementwise/minimum/minimum_functional", "functional/ivy/elementwise/minimum/static_minimum_container", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/negative/static_negative_container", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/not_equal/static_not_equal_container", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/positive/static_positive_container", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/pow/static_pow_container", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/remainder/static_remainder_container", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/round/static_round_container", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sign/static_sign_container", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sin/static_sin_container", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sinh/static_sinh_container", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/sqrt/static_sqrt_container", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/square/static_square_container", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/tanh/static_tanh_container", "functional/ivy/elementwise/tanh/tanh_container", "functional/ivy/elementwise/tanh/tanh_functional", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/static_trunc_container", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_container", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_functional", "functional/ivy/general/clip_matrix_norm/static_clip_matrix_norm_container", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumprod/cumprod_container", "functional/ivy/general/cumprod/cumprod_functional", "functional/ivy/general/cumprod/static_cumprod_container", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_rearrange/einops_rearrange_container", "functional/ivy/general/einops_rearrange/einops_rearrange_functional", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_reduce/einops_reduce_container", "functional/ivy/general/einops_reduce/einops_reduce_functional", "functional/ivy/general/einops_reduce/static_einops_reduce_container", "functional/ivy/general/einops_repeat", "functional/ivy/general/einops_repeat/einops_repeat_container", "functional/ivy/general/einops_repeat/einops_repeat_functional", "functional/ivy/general/einops_repeat/static_einops_repeat_container", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/function_supported_devices_and_dtypes", "functional/ivy/general/function_unsupported_devices_and_dtypes", "functional/ivy/general/gather", "functional/ivy/general/gather/gather_container", "functional/ivy/general/gather/gather_functional", "functional/ivy/general/gather/static_gather_container", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_array_mode", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_nestable_mode", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/has_nans/has_nans_container", "functional/ivy/general/has_nans/has_nans_functional", "functional/ivy/general/has_nans/static_has_nans_container", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_decrement/inplace_decrement_container", "functional/ivy/general/inplace_decrement/inplace_decrement_functional", "functional/ivy/general/inplace_decrement/static_inplace_decrement_container", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_array_mode", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_nestable_mode", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_shape_array_mode", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_array_mode", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_divide/stable_divide_container", "functional/ivy/general/stable_divide/stable_divide_functional", "functional/ivy/general/stable_divide/static_stable_divide_container", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_ivy_shape", "functional/ivy/general/to_list", "functional/ivy/general/to_list/static_to_list_container", "functional/ivy/general/to_list/to_list_container", "functional/ivy/general/to_list/to_list_functional", "functional/ivy/general/to_native_shape", "functional/ivy/general/to_numpy", "functional/ivy/general/to_numpy/static_to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_functional", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unset_array_mode", "functional/ivy/general/unset_nestable_mode", "functional/ivy/general/unset_shape_array_mode", "functional/ivy/general/unstack", "functional/ivy/general/unstack/static_unstack_container", "functional/ivy/general/unstack/unstack_container", "functional/ivy/general/unstack/unstack_functional", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/grad", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/is_variable/is_variable_container", "functional/ivy/gradients/is_variable/is_variable_functional", "functional/ivy/gradients/is_variable/static_is_variable_container", "functional/ivy/gradients/jac", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/stop_gradient/static_stop_gradient_container", "functional/ivy/gradients/stop_gradient/stop_gradient_container", "functional/ivy/gradients/stop_gradient/stop_gradient_functional", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/value_and_grad", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable/static_variable_container", "functional/ivy/gradients/variable/variable_container", "functional/ivy/gradients/variable/variable_functional", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/variable_data/static_variable_data_container", "functional/ivy/gradients/variable_data/variable_data_container", "functional/ivy/gradients/variable_data/variable_data_functional", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d/conv1d_container", "functional/ivy/layers/conv1d/conv1d_functional", "functional/ivy/layers/conv1d/static_conv1d_container", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/deconv_length", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container", "functional/ivy/layers/dropout", "functional/ivy/layers/handle_padding", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_container", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cholesky/static_cholesky_container", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_container", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/cross/static_cross_container", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_container", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/det/static_det_container", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_container", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/diagonal/static_diagonal_container", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_container", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_container", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/inv/static_inv_container", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_power/matrix_power_container", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_container", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/outer/static_outer_container", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_container", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/qr/static_qr_container", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/slogdet/slogdet_container", "functional/ivy/linear_algebra/slogdet/slogdet_functional", "functional/ivy/linear_algebra/slogdet/static_slogdet_container", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_container", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/solve/static_solve_container", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/static_svd_container", "functional/ivy/linear_algebra/svd/svd_container", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/static_svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/static_tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/static_trace_container", "functional/ivy/linear_algebra/trace/trace_container", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/static_vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/concat/static_concat_container", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/expand_dims/static_expand_dims_container", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/repeat/static_repeat_container", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/reshape/static_reshape_container", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/split/split_container", "functional/ivy/manipulation/split/split_functional", "functional/ivy/manipulation/split/static_split_container", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/multinomial/multinomial_container", "functional/ivy/random/multinomial/multinomial_functional", "functional/ivy/random/multinomial/static_multinomial_container", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_container", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_normal/random_normal_container", "functional/ivy/random/random_normal/random_normal_functional", "functional/ivy/random/random_normal/static_random_normal_container", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/random/shuffle/shuffle_container", "functional/ivy/random/shuffle/shuffle_functional", "functional/ivy/random/shuffle/static_shuffle_container", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmax/argmax_container", "functional/ivy/searching/argmax/argmax_functional", "functional/ivy/searching/argmax/static_argmax_container", "functional/ivy/searching/argmin", "functional/ivy/searching/argmin/argmin_container", "functional/ivy/searching/argmin/argmin_functional", "functional/ivy/searching/argmin/static_argmin_container", "functional/ivy/searching/nonzero", "functional/ivy/searching/nonzero/nonzero_array", "functional/ivy/searching/nonzero/nonzero_container", "functional/ivy/searching/nonzero/nonzero_functional", "functional/ivy/searching/nonzero/static_nonzero_container", "functional/ivy/searching/where", "functional/ivy/searching/where/static_where_container", "functional/ivy/searching/where/where_container", "functional/ivy/searching/where/where_functional", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_all/static_unique_all_container", "functional/ivy/set/unique_all/unique_all_container", "functional/ivy/set/unique_all/unique_all_functional", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_inverse/static_unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_functional", "functional/ivy/set/unique_values", "functional/ivy/set/unique_values/static_unique_values_container", "functional/ivy/set/unique_values/unique_values_container", "functional/ivy/set/unique_values/unique_values_functional", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/searchsorted", "functional/ivy/sorting/searchsorted/searchsorted_array", "functional/ivy/sorting/searchsorted/searchsorted_container", "functional/ivy/sorting/searchsorted/searchsorted_functional", "functional/ivy/sorting/searchsorted/static_searchsorted_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/static_var_container", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/all/static_all_container", "functional/ivy/utility/any", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "functional/ivy/utility/any/static_any_container", "glossary", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["array/activations.rst", "array/activations/ArrayWithActivations.rst", "array/array.rst", "array/array/Array.rst", "array/array/Variable.rst", "array/array_methods.rst", "array/array_methods/abs.rst", "array/array_methods/acos.rst", "array/array_methods/acosh.rst", "array/array_methods/adam_step.rst", "array/array_methods/adam_update.rst", "array/array_methods/add.rst", "array/array_methods/add_ivy_array_instance_methods.rst", "array/array_methods/all.rst", "array/array_methods/all_equal.rst", "array/array_methods/any.rst", "array/array_methods/argmax.rst", "array/array_methods/argmin.rst", "array/array_methods/argsort.rst", "array/array_methods/asarray.rst", "array/array_methods/asin.rst", "array/array_methods/asinh.rst", "array/array_methods/astype.rst", "array/array_methods/atan.rst", "array/array_methods/atan2.rst", "array/array_methods/atanh.rst", "array/array_methods/binary_cross_entropy.rst", "array/array_methods/bitwise_and.rst", "array/array_methods/bitwise_invert.rst", "array/array_methods/bitwise_left_shift.rst", "array/array_methods/bitwise_or.rst", "array/array_methods/bitwise_right_shift.rst", "array/array_methods/bitwise_xor.rst", "array/array_methods/broadcast_arrays.rst", "array/array_methods/broadcast_to.rst", "array/array_methods/can_cast.rst", "array/array_methods/ceil.rst", "array/array_methods/cholesky.rst", "array/array_methods/clip.rst", "array/array_methods/clip_matrix_norm.rst", "array/array_methods/clip_vector_norm.rst", "array/array_methods/concat.rst", "array/array_methods/constant_pad.rst", "array/array_methods/conv1d.rst", "array/array_methods/cos.rst", "array/array_methods/cosh.rst", "array/array_methods/cross.rst", "array/array_methods/cross_entropy.rst", "array/array_methods/cumprod.rst", "array/array_methods/depthwise_conv2d.rst", "array/array_methods/det.rst", "array/array_methods/dev.rst", "array/array_methods/diagonal.rst", "array/array_methods/divide.rst", "array/array_methods/dtype.rst", "array/array_methods/eigh.rst", "array/array_methods/eigvalsh.rst", "array/array_methods/einops_rearrange.rst", "array/array_methods/einops_reduce.rst", "array/array_methods/einops_repeat.rst", "array/array_methods/einsum.rst", "array/array_methods/empty_like.rst", "array/array_methods/equal.rst", "array/array_methods/erf.rst", "array/array_methods/exp.rst", "array/array_methods/expand_dims.rst", "array/array_methods/expm1.rst", "array/array_methods/finfo.rst", "array/array_methods/flip.rst", "array/array_methods/floor.rst", "array/array_methods/floor_divide.rst", "array/array_methods/from_dlpack.rst", "array/array_methods/full_like.rst", "array/array_methods/gather.rst", "array/array_methods/gather_nd.rst", "array/array_methods/gelu.rst", "array/array_methods/gradient_descent_update.rst", "array/array_methods/greater.rst", "array/array_methods/greater_equal.rst", "array/array_methods/has_nans.rst", "array/array_methods/iinfo.rst", "array/array_methods/inplace_decrement.rst", "array/array_methods/inv.rst", "array/array_methods/is_bool_dtype.rst", "array/array_methods/is_float_dtype.rst", "array/array_methods/is_int_dtype.rst", "array/array_methods/is_uint_dtype.rst", "array/array_methods/is_variable.rst", "array/array_methods/isfinite.rst", "array/array_methods/isinf.rst", "array/array_methods/isnan.rst", "array/array_methods/lamb_update.rst", "array/array_methods/lars_update.rst", "array/array_methods/layer_norm.rst", "array/array_methods/leaky_relu.rst", "array/array_methods/less.rst", "array/array_methods/less_equal.rst", "array/array_methods/log.rst", "array/array_methods/log10.rst", "array/array_methods/log1p.rst", "array/array_methods/log2.rst", "array/array_methods/logaddexp.rst", "array/array_methods/logical_and.rst", "array/array_methods/logical_not.rst", "array/array_methods/logical_or.rst", "array/array_methods/logical_xor.rst", "array/array_methods/matmul.rst", "array/array_methods/matrix_norm.rst", "array/array_methods/matrix_rank.rst", "array/array_methods/matrix_transpose.rst", "array/array_methods/max.rst", "array/array_methods/mean.rst", "array/array_methods/meshgrid.rst", "array/array_methods/min.rst", "array/array_methods/multinomial.rst", "array/array_methods/multiply.rst", "array/array_methods/native_array.rst", "array/array_methods/negative.rst", "array/array_methods/nonzero.rst", "array/array_methods/not_equal.rst", "array/array_methods/ones_like.rst", "array/array_methods/optimizer_update.rst", "array/array_methods/outer.rst", "array/array_methods/permute_dims.rst", "array/array_methods/pinv.rst", "array/array_methods/positive.rst", "array/array_methods/pow.rst", "array/array_methods/prod.rst", "array/array_methods/qr.rst", "array/array_methods/randint.rst", "array/array_methods/random_normal.rst", "array/array_methods/random_uniform.rst", "array/array_methods/relu.rst", "array/array_methods/remainder.rst", "array/array_methods/repeat.rst", "array/array_methods/reshape.rst", "array/array_methods/result_type.rst", "array/array_methods/roll.rst", "array/array_methods/round.rst", "array/array_methods/searchsorted.rst", "array/array_methods/shuffle.rst", "array/array_methods/sigmoid.rst", "array/array_methods/sign.rst", "array/array_methods/sin.rst", "array/array_methods/sinh.rst", "array/array_methods/softmax.rst", "array/array_methods/softplus.rst", "array/array_methods/solve.rst", "array/array_methods/sort.rst", "array/array_methods/sparse_cross_entropy.rst", "array/array_methods/split.rst", "array/array_methods/sqrt.rst", "array/array_methods/square.rst", "array/array_methods/squeeze.rst", "array/array_methods/stable_divide.rst", "array/array_methods/stack.rst", "array/array_methods/std.rst", "array/array_methods/stop_gradient.rst", "array/array_methods/subtract.rst", "array/array_methods/sum.rst", "array/array_methods/svd.rst", "array/array_methods/svdvals.rst", "array/array_methods/swapaxes.rst", "array/array_methods/tan.rst", "array/array_methods/tanh.rst", "array/array_methods/tensordot.rst", "array/array_methods/tile.rst", "array/array_methods/to_device.rst", "array/array_methods/to_list.rst", "array/array_methods/to_numpy.rst", "array/array_methods/trace.rst", "array/array_methods/tril.rst", "array/array_methods/triu.rst", "array/array_methods/trunc.rst", "array/array_methods/unique_all.rst", "array/array_methods/unique_counts.rst", "array/array_methods/unique_inverse.rst", "array/array_methods/unique_values.rst", "array/array_methods/unstack.rst", "array/array_methods/var.rst", "array/array_methods/variable.rst", "array/array_methods/variable_data.rst", "array/array_methods/vecdot.rst", "array/array_methods/vector_norm.rst", "array/array_methods/vector_to_skew_symmetric_matrix.rst", "array/array_methods/where.rst", "array/array_methods/zero_pad.rst", "array/array_methods/zeros_like.rst", "array/conversions.rst", "array/conversions/args_to_ivy.rst", "array/conversions/args_to_native.rst", "array/conversions/to_ivy.rst", "array/conversions/to_native.rst", "array/creation.rst", "array/creation/ArrayWithCreation.rst", "array/data_type.rst", "array/data_type/ArrayWithDataTypes.rst", "array/device.rst", "array/device/ArrayWithDevice.rst", "array/elementwise.rst", "array/elementwise/ArrayWithElementwise.rst", "array/general.rst", "array/general/ArrayWithGeneral.rst", "array/gradients.rst", "array/gradients/ArrayWithGradients.rst", "array/image.rst", "array/image/ArrayWithImage.rst", "array/layers.rst", "array/layers/ArrayWithLayers.rst", "array/linear_algebra.rst", "array/linear_algebra/ArrayWithLinearAlgebra.rst", "array/losses.rst", "array/losses/ArrayWithLosses.rst", "array/manipulation.rst", "array/manipulation/ArrayWithManipulation.rst", "array/norms.rst", "array/norms/ArrayWithNorms.rst", "array/random.rst", "array/random/ArrayWithRandom.rst", "array/searching.rst", "array/searching/ArrayWithSearching.rst", "array/set.rst", "array/set/ArrayWithSet.rst", "array/sorting.rst", "array/sorting/ArrayWithSorting.rst", "array/statistical.rst", "array/statistical/ArrayWithStatistical.rst", "array/utilities.rst", "array/utilities/ArrayWithUtility.rst", "array/utility.rst", "array/utility/ArrayWithUtility.rst", "array/wrapping.rst", "array/wrapping/add_ivy_array_instance_methods.rst", "backend_handler.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "container/activations.rst", "container/activations/ContainerWithActivations.rst", "container/base.rst", "container/base/ContainerBase.rst", "container/container.rst", "container/container/Container.rst", "container/container_methods.rst", "container/container_methods/abs.rst", "container/container_methods/acos.rst", "container/container_methods/acosh.rst", "container/container_methods/adam_step.rst", "container/container_methods/adam_update.rst", "container/container_methods/add.rst", "container/container_methods/add_ivy_container_instance_methods.rst", "container/container_methods/all.rst", "container/container_methods/all_equal.rst", "container/container_methods/any.rst", "container/container_methods/argmax.rst", "container/container_methods/argmin.rst", "container/container_methods/argsort.rst", "container/container_methods/asin.rst", "container/container_methods/asinh.rst", "container/container_methods/astype.rst", "container/container_methods/atan.rst", "container/container_methods/atan2.rst", "container/container_methods/atanh.rst", "container/container_methods/binary_cross_entropy.rst", "container/container_methods/bitwise_and.rst", "container/container_methods/bitwise_invert.rst", "container/container_methods/bitwise_left_shift.rst", "container/container_methods/bitwise_or.rst", "container/container_methods/bitwise_right_shift.rst", "container/container_methods/bitwise_xor.rst", "container/container_methods/broadcast_arrays.rst", "container/container_methods/broadcast_to.rst", "container/container_methods/can_cast.rst", "container/container_methods/ceil.rst", "container/container_methods/cholesky.rst", "container/container_methods/clip.rst", "container/container_methods/clip_matrix_norm.rst", "container/container_methods/clip_vector_norm.rst", "container/container_methods/concat.rst", "container/container_methods/constant_pad.rst", "container/container_methods/conv1d.rst", "container/container_methods/cos.rst", "container/container_methods/cosh.rst", "container/container_methods/cross.rst", "container/container_methods/cross_entropy.rst", "container/container_methods/cumprod.rst", "container/container_methods/depthwise_conv2d.rst", "container/container_methods/det.rst", "container/container_methods/dev.rst", "container/container_methods/diagonal.rst", "container/container_methods/divide.rst", "container/container_methods/dtype.rst", "container/container_methods/eigh.rst", "container/container_methods/einops_rearrange.rst", "container/container_methods/einops_reduce.rst", "container/container_methods/einops_repeat.rst", "container/container_methods/einsum.rst", "container/container_methods/empty_like.rst", "container/container_methods/equal.rst", "container/container_methods/erf.rst", "container/container_methods/exp.rst", "container/container_methods/expand_dims.rst", "container/container_methods/expm1.rst", "container/container_methods/finfo.rst", "container/container_methods/flip.rst", "container/container_methods/floor.rst", "container/container_methods/floor_divide.rst", "container/container_methods/from_dlpack.rst", "container/container_methods/full_like.rst", "container/container_methods/gather.rst", "container/container_methods/gather_nd.rst", "container/container_methods/gelu.rst", "container/container_methods/gradient_descent_update.rst", "container/container_methods/greater.rst", "container/container_methods/greater_equal.rst", "container/container_methods/has_nans.rst", "container/container_methods/iinfo.rst", "container/container_methods/inplace_decrement.rst", "container/container_methods/inv.rst", "container/container_methods/is_bool_dtype.rst", "container/container_methods/is_float_dtype.rst", "container/container_methods/is_int_dtype.rst", "container/container_methods/is_uint_dtype.rst", "container/container_methods/is_variable.rst", "container/container_methods/isfinite.rst", "container/container_methods/isinf.rst", "container/container_methods/isnan.rst", "container/container_methods/lamb_update.rst", "container/container_methods/lars_update.rst", "container/container_methods/layer_norm.rst", "container/container_methods/leaky_relu.rst", "container/container_methods/less.rst", "container/container_methods/less_equal.rst", "container/container_methods/log.rst", "container/container_methods/log10.rst", "container/container_methods/log1p.rst", "container/container_methods/log2.rst", "container/container_methods/logaddexp.rst", "container/container_methods/logical_and.rst", "container/container_methods/logical_not.rst", "container/container_methods/logical_or.rst", "container/container_methods/logical_xor.rst", "container/container_methods/matmul.rst", "container/container_methods/matrix_norm.rst", "container/container_methods/matrix_power.rst", "container/container_methods/matrix_rank.rst", "container/container_methods/matrix_transpose.rst", "container/container_methods/max.rst", "container/container_methods/maximum.rst", "container/container_methods/mean.rst", "container/container_methods/meshgrid.rst", "container/container_methods/min.rst", "container/container_methods/minimum.rst", "container/container_methods/multinomial.rst", "container/container_methods/multiply.rst", "container/container_methods/native_array.rst", "container/container_methods/negative.rst", "container/container_methods/nonzero.rst", "container/container_methods/not_equal.rst", "container/container_methods/ones_like.rst", "container/container_methods/optimizer_update.rst", "container/container_methods/outer.rst", "container/container_methods/permute_dims.rst", "container/container_methods/positive.rst", "container/container_methods/pow.rst", "container/container_methods/prod.rst", "container/container_methods/qr.rst", "container/container_methods/randint.rst", "container/container_methods/random_normal.rst", "container/container_methods/random_uniform.rst", "container/container_methods/relu.rst", "container/container_methods/remainder.rst", "container/container_methods/repeat.rst", "container/container_methods/reshape.rst", "container/container_methods/result_type.rst", "container/container_methods/roll.rst", "container/container_methods/round.rst", "container/container_methods/searchsorted.rst", "container/container_methods/shuffle.rst", "container/container_methods/sigmoid.rst", "container/container_methods/sign.rst", "container/container_methods/sin.rst", "container/container_methods/sinh.rst", "container/container_methods/slogdet.rst", "container/container_methods/softmax.rst", "container/container_methods/softplus.rst", "container/container_methods/solve.rst", "container/container_methods/sort.rst", "container/container_methods/sparse_cross_entropy.rst", "container/container_methods/split.rst", "container/container_methods/sqrt.rst", "container/container_methods/square.rst", "container/container_methods/squeeze.rst", "container/container_methods/stable_divide.rst", "container/container_methods/stack.rst", "container/container_methods/static_abs.rst", "container/container_methods/static_acos.rst", "container/container_methods/static_acosh.rst", "container/container_methods/static_add.rst", "container/container_methods/static_all.rst", "container/container_methods/static_all_equal.rst", "container/container_methods/static_any.rst", "container/container_methods/static_arange.rst", "container/container_methods/static_argmax.rst", "container/container_methods/static_argmin.rst", "container/container_methods/static_argsort.rst", "container/container_methods/static_asarray.rst", "container/container_methods/static_asin.rst", "container/container_methods/static_asinh.rst", "container/container_methods/static_astype.rst", "container/container_methods/static_atan.rst", "container/container_methods/static_atan2.rst", "container/container_methods/static_atanh.rst", "container/container_methods/static_binary_cross_entropy.rst", "container/container_methods/static_bitwise_and.rst", "container/container_methods/static_bitwise_invert.rst", "container/container_methods/static_bitwise_left_shift.rst", "container/container_methods/static_bitwise_or.rst", "container/container_methods/static_bitwise_right_shift.rst", "container/container_methods/static_bitwise_xor.rst", "container/container_methods/static_broadcast_arrays.rst", "container/container_methods/static_broadcast_to.rst", "container/container_methods/static_can_cast.rst", "container/container_methods/static_ceil.rst", "container/container_methods/static_cholesky.rst", "container/container_methods/static_clip.rst", "container/container_methods/static_clip_matrix_norm.rst", "container/container_methods/static_clip_vector_norm.rst", "container/container_methods/static_concat.rst", "container/container_methods/static_conv1d.rst", "container/container_methods/static_cos.rst", "container/container_methods/static_cosh.rst", "container/container_methods/static_cross.rst", "container/container_methods/static_cross_entropy.rst", "container/container_methods/static_cumprod.rst", "container/container_methods/static_default_float_dtype.rst", "container/container_methods/static_depthwise_conv2d.rst", "container/container_methods/static_det.rst", "container/container_methods/static_dev.rst", "container/container_methods/static_diagonal.rst", "container/container_methods/static_divide.rst", "container/container_methods/static_dtype.rst", "container/container_methods/static_einops_rearrange.rst", "container/container_methods/static_einops_reduce.rst", "container/container_methods/static_einops_repeat.rst", "container/container_methods/static_empty_like.rst", "container/container_methods/static_equal.rst", "container/container_methods/static_erf.rst", "container/container_methods/static_exp.rst", "container/container_methods/static_expand_dims.rst", "container/container_methods/static_expm1.rst", "container/container_methods/static_eye.rst", "container/container_methods/static_finfo.rst", "container/container_methods/static_floor.rst", "container/container_methods/static_floor_divide.rst", "container/container_methods/static_from_dlpack.rst", "container/container_methods/static_full_like.rst", "container/container_methods/static_function_supported_dtypes.rst", "container/container_methods/static_function_unsupported_dtypes.rst", "container/container_methods/static_gather.rst", "container/container_methods/static_gather_nd.rst", "container/container_methods/static_gelu.rst", "container/container_methods/static_greater.rst", "container/container_methods/static_greater_equal.rst", "container/container_methods/static_has_nans.rst", "container/container_methods/static_iinfo.rst", "container/container_methods/static_inplace_decrement.rst", "container/container_methods/static_inv.rst", "container/container_methods/static_is_bool_dtype.rst", "container/container_methods/static_is_float_dtype.rst", "container/container_methods/static_is_int_dtype.rst", "container/container_methods/static_is_uint_dtype.rst", "container/container_methods/static_is_variable.rst", "container/container_methods/static_isfinite.rst", "container/container_methods/static_isinf.rst", "container/container_methods/static_isnan.rst", "container/container_methods/static_leaky_relu.rst", "container/container_methods/static_less.rst", "container/container_methods/static_less_equal.rst", "container/container_methods/static_linspace.rst", "container/container_methods/static_log.rst", "container/container_methods/static_log10.rst", "container/container_methods/static_log1p.rst", "container/container_methods/static_log2.rst", "container/container_methods/static_logaddexp.rst", "container/container_methods/static_logical_and.rst", "container/container_methods/static_logical_not.rst", "container/container_methods/static_logical_or.rst", "container/container_methods/static_logical_xor.rst", "container/container_methods/static_logspace.rst", "container/container_methods/static_matrix_norm.rst", "container/container_methods/static_matrix_power.rst", "container/container_methods/static_matrix_rank.rst", "container/container_methods/static_matrix_transpose.rst", "container/container_methods/static_maximum.rst", "container/container_methods/static_meshgrid.rst", "container/container_methods/static_minimum.rst", "container/container_methods/static_multinomial.rst", "container/container_methods/static_multiply.rst", "container/container_methods/static_native_array.rst", "container/container_methods/static_negative.rst", "container/container_methods/static_nonzero.rst", "container/container_methods/static_not_equal.rst", "container/container_methods/static_ones.rst", "container/container_methods/static_ones_like.rst", "container/container_methods/static_outer.rst", "container/container_methods/static_positive.rst", "container/container_methods/static_pow.rst", "container/container_methods/static_qr.rst", "container/container_methods/static_randint.rst", "container/container_methods/static_random_normal.rst", "container/container_methods/static_random_uniform.rst", "container/container_methods/static_relu.rst", "container/container_methods/static_remainder.rst", "container/container_methods/static_repeat.rst", "container/container_methods/static_reshape.rst", "container/container_methods/static_result_type.rst", "container/container_methods/static_roll.rst", "container/container_methods/static_round.rst", "container/container_methods/static_searchsorted.rst", "container/container_methods/static_shuffle.rst", "container/container_methods/static_sigmoid.rst", "container/container_methods/static_sign.rst", "container/container_methods/static_sin.rst", "container/container_methods/static_sinh.rst", "container/container_methods/static_slogdet.rst", "container/container_methods/static_softmax.rst", "container/container_methods/static_softplus.rst", "container/container_methods/static_solve.rst", "container/container_methods/static_sort.rst", "container/container_methods/static_sparse_cross_entropy.rst", "container/container_methods/static_split.rst", "container/container_methods/static_sqrt.rst", "container/container_methods/static_square.rst", "container/container_methods/static_stable_divide.rst", "container/container_methods/static_stop_gradient.rst", "container/container_methods/static_subtract.rst", "container/container_methods/static_svd.rst", "container/container_methods/static_svdvals.rst", "container/container_methods/static_tan.rst", "container/container_methods/static_tanh.rst", "container/container_methods/static_tensordot.rst", "container/container_methods/static_to_device.rst", "container/container_methods/static_to_list.rst", "container/container_methods/static_to_numpy.rst", "container/container_methods/static_trace.rst", "container/container_methods/static_tril.rst", "container/container_methods/static_triu.rst", "container/container_methods/static_trunc.rst", "container/container_methods/static_unique_all.rst", "container/container_methods/static_unique_counts.rst", "container/container_methods/static_unique_inverse.rst", "container/container_methods/static_unique_values.rst", "container/container_methods/static_unstack.rst", "container/container_methods/static_var.rst", "container/container_methods/static_variable.rst", "container/container_methods/static_variable_data.rst", "container/container_methods/static_vecdot.rst", "container/container_methods/static_vector_norm.rst", "container/container_methods/static_vector_to_skew_symmetric_matrix.rst", "container/container_methods/static_where.rst", "container/container_methods/static_zeros.rst", "container/container_methods/static_zeros_like.rst", "container/container_methods/std.rst", "container/container_methods/stop_gradient.rst", "container/container_methods/subtract.rst", "container/container_methods/sum.rst", "container/container_methods/svd.rst", "container/container_methods/svdvals.rst", "container/container_methods/swapaxes.rst", "container/container_methods/tan.rst", "container/container_methods/tanh.rst", "container/container_methods/tensordot.rst", "container/container_methods/tile.rst", "container/container_methods/to_device.rst", "container/container_methods/to_list.rst", "container/container_methods/to_numpy.rst", "container/container_methods/trace.rst", "container/container_methods/tril.rst", "container/container_methods/triu.rst", "container/container_methods/trunc.rst", "container/container_methods/unique_all.rst", "container/container_methods/unique_counts.rst", "container/container_methods/unique_inverse.rst", "container/container_methods/unique_values.rst", "container/container_methods/unstack.rst", "container/container_methods/var.rst", "container/container_methods/variable.rst", "container/container_methods/variable_data.rst", "container/container_methods/vecdot.rst", "container/container_methods/vector_norm.rst", "container/container_methods/vector_to_skew_symmetric_matrix.rst", "container/container_methods/where.rst", "container/container_methods/zero_pad.rst", "container/container_methods/zeros_like.rst", "container/conversions.rst", "container/conversions/static_to_ivy.rst", "container/conversions/static_to_native.rst", "container/conversions/to_ivy.rst", "container/conversions/to_native.rst", "container/creation.rst", "container/creation/ContainerWithCreation.rst", "container/data_type.rst", "container/data_type/ContainerWithDataTypes.rst", "container/device.rst", "container/device/ContainerWithDevice.rst", "container/elementwise.rst", "container/elementwise/ContainerWithElementwise.rst", "container/general.rst", "container/general/ContainerWithGeneral.rst", "container/gradients.rst", "container/gradients/ContainerWithGradients.rst", "container/image.rst", "container/image/ContainerWithImage.rst", "container/layers.rst", "container/layers/ContainerWithLayers.rst", "container/linear_algebra.rst", "container/linear_algebra/ContainerWithLinearAlgebra.rst", "container/losses.rst", "container/losses/ContainerWithLosses.rst", "container/manipulation.rst", "container/manipulation/ContainerWithManipulation.rst", "container/norms.rst", "container/norms/ContainerWithNorms.rst", "container/random.rst", "container/random/ContainerWithRandom.rst", "container/searching.rst", "container/searching/ContainerWithSearching.rst", "container/set.rst", "container/set/ContainerWithSet.rst", "container/sorting.rst", "container/sorting/ContainerWithSorting.rst", "container/statistical.rst", "container/statistical/ContainerWithStatistical.rst", "container/utility.rst", "container/utility/ContainerWithUtility.rst", "container/wrapping.rst", "container/wrapping/add_ivy_container_instance_methods.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/building_the_docs.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_function_arguments.rst", "deep_dive/11_submodule_helpers.rst", "deep_dive/12_docstrings.rst", "deep_dive/13_docstring_examples.rst", "deep_dive/14_array_api_tests.rst", "deep_dive/15_ivy_tests.rst", "deep_dive/16_ivy_frontends.rst", "deep_dive/17_ivy_frontends_tests.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_formatting.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/from_zero_dim_arrays_to_float.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/integer_array_to_float.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/gelu/gelu_container.rst", "functional/ivy/activations/gelu/gelu_functional.rst", "functional/ivy/activations/gelu/static_gelu_container.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/leaky_relu/leaky_relu_container.rst", "functional/ivy/activations/leaky_relu/leaky_relu_functional.rst", "functional/ivy/activations/leaky_relu/static_leaky_relu_container.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/relu/relu_container.rst", "functional/ivy/activations/relu/relu_functional.rst", "functional/ivy/activations/relu/static_relu_container.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/sigmoid/sigmoid_container.rst", "functional/ivy/activations/sigmoid/sigmoid_functional.rst", "functional/ivy/activations/sigmoid/static_sigmoid_container.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softmax/softmax_container.rst", "functional/ivy/activations/softmax/softmax_functional.rst", "functional/ivy/activations/softmax/static_softmax_container.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/arange/arange_functional.rst", "functional/ivy/creation/arange/static_arange_container.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/asarray/static_asarray_container.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_container.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/empty_like/static_empty_like_container.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/eye/eye_functional.rst", "functional/ivy/creation/eye/static_eye_container.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_container.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/from_dlpack/static_from_dlpack_container.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_container.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/full_like/static_full_like_container.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/linspace/linspace_functional.rst", "functional/ivy/creation/linspace/static_linspace_container.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/logspace/logspace_functional.rst", "functional/ivy/creation/logspace/static_logspace_container.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_container.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/meshgrid/static_meshgrid_container.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_container.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/native_array/static_native_array_container.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones/ones_functional.rst", "functional/ivy/creation/ones/static_ones_container.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_container.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/ones_like/static_ones_like_container.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/static_tril_container.rst", "functional/ivy/creation/tril/tril_container.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/static_triu_container.rst", "functional/ivy/creation/triu/triu_container.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros/static_zeros_container.rst", "functional/ivy/creation/zeros/zeros_functional.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/static_zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/astype/astype_container.rst", "functional/ivy/data_type/astype/astype_functional.rst", "functional/ivy/data_type/astype/static_astype_container.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional.rst", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_container.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_functional.rst", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/check_float.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional.rst", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/default_uint_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype/dtype_container.rst", "functional/ivy/data_type/dtype/dtype_functional.rst", "functional/ivy/data_type/dtype/static_dtype_container.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/finfo/finfo_container.rst", "functional/ivy/data_type/finfo/finfo_functional.rst", "functional/ivy/data_type/finfo/static_finfo_container.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional.rst", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional.rst", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/iinfo/iinfo_container.rst", "functional/ivy/data_type/iinfo/iinfo_functional.rst", "functional/ivy/data_type/iinfo/static_iinfo_container.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_bool_dtype.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional.rst", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional.rst", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional.rst", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional.rst", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/promote_types_of_inputs.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/result_type/result_type_container.rst", "functional/ivy/data_type/result_type/result_type_functional.rst", "functional/ivy/data_type/result_type/static_result_type_container.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/set_default_uint_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/unset_default_uint_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev/dev_container.rst", "functional/ivy/device/dev/dev_functional.rst", "functional/ivy/device/dev/static_dev_container.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/function_supported_devices.rst", "functional/ivy/device/function_unsupported_devices.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/to_device/static_to_device_container.rst", "functional/ivy/device/to_device/to_device_array.rst", "functional/ivy/device/to_device/to_device_container.rst", "functional/ivy/device/to_device/to_device_functional.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acos/static_acos_container.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/acosh/static_acosh_container.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asin/static_asin_container.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/asinh/static_asinh_container.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan/static_atan_container.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atan2/static_atan2_container.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/atanh/static_atanh_container.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/ceil/static_ceil_container.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cos/static_cos_container.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/cosh/static_cosh_container.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/equal/static_equal_container.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/erf/static_erf_container.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/exp/static_exp_container.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/expm1/static_expm1_container.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor/static_floor_container.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/floor_divide/static_floor_divide_container.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater/static_greater_container.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/greater_equal/static_greater_equal_container.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isfinite/static_isfinite_container.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isinf/static_isinf_container.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/isnan/static_isnan_container.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less/static_less_container.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/less_equal/static_less_equal_container.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log/static_log_container.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log10/static_log10_container.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log1p/static_log1p_container.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/log2/static_log2_container.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logaddexp/static_logaddexp_container.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_and/static_logical_and_container.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_not/static_logical_not_container.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_or/static_logical_or_container.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/logical_xor/static_logical_xor_container.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/maximum/maximum_container.rst", "functional/ivy/elementwise/maximum/maximum_functional.rst", "functional/ivy/elementwise/maximum/static_maximum_container.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/minimum/minimum_container.rst", "functional/ivy/elementwise/minimum/minimum_functional.rst", "functional/ivy/elementwise/minimum/static_minimum_container.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/negative/static_negative_container.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/not_equal/static_not_equal_container.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/positive/static_positive_container.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/pow/static_pow_container.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/remainder/static_remainder_container.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/round/static_round_container.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sign/static_sign_container.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sin/static_sin_container.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sinh/static_sinh_container.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/sqrt/static_sqrt_container.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/square/static_square_container.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/tanh/static_tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_functional.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/static_trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_container.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_functional.rst", "functional/ivy/general/clip_matrix_norm/static_clip_matrix_norm_container.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumprod/cumprod_container.rst", "functional/ivy/general/cumprod/cumprod_functional.rst", "functional/ivy/general/cumprod/static_cumprod_container.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_container.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_functional.rst", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_reduce/einops_reduce_container.rst", "functional/ivy/general/einops_reduce/einops_reduce_functional.rst", "functional/ivy/general/einops_reduce/static_einops_reduce_container.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/einops_repeat/einops_repeat_container.rst", "functional/ivy/general/einops_repeat/einops_repeat_functional.rst", "functional/ivy/general/einops_repeat/static_einops_repeat_container.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/function_supported_devices_and_dtypes.rst", "functional/ivy/general/function_unsupported_devices_and_dtypes.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather/gather_container.rst", "functional/ivy/general/gather/gather_functional.rst", "functional/ivy/general/gather/static_gather_container.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_array_mode.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_nestable_mode.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/has_nans/has_nans_container.rst", "functional/ivy/general/has_nans/has_nans_functional.rst", "functional/ivy/general/has_nans/static_has_nans_container.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_container.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_functional.rst", "functional/ivy/general/inplace_decrement/static_inplace_decrement_container.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_array_mode.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_nestable_mode.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_shape_array_mode.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_array_mode.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_divide/stable_divide_container.rst", "functional/ivy/general/stable_divide/stable_divide_functional.rst", "functional/ivy/general/stable_divide/static_stable_divide_container.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_ivy_shape.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_list/static_to_list_container.rst", "functional/ivy/general/to_list/to_list_container.rst", "functional/ivy/general/to_list/to_list_functional.rst", "functional/ivy/general/to_native_shape.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_numpy/static_to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_functional.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unset_array_mode.rst", "functional/ivy/general/unset_nestable_mode.rst", "functional/ivy/general/unset_shape_array_mode.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/unstack/static_unstack_container.rst", "functional/ivy/general/unstack/unstack_container.rst", "functional/ivy/general/unstack/unstack_functional.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/grad.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/is_variable/is_variable_container.rst", "functional/ivy/gradients/is_variable/is_variable_functional.rst", "functional/ivy/gradients/is_variable/static_is_variable_container.rst", "functional/ivy/gradients/jac.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/stop_gradient/static_stop_gradient_container.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_container.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_functional.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/value_and_grad.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable/static_variable_container.rst", "functional/ivy/gradients/variable/variable_container.rst", "functional/ivy/gradients/variable/variable_functional.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/variable_data/static_variable_data_container.rst", "functional/ivy/gradients/variable_data/variable_data_container.rst", "functional/ivy/gradients/variable_data/variable_data_functional.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d/conv1d_container.rst", "functional/ivy/layers/conv1d/conv1d_functional.rst", "functional/ivy/layers/conv1d/static_conv1d_container.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/deconv_length.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional.rst", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/handle_padding.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_container.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cholesky/static_cholesky_container.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_container.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/cross/static_cross_container.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_container.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/det/static_det_container.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_container.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/diagonal/static_diagonal_container.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_container.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_container.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/inv/static_inv_container.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional.rst", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_container.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/outer/static_outer_container.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_container.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/qr/static_qr_container.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/slogdet/slogdet_container.rst", "functional/ivy/linear_algebra/slogdet/slogdet_functional.rst", "functional/ivy/linear_algebra/slogdet/static_slogdet_container.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_container.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/solve/static_solve_container.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/static_svd_container.rst", "functional/ivy/linear_algebra/svd/svd_container.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/static_svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/static_tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/static_trace_container.rst", "functional/ivy/linear_algebra/trace/trace_container.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/static_vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/concat/static_concat_container.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/expand_dims/static_expand_dims_container.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/repeat/static_repeat_container.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/reshape/static_reshape_container.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/split/split_container.rst", "functional/ivy/manipulation/split/split_functional.rst", "functional/ivy/manipulation/split/static_split_container.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/multinomial/multinomial_container.rst", "functional/ivy/random/multinomial/multinomial_functional.rst", "functional/ivy/random/multinomial/static_multinomial_container.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_container.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_normal/random_normal_container.rst", "functional/ivy/random/random_normal/random_normal_functional.rst", "functional/ivy/random/random_normal/static_random_normal_container.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/random/shuffle/shuffle_container.rst", "functional/ivy/random/shuffle/shuffle_functional.rst", "functional/ivy/random/shuffle/static_shuffle_container.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmax/argmax_container.rst", "functional/ivy/searching/argmax/argmax_functional.rst", "functional/ivy/searching/argmax/static_argmax_container.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/argmin/argmin_container.rst", "functional/ivy/searching/argmin/argmin_functional.rst", "functional/ivy/searching/argmin/static_argmin_container.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/nonzero/nonzero_array.rst", "functional/ivy/searching/nonzero/nonzero_container.rst", "functional/ivy/searching/nonzero/nonzero_functional.rst", "functional/ivy/searching/nonzero/static_nonzero_container.rst", "functional/ivy/searching/where.rst", "functional/ivy/searching/where/static_where_container.rst", "functional/ivy/searching/where/where_container.rst", "functional/ivy/searching/where/where_functional.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_all/static_unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_functional.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_inverse/static_unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_functional.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/set/unique_values/static_unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_functional.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/searchsorted.rst", "functional/ivy/sorting/searchsorted/searchsorted_array.rst", "functional/ivy/sorting/searchsorted/searchsorted_container.rst", "functional/ivy/sorting/searchsorted/searchsorted_functional.rst", "functional/ivy/sorting/searchsorted/static_searchsorted_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/static_var_container.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/all/static_all_container.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "functional/ivy/utility/any/static_any_container.rst", "glossary.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Activations", "ArrayWithActivations", "Array", "Array", "Variable", "Array methods", "abs array", "acos array", "acosh array", "adam_step array", "adam_update array", "add array", "add_ivy_array_instance_methods array", "all array", "all_equal array", "any array", "argmax array", "argmin array", "argsort array", "asarray array", "asin array", "asinh array", "astype array", "atan array", "atan2 array", "atanh array", "binary_cross_entropy array", "bitwise_and array", "bitwise_invert array", "bitwise_left_shift array", "bitwise_or array", "bitwise_right_shift array", "bitwise_xor array", "broadcast_arrays array", "broadcast_to array", "can_cast array", "ceil array", "cholesky array", "clip array", "clip_matrix_norm array", "clip_vector_norm array", "concat array", "constant_pad array", "conv1d array", "cos array", "cosh array", "cross array", "cross_entropy array", "cumprod array", "depthwise_conv2d array", "det array", "dev array", "diagonal array", "divide array", "dtype array", "eigh array", "eigvalsh array", "einops_rearrange array", "einops_reduce array", "einops_repeat array", "einsum array", "empty_like array", "equal array", "erf array", "exp array", "expand_dims array", "expm1 array", "finfo array", "flip array", "floor array", "floor_divide array", "from_dlpack array", "full_like array", "gather array", "gather_nd array", "gelu array", "gradient_descent_update array", "greater array", "greater_equal array", "has_nans array", "iinfo array", "inplace_decrement array", "inv array", "is_bool_dtype array", "is_float_dtype array", "is_int_dtype array", "is_uint_dtype array", "is_variable array", "isfinite array", "isinf array", "isnan array", "lamb_update array", "lars_update array", "layer_norm array", "leaky_relu array", "less array", "less_equal array", "log array", "log10 array", "log1p array", "log2 array", "logaddexp array", "logical_and array", "logical_not array", "logical_or array", "logical_xor array", "matmul array", "matrix_norm array", "matrix_rank array", "matrix_transpose array", "max array", "mean array", "meshgrid array", "min array", "multinomial array", "multiply array", "native_array array", "negative array", "nonzero array", "not_equal array", "ones_like array", "optimizer_update array", "outer array", "permute_dims array", "pinv array", "positive array", "pow array", "prod array", "qr array", "randint array", "random_normal array", "random_uniform array", "relu array", "remainder array", "repeat array", "reshape array", "result_type array", "roll array", "round array", "searchsorted array", "shuffle array", "sigmoid array", "sign array", "sin array", "sinh array", "softmax array", "softplus array", "solve array", "sort array", "sparse_cross_entropy array", "split array", "sqrt array", "square array", "squeeze array", "stable_divide array", "stack array", "std array", "stop_gradient array", "subtract array", "sum array", "svd array", "svdvals array", "swapaxes array", "tan array", "tanh array", "tensordot array", "tile array", "to_device array", "to_list array", "to_numpy array", "trace array", "tril array", "triu array", "trunc array", "unique_all array", "unique_counts array", "unique_inverse array", "unique_values array", "unstack array", "var array", "variable array", "variable_data array", "vecdot array", "vector_norm array", "vector_to_skew_symmetric_matrix array", "where array", "zero_pad array", "zeros_like array", "Conversions", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utilities", "ArrayWithUtility", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Backend handler", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "Container", "Container methods", "abs container", "acos container", "acosh container", "adam_step container", "adam_update container", "add container", "add_ivy_container_instance_methods container", "all container", "all_equal container", "any container", "argmax container", "argmin container", "argsort container", "asin container", "asinh container", "astype container", "atan container", "atan2 container", "atanh container", "binary_cross_entropy container", "bitwise_and container", "bitwise_invert container", "bitwise_left_shift container", "bitwise_or container", "bitwise_right_shift container", "bitwise_xor container", "broadcast_arrays container", "broadcast_to container", "can_cast container", "ceil container", "cholesky container", "clip container", "clip_matrix_norm container", "clip_vector_norm container", "concat container", "constant_pad container", "conv1d container", "cos container", "cosh container", "cross container", "cross_entropy container", "cumprod container", "depthwise_conv2d container", "det container", "dev container", "diagonal container", "divide container", "dtype container", "eigh container", "einops_rearrange container", "einops_reduce container", "einops_repeat container", "einsum container", "empty_like container", "equal container", "erf container", "exp container", "expand_dims container", "expm1 container", "finfo container", "flip container", "floor container", "floor_divide container", "from_dlpack container", "full_like container", "gather container", "gather_nd container", "gelu container", "gradient_descent_update container", "greater container", "greater_equal container", "has_nans container", "iinfo container", "inplace_decrement container", "inv container", "is_bool_dtype container", "is_float_dtype container", "is_int_dtype container", "is_uint_dtype container", "is_variable container", "isfinite container", "isinf container", "isnan container", "lamb_update container", "lars_update container", "layer_norm container", "leaky_relu container", "less container", "less_equal container", "log container", "log10 container", "log1p container", "log2 container", "logaddexp container", "logical_and container", "logical_not container", "logical_or container", "logical_xor container", "matmul container", "matrix_norm container", "matrix_power container", "matrix_rank container", "matrix_transpose container", "max container", "maximum container", "mean container", "meshgrid container", "min container", "minimum container", "multinomial container", "multiply container", "native_array container", "negative container", "nonzero container", "not_equal container", "ones_like container", "optimizer_update container", "outer container", "permute_dims container", "positive container", "pow container", "prod container", "qr container", "randint container", "random_normal container", "random_uniform container", "relu container", "remainder container", "repeat container", "reshape container", "result_type container", "roll container", "round container", "searchsorted container", "shuffle container", "sigmoid container", "sign container", "sin container", "sinh container", "slogdet container", "softmax container", "softplus container", "solve container", "sort container", "sparse_cross_entropy container", "split container", "sqrt container", "square container", "squeeze container", "stable_divide container", "stack container", "static_abs container", "static_acos container", "static_acosh container", "static_add container", "static_all container", "static_all_equal container", "static_any container", "static_arange container", "static_argmax container", "static_argmin container", "static_argsort container", "static_asarray container", "static_asin container", "static_asinh container", "static_astype container", "static_atan container", "static_atan2 container", "static_atanh container", "static_binary_cross_entropy container", "static_bitwise_and container", "static_bitwise_invert container", "static_bitwise_left_shift container", "static_bitwise_or container", "static_bitwise_right_shift container", "static_bitwise_xor container", "static_broadcast_arrays container", "static_broadcast_to container", "static_can_cast container", "static_ceil container", "static_cholesky container", "static_clip container", "static_clip_matrix_norm container", "static_clip_vector_norm container", "static_concat container", "static_conv1d container", "static_cos container", "static_cosh container", "static_cross container", "static_cross_entropy container", "static_cumprod container", "static_default_float_dtype container", "static_depthwise_conv2d container", "static_det container", "static_dev container", "static_diagonal container", "static_divide container", "static_dtype container", "static_einops_rearrange container", "static_einops_reduce container", "static_einops_repeat container", "static_empty_like container", "static_equal container", "static_erf container", "static_exp container", "static_expand_dims container", "static_expm1 container", "static_eye container", "static_finfo container", "static_floor container", "static_floor_divide container", "static_from_dlpack container", "static_full_like container", "static_function_supported_dtypes container", "static_function_unsupported_dtypes container", "static_gather container", "static_gather_nd container", "static_gelu container", "static_greater container", "static_greater_equal container", "static_has_nans container", "static_iinfo container", "static_inplace_decrement container", "static_inv container", "static_is_bool_dtype container", "static_is_float_dtype container", "static_is_int_dtype container", "static_is_uint_dtype container", "static_is_variable container", "static_isfinite container", "static_isinf container", "static_isnan container", "static_leaky_relu container", "static_less container", "static_less_equal container", "static_linspace container", "static_log container", "static_log10 container", "static_log1p container", "static_log2 container", "static_logaddexp container", "static_logical_and container", "static_logical_not container", "static_logical_or container", "static_logical_xor container", "static_logspace container", "static_matrix_norm container", "static_matrix_power container", "static_matrix_rank container", "static_matrix_transpose container", "static_maximum container", "static_meshgrid container", "static_minimum container", "static_multinomial container", "static_multiply container", "static_native_array container", "static_negative container", "static_nonzero container", "static_not_equal container", "static_ones container", "static_ones_like container", "static_outer container", "static_positive container", "static_pow container", "static_qr container", "static_randint container", "static_random_normal container", "static_random_uniform container", "static_relu container", "static_remainder container", "static_repeat container", "static_reshape container", "static_result_type container", "static_roll container", "static_round container", "static_searchsorted container", "static_shuffle container", "static_sigmoid container", "static_sign container", "static_sin container", "static_sinh container", "static_slogdet container", "static_softmax container", "static_softplus container", "static_solve container", "static_sort container", "static_sparse_cross_entropy container", "static_split container", "static_sqrt container", "static_square container", "static_stable_divide container", "static_stop_gradient container", "static_subtract container", "static_svd container", "static_svdvals container", "static_tan container", "static_tanh container", "static_tensordot container", "static_to_device container", "static_to_list container", "static_to_numpy container", "static_trace container", "static_tril container", "static_triu container", "static_trunc container", "static_unique_all container", "static_unique_counts container", "static_unique_inverse container", "static_unique_values container", "static_unstack container", "static_var container", "static_variable container", "static_variable_data container", "static_vecdot container", "static_vector_norm container", "static_vector_to_skew_symmetric_matrix container", "static_where container", "static_zeros container", "static_zeros_like container", "std container", "stop_gradient container", "subtract container", "sum container", "svd container", "svdvals container", "swapaxes container", "tan container", "tanh container", "tensordot container", "tile container", "to_device container", "to_list container", "to_numpy container", "trace container", "tril container", "triu container", "trunc container", "unique_all container", "unique_counts container", "unique_inverse container", "unique_values container", "unstack container", "var container", "variable container", "variable_data container", "vecdot container", "vector_norm container", "vector_to_skew_symmetric_matrix container", "where container", "zero_pad container", "zeros_like container", "Conversions", "static_to_ivy", "static_to_native", "to_ivy", "to_native", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Building the Docs", "Deep Dive", "Navigating the Code", "Function Arguments", "Submodule Helper Functions", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Ivy Frontends", "Ivy Frontend Tests", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Formatting", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "from_zero_dim_arrays_to_float", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "integer_array_to_float", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "gelu", "ivy.Container.gelu", "ivy.gelu", "ivy.Container.static_gelu", "leaky_relu", "ivy.Container.leaky_relu", "ivy.leaky_relu", "ivy.Container.static_leaky_relu", "relu", "ivy.Container.relu", "ivy.relu", "ivy.Container.static_relu", "sigmoid", "ivy.Container.sigmoid", "ivy.sigmoid", "ivy.Container.static_sigmoid", "softmax", "ivy.Container.softmax", "ivy.softmax", "ivy.Container.static_softmax", "softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "Compilation", "compile", "Constants", "Creation", "arange", "ivy.arange", "ivy.Container.static_arange", "asarray", "ivy.asarray", "ivy.Container.static_asarray", "empty", "empty_like", "ivy.Container.empty_like", "ivy.empty_like", "ivy.Container.static_empty_like", "eye", "ivy.eye", "ivy.Container.static_eye", "from_dlpack", "ivy.Container.from_dlpack", "ivy.from_dlpack", "ivy.Container.static_from_dlpack", "full", "full_like", "ivy.Container.full_like", "ivy.full_like", "ivy.Container.static_full_like", "linspace", "ivy.linspace", "ivy.Container.static_linspace", "logspace", "ivy.logspace", "ivy.Container.static_logspace", "meshgrid", "ivy.Container.meshgrid", "ivy.meshgrid", "ivy.Container.static_meshgrid", "native_array", "ivy.Container.native_array", "ivy.native_array", "ivy.Container.static_native_array", "ones", "ivy.ones", "ivy.Container.static_ones", "ones_like", "ivy.Container.ones_like", "ivy.ones_like", "ivy.Container.static_ones_like", "tril", "ivy.Container.static_tril", "ivy.Container.tril", "ivy.tril", "triu", "ivy.Container.static_triu", "ivy.Container.triu", "ivy.triu", "zeros", "ivy.Container.static_zeros", "ivy.zeros", "zeros_like", "ivy.Container.static_zeros_like", "ivy.Container.zeros_like", "ivy.zeros_like", "Data type", "as_ivy_dtype", "as_native_dtype", "astype", "ivy.Container.astype", "ivy.astype", "ivy.Container.static_astype", "broadcast_arrays", "ivy.Container.broadcast_arrays", "ivy.broadcast_arrays", "ivy.Container.static_broadcast_arrays", "broadcast_to", "ivy.Container.broadcast_to", "ivy.broadcast_to", "ivy.Container.static_broadcast_to", "can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "check_float", "closest_valid_dtype", "default_dtype", "default_float_dtype", "ivy.default_float_dtype", "ivy.Container.static_default_float_dtype", "default_int_dtype", "default_uint_dtype", "dtype", "ivy.Container.dtype", "ivy.dtype", "ivy.Container.static_dtype", "dtype_bits", "finfo", "ivy.Container.finfo", "ivy.finfo", "ivy.Container.static_finfo", "function_supported_dtypes", "ivy.function_supported_dtypes", "ivy.Container.static_function_supported_dtypes", "function_unsupported_dtypes", "ivy.function_unsupported_dtypes", "ivy.Container.static_function_unsupported_dtypes", "iinfo", "ivy.Container.iinfo", "ivy.iinfo", "ivy.Container.static_iinfo", "invalid_dtype", "is_bool_dtype", "ivy.Container.is_bool_dtype", "ivy.is_bool_dtype", "ivy.Container.static_is_bool_dtype", "is_float_dtype", "ivy.Container.is_float_dtype", "ivy.is_float_dtype", "ivy.Container.static_is_float_dtype", "is_int_dtype", "ivy.Container.is_int_dtype", "ivy.is_int_dtype", "ivy.Container.static_is_int_dtype", "is_uint_dtype", "ivy.Array.is_uint_dtype", "ivy.Container.is_uint_dtype", "ivy.is_uint_dtype", "ivy.Container.static_is_uint_dtype", "promote_types", "promote_types_of_inputs", "result_type", "ivy.Container.result_type", "ivy.result_type", "ivy.Container.static_result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "set_default_uint_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "unset_default_uint_dtype", "valid_dtype", "Device", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "ivy.Container.dev", "ivy.dev", "ivy.Container.static_dev", "dev_util", "function_supported_devices", "function_unsupported_devices", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "ivy.Container.static_to_device", "ivy.Array.to_device", "ivy.Container.to_device", "ivy.to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Container.acos", "ivy.acos", "ivy.Container.static_acos", "acosh", "ivy.Container.acosh", "ivy.acosh", "ivy.Container.static_acosh", "add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Container.asin", "ivy.asin", "ivy.Container.static_asin", "asinh", "ivy.Container.asinh", "ivy.asinh", "ivy.Container.static_asinh", "atan", "ivy.Container.atan", "ivy.atan", "ivy.Container.static_atan", "atan2", "ivy.Container.atan2", "ivy.atan2", "ivy.Container.static_atan2", "atanh", "ivy.Container.atanh", "ivy.atanh", "ivy.Container.static_atanh", "bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "ivy.Container.static_bitwise_and", "bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "ivy.Container.static_bitwise_invert", "bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "ivy.Container.static_bitwise_left_shift", "bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "ivy.Container.static_bitwise_or", "bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "ivy.Container.static_bitwise_right_shift", "bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ivy.Container.static_bitwise_xor", "ceil", "ivy.Container.ceil", "ivy.ceil", "ivy.Container.static_ceil", "cos", "ivy.Container.cos", "ivy.cos", "ivy.Container.static_cos", "cosh", "ivy.Container.cosh", "ivy.cosh", "ivy.Container.static_cosh", "divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Container.equal", "ivy.equal", "ivy.Container.static_equal", "erf", "ivy.Container.erf", "ivy.erf", "ivy.Container.static_erf", "exp", "ivy.Container.exp", "ivy.exp", "ivy.Container.static_exp", "expm1", "ivy.Container.expm1", "ivy.expm1", "ivy.Container.static_expm1", "floor", "ivy.Container.floor", "ivy.floor", "ivy.Container.static_floor", "floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "ivy.Container.static_floor_divide", "greater", "ivy.Container.greater", "ivy.greater", "ivy.Container.static_greater", "greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "ivy.Container.static_greater_equal", "isfinite", "ivy.Container.isfinite", "ivy.isfinite", "ivy.Container.static_isfinite", "isinf", "ivy.Container.isinf", "ivy.isinf", "ivy.Container.static_isinf", "isnan", "ivy.Container.isnan", "ivy.isnan", "ivy.Container.static_isnan", "less", "ivy.Container.less", "ivy.less", "ivy.Container.static_less", "less_equal", "ivy.Container.less_equal", "ivy.less_equal", "ivy.Container.static_less_equal", "log", "ivy.Container.log", "ivy.log", "ivy.Container.static_log", "log10", "ivy.Container.log10", "ivy.log10", "ivy.Container.static_log10", "log1p", "ivy.Container.log1p", "ivy.log1p", "ivy.Container.static_log1p", "log2", "ivy.Container.log2", "ivy.log2", "ivy.Container.static_log2", "logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "ivy.Container.static_logaddexp", "logical_and", "ivy.Container.logical_and", "ivy.logical_and", "ivy.Container.static_logical_and", "logical_not", "ivy.Container.logical_not", "ivy.logical_not", "ivy.Container.static_logical_not", "logical_or", "ivy.Container.logical_or", "ivy.logical_or", "ivy.Container.static_logical_or", "logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "ivy.Container.static_logical_xor", "maximum", "ivy.Container.maximum", "ivy.maximum", "ivy.Container.static_maximum", "minimum", "ivy.Container.minimum", "ivy.minimum", "ivy.Container.static_minimum", "multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Container.negative", "ivy.negative", "ivy.Container.static_negative", "not_equal", "ivy.Container.not_equal", "ivy.not_equal", "ivy.Container.static_not_equal", "positive", "ivy.Container.positive", "ivy.positive", "ivy.Container.static_positive", "pow", "ivy.Container.pow", "ivy.pow", "ivy.Container.static_pow", "remainder", "ivy.Container.remainder", "ivy.remainder", "ivy.Container.static_remainder", "round", "ivy.Container.round", "ivy.round", "ivy.Container.static_round", "sign", "ivy.Container.sign", "ivy.sign", "ivy.Container.static_sign", "sin", "ivy.Container.sin", "ivy.sin", "ivy.Container.static_sin", "sinh", "ivy.Container.sinh", "ivy.sinh", "ivy.Container.static_sinh", "sqrt", "ivy.Container.sqrt", "ivy.sqrt", "ivy.Container.static_sqrt", "square", "ivy.Container.square", "ivy.square", "ivy.Container.static_square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Container.tan", "ivy.tan", "tanh", "ivy.Container.static_tanh", "ivy.Container.tanh", "ivy.tanh", "trunc", "ivy.Container.static_trunc", "ivy.Container.trunc", "ivy.trunc", "General", "all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "ivy.Container.clip_matrix_norm", "ivy.clip_matrix_norm", "ivy.Container.static_clip_matrix_norm", "clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "ivy.Container.static_clip_vector_norm", "container_types", "copy_array", "cumprod", "ivy.Container.cumprod", "ivy.cumprod", "ivy.Container.static_cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "ivy.Container.einops_rearrange", "ivy.einops_rearrange", "ivy.Container.static_einops_rearrange", "einops_reduce", "ivy.Container.einops_reduce", "ivy.einops_reduce", "ivy.Container.static_einops_reduce", "einops_repeat", "ivy.Container.einops_repeat", "ivy.einops_repeat", "ivy.Container.static_einops_repeat", "exists", "floormod", "fourier_encode", "function_supported_devices_and_dtypes", "function_unsupported_devices_and_dtypes", "gather", "ivy.Container.gather", "ivy.gather", "ivy.Container.static_gather", "gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_array_mode", "get_min_base", "get_min_denominator", "get_nestable_mode", "get_num_dims", "get_referrers_recursive", "has_nans", "ivy.Container.has_nans", "ivy.has_nans", "ivy.Container.static_has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "ivy.Container.inplace_decrement", "ivy.inplace_decrement", "ivy.Container.static_inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_array_mode", "set_min_base", "set_min_denominator", "set_nestable_mode", "set_queue_timeout", "set_shape_array_mode", "set_tmp_dir", "shape", "shape_array_mode", "stable_divide", "ivy.Container.stable_divide", "ivy.stable_divide", "ivy.Container.static_stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_ivy_shape", "to_list", "ivy.Container.static_to_list", "ivy.Container.to_list", "ivy.to_list", "to_native_shape", "to_numpy", "ivy.Container.static_to_numpy", "ivy.Container.to_numpy", "ivy.to_numpy", "to_scalar", "try_else_none", "unset_array_mode", "unset_nestable_mode", "unset_shape_array_mode", "unstack", "ivy.Container.static_unstack", "ivy.Container.unstack", "ivy.unstack", "value_is_nan", "Gradients", "adam_step", "ivy.Container.adam_step", "ivy.adam_step", "adam_update", "ivy.Container.adam_update", "ivy.adam_update", "execute_with_gradients", "grad", "gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "is_variable", "ivy.Container.is_variable", "ivy.is_variable", "ivy.Container.static_is_variable", "jac", "lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "lars_update", "ivy.Container.lars_update", "ivy.lars_update", "optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "set_with_grads", "stop_gradient", "ivy.Container.static_stop_gradient", "ivy.Container.stop_gradient", "ivy.stop_gradient", "unset_with_grads", "value_and_grad", "variable", "ivy.Container.static_variable", "ivy.Container.variable", "ivy.variable", "variable_data", "ivy.Container.static_variable_data", "ivy.Container.variable_data", "ivy.variable_data", "with_grads", "Layers", "conv1d", "ivy.Container.conv1d", "ivy.conv1d", "ivy.Container.static_conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "deconv_length", "depthwise_conv2d", "ivy.Container.depthwise_conv2d", "ivy.depthwise_conv2d", "ivy.Container.static_depthwise_conv2d", "dropout", "handle_padding", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Container.cross", "ivy.cross", "ivy.Container.static_cross", "det", "ivy.Container.det", "ivy.det", "ivy.Container.static_det", "diagonal", "ivy.Container.diagonal", "ivy.diagonal", "ivy.Container.static_diagonal", "eigh", "ivy.Container.eigh", "ivy.eigh", "eigvalsh", "inv", "ivy.Container.inv", "ivy.inv", "ivy.Container.static_inv", "matmul", "ivy.Container.matmul", "ivy.matmul", "matrix_norm", "ivy.Container.matrix_norm", "ivy.matrix_norm", "ivy.Container.static_matrix_norm", "matrix_power", "ivy.Container.matrix_power", "ivy.matrix_power", "ivy.Container.static_matrix_power", "matrix_rank", "ivy.Container.matrix_rank", "ivy.matrix_rank", "ivy.Container.static_matrix_rank", "matrix_transpose", "ivy.Container.matrix_transpose", "ivy.matrix_transpose", "ivy.Container.static_matrix_transpose", "outer", "ivy.Container.outer", "ivy.outer", "ivy.Container.static_outer", "pinv", "qr", "ivy.Container.qr", "ivy.qr", "ivy.Container.static_qr", "slogdet", "ivy.Container.slogdet", "ivy.slogdet", "ivy.Container.static_slogdet", "solve", "ivy.Container.solve", "ivy.solve", "ivy.Container.static_solve", "svd", "ivy.Container.static_svd", "ivy.Container.svd", "ivy.svd", "svdvals", "ivy.Container.static_svdvals", "ivy.Array.svdvals", "ivy.Container.svdvals", "ivy.svdvals", "tensordot", "ivy.Container.static_tensordot", "ivy.Container.tensordot", "ivy.tensordot", "trace", "ivy.Container.static_trace", "ivy.Container.trace", "ivy.trace", "vecdot", "ivy.Container.static_vecdot", "ivy.Container.vecdot", "ivy.vecdot", "vector_norm", "ivy.Container.static_vector_norm", "ivy.Container.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Container.static_vector_to_skew_symmetric_matrix", "ivy.Container.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Container.concat", "ivy.concat", "ivy.Container.static_concat", "constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "ivy.Container.static_expand_dims", "flip", "ivy.Container.flip", "ivy.flip", "permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "repeat", "ivy.Container.repeat", "ivy.repeat", "ivy.Container.static_repeat", "reshape", "ivy.Container.reshape", "ivy.reshape", "ivy.Container.static_reshape", "roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "ivy.Container.split", "ivy.split", "ivy.Container.static_split", "squeeze", "ivy.Container.squeeze", "ivy.squeeze", "stack", "ivy.Container.stack", "ivy.stack", "swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Container.tile", "ivy.tile", "zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "Random", "multinomial", "ivy.Container.multinomial", "ivy.multinomial", "ivy.Container.static_multinomial", "randint", "ivy.Container.randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "ivy.Container.random_normal", "ivy.random_normal", "ivy.Container.static_random_normal", "random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "ivy.Container.shuffle", "ivy.shuffle", "ivy.Container.static_shuffle", "Searching", "argmax", "ivy.Container.argmax", "ivy.argmax", "ivy.Container.static_argmax", "argmin", "ivy.Container.argmin", "ivy.argmin", "ivy.Container.static_argmin", "nonzero", "ivy.Array.nonzero", "ivy.Container.nonzero", "ivy.nonzero", "ivy.Container.static_nonzero", "where", "ivy.Container.static_where", "ivy.Container.where", "ivy.where", "Set", "unique_all", "ivy.Container.static_unique_all", "ivy.Container.unique_all", "ivy.unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "ivy.Container.static_unique_inverse", "ivy.Container.unique_inverse", "ivy.unique_inverse", "unique_values", "ivy.Container.static_unique_values", "ivy.Container.unique_values", "ivy.unique_values", "Sorting", "argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "searchsorted", "ivy.Array.searchsorted", "ivy.Container.searchsorted", "ivy.searchsorted", "ivy.Container.static_searchsorted", "sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Container.max", "ivy.max", "mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Container.min", "ivy.min", "prod", "ivy.Container.prod", "ivy.prod", "std", "ivy.Container.std", "ivy.std", "sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Container.static_var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Container.all", "ivy.all", "ivy.Container.static_all", "any", "ivy.Container.any", "ivy.any", "ivy.Container.static_any", "Glossary", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "FirstLayerSiren", "GlorotUniform", "Ones", "Siren", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 1, 2, 3, 4, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 238, 244, 249, 250, 251, 252, 253, 254, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 653, 654, 657, 659, 660, 662, 668, 669, 670, 671, 675, 676, 678, 679, 680, 690, 691, 692, 793, 835, 837, 873, 874, 1144, 1150, 1215, 1221, 1265, 1302, 1305, 1488, 1490, 1500, 1532, 1541, 1544, 1616, 1617], "ivi": [0, 1, 2, 3, 4, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 653, 654, 655, 657, 658, 659, 661, 665, 666, 667, 669, 670, 671, 672, 673, 674, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 710, 714, 718, 722, 726, 730, 731, 732, 733, 734, 737, 740, 741, 745, 748, 752, 753, 757, 760, 763, 767, 771, 774, 778, 782, 786, 789, 793, 794, 795, 796, 800, 804, 808, 812, 813, 814, 815, 818, 819, 820, 824, 825, 829, 832, 835, 839, 840, 844, 848, 852, 857, 858, 859, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 902, 903, 904, 905, 906, 907, 911, 915, 919, 923, 927, 931, 935, 939, 943, 947, 951, 955, 959, 963, 967, 971, 975, 979, 983, 987, 991, 995, 999, 1003, 1007, 1011, 1015, 1019, 1023, 1027, 1031, 1035, 1039, 1043, 1047, 1051, 1055, 1059, 1063, 1067, 1071, 1075, 1079, 1083, 1087, 1091, 1095, 1099, 1103, 1107, 1111, 1115, 1119, 1123, 1127, 1132, 1136, 1140, 1144, 1145, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1159, 1163, 1164, 1165, 1169, 1170, 1171, 1172, 1176, 1180, 1184, 1185, 1186, 1187, 1188, 1189, 1193, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1208, 1209, 1210, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1242, 1243, 1244, 1245, 1246, 1250, 1251, 1255, 1256, 1257, 1258, 1259, 1260, 1264, 1265, 1266, 1269, 1272, 1273, 1274, 1277, 1281, 1282, 1285, 1288, 1291, 1292, 1296, 1297, 1298, 1302, 1306, 1307, 1308, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1333, 1337, 1341, 1345, 1348, 1349, 1353, 1356, 1360, 1364, 1368, 1372, 1376, 1377, 1381, 1385, 1389, 1393, 1398, 1402, 1406, 1410, 1414, 1418, 1419, 1423, 1427, 1431, 1432, 1436, 1440, 1443, 1447, 1450, 1453, 1457, 1461, 1465, 1469, 1472, 1475, 1478, 1481, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1510, 1511, 1515, 1519, 1523, 1527, 1528, 1532, 1533, 1537, 1541, 1546, 1550, 1551, 1555, 1559, 1563, 1567, 1568, 1572, 1577, 1581, 1582, 1585, 1588, 1591, 1594, 1597, 1600, 1603, 1607, 1608, 1612, 1616, 1617, 1623, 1660, 1661], "arrai": [0, 1, 4, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 236, 249, 250, 251, 252, 253, 254, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 651, 652, 653, 655, 656, 659, 660, 662, 663, 664, 665, 666, 667, 669, 671, 672, 673, 674, 675, 676, 678, 679, 680, 692, 693, 703, 705, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 732, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 767, 769, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 796, 798, 800, 802, 804, 806, 808, 810, 813, 819, 820, 822, 825, 827, 835, 837, 840, 842, 844, 846, 848, 850, 852, 855, 858, 859, 861, 867, 873, 878, 879, 881, 886, 890, 892, 896, 897, 901, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1145, 1147, 1151, 1152, 1153, 1155, 1157, 1159, 1161, 1164, 1165, 1167, 1169, 1172, 1174, 1176, 1178, 1180, 1182, 1184, 1185, 1186, 1189, 1191, 1193, 1195, 1197, 1202, 1204, 1206, 1208, 1209, 1210, 1212, 1214, 1215, 1217, 1218, 1220, 1223, 1224, 1225, 1227, 1228, 1229, 1234, 1236, 1238, 1240, 1243, 1246, 1249, 1251, 1254, 1255, 1256, 1257, 1259, 1260, 1263, 1264, 1265, 1266, 1268, 1269, 1271, 1273, 1274, 1276, 1277, 1279, 1281, 1282, 1284, 1285, 1287, 1288, 1290, 1292, 1295, 1297, 1298, 1301, 1302, 1305, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1322, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1345, 1347, 1348, 1349, 1351, 1353, 1355, 1356, 1358, 1360, 1362, 1364, 1366, 1368, 1370, 1372, 1374, 1376, 1377, 1379, 1381, 1383, 1385, 1387, 1389, 1392, 1393, 1397, 1398, 1401, 1402, 1405, 1406, 1409, 1410, 1413, 1414, 1417, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1440, 1442, 1443, 1445, 1447, 1449, 1450, 1452, 1453, 1455, 1457, 1459, 1461, 1463, 1465, 1467, 1469, 1471, 1472, 1474, 1475, 1477, 1478, 1480, 1481, 1483, 1484, 1485, 1486, 1487, 1488, 1490, 1491, 1494, 1500, 1501, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1559, 1562, 1563, 1566, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1616, 1617], "arraywithactiv": [0, 2, 3, 677], "sourc": [0, 1, 2, 3, 4, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 668, 669, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 730, 731, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 767, 769, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 794, 795, 796, 798, 800, 802, 804, 806, 808, 810, 812, 813, 814, 815, 816, 818, 819, 820, 822, 824, 825, 827, 829, 830, 832, 833, 835, 837, 839, 840, 842, 844, 846, 848, 850, 852, 855, 857, 858, 859, 861, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 901, 902, 903, 904, 905, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1145, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1157, 1159, 1161, 1163, 1164, 1165, 1167, 1169, 1170, 1171, 1172, 1174, 1176, 1178, 1180, 1182, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1193, 1195, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1206, 1208, 1209, 1210, 1212, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1242, 1243, 1244, 1245, 1246, 1249, 1250, 1251, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1263, 1264, 1265, 1266, 1268, 1269, 1271, 1272, 1273, 1274, 1276, 1277, 1279, 1281, 1282, 1284, 1285, 1287, 1288, 1290, 1291, 1292, 1295, 1296, 1297, 1298, 1301, 1302, 1305, 1306, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1320, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1345, 1347, 1348, 1349, 1351, 1353, 1355, 1356, 1358, 1360, 1362, 1364, 1366, 1368, 1370, 1372, 1374, 1376, 1377, 1379, 1381, 1383, 1385, 1387, 1389, 1392, 1393, 1397, 1398, 1401, 1402, 1405, 1406, 1409, 1410, 1413, 1414, 1417, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1440, 1442, 1443, 1445, 1447, 1449, 1450, 1452, 1453, 1455, 1457, 1459, 1461, 1463, 1465, 1467, 1469, 1471, 1472, 1474, 1475, 1477, 1478, 1480, 1481, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1527, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1559, 1562, 1563, 1566, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1617, 1660, 1661], "base": [0, 1, 2, 3, 4, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 233, 249, 250, 252, 253, 254, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 652, 656, 657, 662, 664, 667, 669, 675, 691, 733, 760, 761, 793, 858, 873, 874, 906, 991, 993, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1095, 1097, 1144, 1199, 1230, 1242, 1265, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1581, 1582, 1584], "abc": [0, 1, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 251, 252, 677, 873, 874, 1144, 1184, 1488, 1505], "gelu": [0, 1, 249, 250, 705], "approxim": [0, 1, 249, 250, 628, 629, 659, 705, 706, 708, 906, 911, 913, 915, 917, 923, 925, 927, 929, 931, 933, 935, 937, 971, 973, 975, 977, 991, 993, 995, 997, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1095, 1097, 1111, 1113, 1115, 1117, 1132, 1135, 1136, 1139, 1328, 1364, 1366, 1376], "true": [0, 1, 2, 3, 195, 196, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 226, 229, 230, 231, 232, 249, 250, 251, 252, 253, 254, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 658, 660, 662, 663, 664, 665, 669, 670, 672, 673, 675, 678, 679, 680, 705, 706, 708, 730, 731, 733, 752, 757, 758, 793, 796, 798, 808, 810, 812, 839, 840, 842, 844, 846, 848, 850, 852, 855, 872, 873, 878, 879, 881, 888, 891, 892, 893, 906, 943, 945, 983, 985, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1087, 1089, 1144, 1145, 1147, 1151, 1152, 1153, 1154, 1165, 1167, 1184, 1186, 1198, 1201, 1204, 1206, 1208, 1218, 1220, 1229, 1232, 1234, 1236, 1237, 1246, 1249, 1251, 1254, 1255, 1257, 1258, 1259, 1264, 1265, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1284, 1285, 1287, 1288, 1290, 1291, 1292, 1295, 1296, 1306, 1307, 1322, 1328, 1329, 1331, 1356, 1358, 1389, 1392, 1410, 1413, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1457, 1459, 1465, 1467, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1494, 1498, 1499, 1501, 1510, 1511, 1513, 1532, 1533, 1535, 1537, 1539, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1567, 1568, 1570, 1577, 1579, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "out": [0, 1, 2, 3, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 246, 247, 248, 249, 250, 251, 252, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 650, 651, 653, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 673, 674, 675, 677, 678, 679, 680, 691, 705, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 796, 798, 804, 806, 844, 846, 873, 897, 901, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1150, 1155, 1157, 1159, 1161, 1164, 1165, 1167, 1169, 1172, 1174, 1176, 1178, 1180, 1182, 1185, 1189, 1191, 1193, 1195, 1208, 1224, 1227, 1228, 1265, 1266, 1268, 1269, 1271, 1274, 1276, 1282, 1284, 1285, 1287, 1288, 1290, 1292, 1295, 1296, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1322, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1345, 1347, 1348, 1349, 1351, 1353, 1355, 1356, 1358, 1360, 1362, 1364, 1366, 1368, 1370, 1372, 1374, 1376, 1381, 1383, 1385, 1387, 1389, 1392, 1393, 1397, 1398, 1401, 1402, 1405, 1406, 1409, 1410, 1413, 1414, 1417, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1440, 1442, 1443, 1445, 1447, 1449, 1450, 1452, 1453, 1455, 1457, 1459, 1461, 1463, 1469, 1471, 1472, 1474, 1475, 1477, 1478, 1480, 1481, 1483, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1546, 1549, 1550, 1563, 1566, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1617], "none": [0, 1, 2, 3, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 233, 234, 237, 244, 249, 250, 251, 252, 253, 254, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 656, 657, 658, 660, 661, 662, 663, 664, 665, 669, 670, 671, 672, 673, 675, 677, 679, 680, 705, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 730, 731, 732, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 767, 769, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 796, 798, 804, 806, 814, 815, 816, 818, 819, 825, 827, 835, 837, 839, 844, 846, 872, 873, 877, 878, 892, 893, 894, 895, 896, 897, 901, 904, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1149, 1155, 1157, 1159, 1161, 1164, 1165, 1167, 1169, 1171, 1172, 1174, 1176, 1178, 1180, 1182, 1184, 1185, 1189, 1191, 1193, 1195, 1203, 1208, 1209, 1216, 1222, 1224, 1227, 1228, 1229, 1230, 1231, 1232, 1234, 1238, 1240, 1242, 1256, 1257, 1258, 1259, 1265, 1266, 1268, 1269, 1271, 1274, 1276, 1282, 1284, 1285, 1287, 1288, 1290, 1291, 1292, 1295, 1296, 1306, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1322, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1345, 1347, 1348, 1349, 1351, 1353, 1355, 1356, 1358, 1360, 1362, 1364, 1366, 1368, 1370, 1372, 1374, 1376, 1381, 1383, 1385, 1387, 1393, 1397, 1398, 1401, 1402, 1405, 1406, 1409, 1410, 1413, 1414, 1417, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1440, 1442, 1443, 1445, 1447, 1449, 1450, 1452, 1453, 1455, 1457, 1459, 1461, 1463, 1465, 1467, 1469, 1471, 1472, 1474, 1475, 1477, 1478, 1480, 1481, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1494, 1499, 1500, 1501, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1527, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1546, 1549, 1550, 1563, 1566, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "instanc": [0, 1, 2, 3, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 249, 250, 251, 252, 253, 254, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 652, 653, 657, 659, 660, 662, 663, 664, 665, 667, 668, 670, 672, 678, 679, 680, 693, 703, 705, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 796, 798, 808, 810, 820, 822, 825, 827, 835, 837, 840, 842, 848, 850, 873, 879, 881, 893, 906, 907, 909, 919, 921, 923, 925, 927, 929, 935, 937, 943, 945, 963, 965, 967, 969, 975, 977, 995, 997, 999, 1001, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1039, 1041, 1043, 1045, 1059, 1061, 1063, 1065, 1071, 1073, 1075, 1077, 1083, 1085, 1087, 1089, 1103, 1105, 1107, 1109, 1111, 1113, 1119, 1121, 1123, 1125, 1132, 1135, 1136, 1139, 1144, 1164, 1189, 1191, 1204, 1206, 1210, 1212, 1215, 1234, 1246, 1249, 1251, 1254, 1255, 1265, 1277, 1279, 1292, 1295, 1298, 1301, 1302, 1305, 1307, 1313, 1316, 1318, 1320, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1353, 1355, 1393, 1397, 1418, 1419, 1421, 1431, 1443, 1445, 1447, 1449, 1461, 1463, 1465, 1467, 1475, 1477, 1506, 1507, 1509, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1567, 1568, 1570, 1581, 1582, 1584, 1585, 1587, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1616], "method": [0, 1, 2, 3, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 249, 250, 251, 252, 253, 254, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 652, 653, 656, 657, 659, 660, 662, 663, 664, 665, 667, 668, 673, 675, 676, 679, 680, 692, 705, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 733, 748, 750, 789, 792, 793, 796, 798, 820, 822, 825, 827, 835, 837, 873, 879, 881, 906, 923, 925, 935, 937, 943, 945, 963, 965, 967, 969, 975, 977, 995, 997, 999, 1001, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1031, 1033, 1059, 1061, 1063, 1065, 1083, 1085, 1087, 1089, 1111, 1113, 1119, 1121, 1123, 1125, 1136, 1139, 1144, 1163, 1164, 1189, 1191, 1204, 1206, 1227, 1228, 1246, 1249, 1251, 1254, 1255, 1265, 1282, 1284, 1285, 1287, 1291, 1296, 1306, 1307, 1316, 1327, 1328, 1333, 1335, 1337, 1339, 1393, 1397, 1418, 1419, 1421, 1431, 1447, 1449, 1461, 1463, 1465, 1467, 1475, 1477, 1488, 1489, 1499, 1500, 1501, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1567, 1568, 1570, 1581, 1582, 1584, 1585, 1587, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1617], "variant": [0, 1, 2, 3, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 249, 250, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 659, 660], "thi": [0, 1, 2, 3, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 246, 247, 248, 249, 250, 251, 252, 253, 254, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 691, 692, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 767, 769, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 808, 810, 813, 825, 827, 835, 837, 840, 842, 848, 850, 858, 859, 861, 873, 874, 891, 896, 905, 906, 907, 909, 919, 921, 923, 925, 927, 929, 935, 937, 943, 945, 959, 961, 963, 965, 967, 969, 975, 977, 995, 997, 999, 1001, 1015, 1017, 1019, 1021, 1023, 1025, 1031, 1033, 1039, 1041, 1043, 1045, 1059, 1061, 1063, 1065, 1071, 1073, 1075, 1077, 1087, 1089, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1119, 1121, 1123, 1125, 1132, 1135, 1136, 1139, 1144, 1186, 1189, 1191, 1204, 1206, 1210, 1212, 1215, 1226, 1233, 1265, 1277, 1279, 1291, 1292, 1295, 1296, 1298, 1301, 1302, 1305, 1306, 1307, 1313, 1318, 1320, 1324, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1353, 1355, 1356, 1358, 1381, 1383, 1431, 1443, 1445, 1447, 1449, 1457, 1459, 1461, 1463, 1472, 1474, 1488, 1494, 1500, 1501, 1506, 1507, 1509, 1532, 1533, 1535, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1567, 1568, 1570, 1581, 1585, 1587, 1588, 1590, 1597, 1599, 1603, 1606, 1607, 1608, 1610, 1617, 1623], "simpli": [0, 1, 2, 3, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 249, 250, 251, 252, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 652, 657, 659, 660, 662, 663, 665, 668, 669, 670, 671, 672, 675, 679, 680, 692, 906, 995, 997, 1043, 1045, 1616], "wrap": [0, 1, 2, 3, 188, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 232, 249, 250, 251, 252, 253, 254, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 649, 655, 657, 659, 662, 665, 666, 668, 669, 670, 671, 672, 675, 677, 680, 692, 693, 703, 1144, 1154, 1265, 1302, 1305, 1616], "function": [0, 1, 2, 3, 188, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 236, 237, 238, 246, 249, 250, 251, 252, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 652, 654, 655, 656, 659, 660, 661, 663, 664, 666, 668, 672, 673, 674, 676, 677, 678, 679, 690, 691, 705, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 730, 731, 732, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 767, 769, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 794, 795, 796, 798, 800, 802, 804, 806, 808, 810, 812, 813, 814, 815, 816, 818, 819, 820, 822, 824, 825, 827, 829, 830, 832, 833, 835, 837, 839, 840, 842, 844, 846, 848, 850, 852, 855, 857, 858, 859, 861, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 901, 902, 903, 904, 905, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1145, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1157, 1159, 1161, 1163, 1164, 1165, 1167, 1169, 1170, 1171, 1172, 1174, 1176, 1178, 1180, 1182, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1193, 1195, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1206, 1208, 1209, 1210, 1212, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1242, 1243, 1244, 1245, 1246, 1249, 1250, 1251, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1263, 1264, 1265, 1266, 1268, 1269, 1271, 1272, 1273, 1274, 1276, 1277, 1279, 1281, 1282, 1284, 1285, 1287, 1288, 1290, 1291, 1292, 1295, 1296, 1297, 1298, 1301, 1302, 1305, 1306, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1320, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1345, 1347, 1348, 1349, 1351, 1353, 1355, 1356, 1358, 1360, 1362, 1364, 1366, 1368, 1370, 1372, 1374, 1376, 1377, 1379, 1381, 1383, 1385, 1387, 1389, 1392, 1393, 1397, 1398, 1401, 1402, 1405, 1406, 1409, 1410, 1413, 1414, 1417, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1440, 1442, 1443, 1445, 1447, 1449, 1450, 1452, 1453, 1455, 1457, 1459, 1461, 1463, 1465, 1467, 1469, 1471, 1472, 1474, 1475, 1477, 1478, 1480, 1481, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1527, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1559, 1562, 1563, 1566, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1616, 1617], "so": [0, 1, 2, 3, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 246, 247, 249, 250, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 651, 652, 653, 656, 657, 659, 660, 662, 663, 664, 667, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 680, 692, 693, 703, 1488, 1489, 1499, 1617], "docstr": [0, 1, 2, 3, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 249, 250, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 653, 654, 655, 656, 657, 663, 665, 673, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 763, 765, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 808, 810, 813, 825, 827, 835, 837, 859, 861, 906, 907, 909, 919, 921, 923, 925, 927, 929, 935, 937, 943, 945, 963, 965, 967, 969, 975, 977, 995, 997, 999, 1001, 1015, 1017, 1019, 1021, 1023, 1025, 1031, 1033, 1039, 1041, 1043, 1045, 1063, 1065, 1071, 1073, 1075, 1077, 1087, 1089, 1103, 1105, 1107, 1109, 1111, 1113, 1119, 1121, 1123, 1125, 1132, 1135, 1136, 1139, 1144, 1204, 1206, 1210, 1212, 1328, 1333, 1335, 1337, 1339, 1341, 1343, 1353, 1355, 1431, 1443, 1445, 1447, 1449, 1461, 1463, 1550, 1551, 1554, 1555, 1558, 1567, 1568, 1570, 1581, 1585, 1587, 1603, 1606, 1607, 1608, 1610], "also": [0, 1, 2, 3, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 246, 247, 249, 250, 251, 252, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 650, 651, 652, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 675, 678, 679, 680, 691, 692, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 808, 810, 840, 842, 848, 850, 906, 907, 909, 919, 921, 923, 925, 927, 929, 935, 937, 943, 945, 963, 965, 967, 969, 975, 977, 995, 997, 999, 1001, 1015, 1017, 1019, 1021, 1023, 1025, 1039, 1041, 1043, 1045, 1063, 1065, 1071, 1073, 1075, 1077, 1087, 1089, 1103, 1105, 1107, 1109, 1111, 1113, 1119, 1121, 1123, 1125, 1132, 1135, 1136, 1139, 1144, 1189, 1191, 1204, 1206, 1210, 1212, 1215, 1265, 1269, 1271, 1277, 1279, 1292, 1295, 1298, 1301, 1302, 1305, 1307, 1313, 1318, 1320, 1324, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1353, 1355, 1431, 1443, 1445, 1447, 1449, 1461, 1463, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1498, 1499, 1500, 1506, 1507, 1509, 1550, 1551, 1554, 1555, 1558, 1567, 1568, 1570, 1581, 1585, 1587, 1603, 1606, 1607, 1608, 1610], "appli": [0, 1, 2, 3, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 249, 250, 251, 252, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 651, 652, 653, 657, 658, 659, 660, 662, 665, 667, 669, 670, 671, 672, 677, 678, 679, 680, 690, 692, 705, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 793, 859, 861, 1144, 1172, 1174, 1176, 1178, 1180, 1182, 1265, 1282, 1284, 1285, 1287, 1307, 1324, 1326, 1327, 1328, 1364, 1366, 1376, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1472, 1474, 1484, 1485, 1486, 1488, 1494, 1497, 1500, 1501, 1506, 1507, 1509, 1616, 1617], "minim": [0, 1, 2, 3, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 249, 250, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 659, 672, 675], "chang": [0, 1, 2, 3, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 248, 249, 250, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 651, 652, 653, 654, 659, 660, 661, 662, 663, 669, 675, 679, 692, 1431, 1457, 1459, 1488, 1490, 1500, 1617, 1623], "exampl": [0, 1, 2, 3, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 236, 237, 238, 244, 248, 249, 250, 253, 254, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 655, 656, 659, 661, 662, 665, 666, 667, 668, 669, 670, 671, 672, 675, 677, 678, 679, 680, 691, 692, 705, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 730, 731, 733, 752, 753, 755, 763, 765, 771, 772, 774, 776, 786, 788, 789, 792, 793, 796, 798, 800, 802, 804, 806, 808, 810, 813, 819, 820, 822, 824, 825, 827, 829, 830, 832, 833, 835, 837, 839, 844, 846, 848, 850, 852, 855, 859, 861, 863, 866, 871, 872, 873, 878, 879, 881, 883, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 901, 902, 903, 904, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1039, 1041, 1043, 1045, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1083, 1085, 1087, 1089, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1132, 1135, 1136, 1139, 1144, 1145, 1147, 1150, 1151, 1152, 1155, 1157, 1159, 1161, 1164, 1165, 1167, 1184, 1189, 1191, 1193, 1195, 1198, 1199, 1200, 1201, 1204, 1206, 1210, 1212, 1214, 1218, 1220, 1229, 1230, 1232, 1233, 1234, 1236, 1237, 1238, 1240, 1246, 1249, 1251, 1254, 1255, 1256, 1257, 1258, 1259, 1265, 1266, 1268, 1273, 1274, 1276, 1277, 1279, 1281, 1282, 1284, 1288, 1290, 1291, 1292, 1295, 1296, 1297, 1298, 1301, 1306, 1307, 1308, 1310, 1313, 1315, 1316, 1318, 1320, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1349, 1351, 1353, 1355, 1364, 1366, 1372, 1374, 1389, 1392, 1393, 1397, 1398, 1401, 1402, 1405, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1443, 1445, 1447, 1449, 1453, 1455, 1457, 1459, 1461, 1463, 1465, 1467, 1469, 1471, 1472, 1474, 1475, 1477, 1488, 1490, 1491, 1494, 1499, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1527, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1617], "x": [0, 1, 2, 3, 188, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 229, 230, 233, 236, 244, 249, 250, 253, 254, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 654, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666, 669, 672, 673, 675, 677, 678, 679, 680, 705, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 733, 737, 738, 741, 743, 748, 750, 752, 753, 755, 763, 765, 767, 769, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 796, 798, 804, 806, 808, 810, 812, 819, 820, 822, 824, 825, 827, 835, 837, 844, 846, 848, 850, 859, 861, 873, 878, 879, 881, 886, 890, 891, 895, 897, 901, 902, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 955, 957, 963, 965, 967, 969, 971, 973, 975, 977, 987, 989, 991, 993, 995, 997, 999, 1001, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1083, 1085, 1091, 1093, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1145, 1147, 1150, 1151, 1152, 1153, 1155, 1157, 1159, 1161, 1164, 1165, 1167, 1169, 1171, 1172, 1174, 1176, 1178, 1180, 1182, 1184, 1185, 1186, 1189, 1191, 1193, 1195, 1199, 1200, 1202, 1204, 1206, 1208, 1210, 1212, 1214, 1215, 1217, 1218, 1219, 1220, 1224, 1230, 1233, 1236, 1238, 1240, 1243, 1246, 1249, 1251, 1254, 1255, 1256, 1260, 1263, 1264, 1265, 1272, 1273, 1277, 1279, 1281, 1292, 1295, 1297, 1298, 1301, 1302, 1305, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1345, 1347, 1348, 1349, 1351, 1353, 1355, 1356, 1358, 1360, 1362, 1364, 1366, 1368, 1370, 1372, 1374, 1376, 1377, 1379, 1381, 1383, 1389, 1392, 1393, 1397, 1398, 1401, 1402, 1405, 1410, 1413, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1440, 1442, 1443, 1445, 1447, 1449, 1450, 1452, 1453, 1455, 1457, 1459, 1461, 1463, 1465, 1467, 1469, 1471, 1472, 1474, 1475, 1477, 1478, 1480, 1481, 1483, 1488, 1489, 1491, 1494, 1498, 1499, 1500, 1504, 1505, 1506, 1507, 1509, 1510, 1515, 1517, 1519, 1521, 1523, 1525, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1559, 1562, 1563, 1566, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1617], "0": [0, 1, 2, 3, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 229, 230, 233, 236, 249, 250, 251, 252, 253, 254, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 652, 656, 659, 660, 662, 663, 664, 675, 677, 678, 679, 680, 692, 705, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 733, 734, 735, 745, 746, 752, 753, 755, 757, 758, 760, 761, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 796, 798, 800, 802, 804, 806, 808, 810, 820, 822, 825, 827, 835, 837, 844, 846, 848, 850, 873, 875, 878, 883, 886, 890, 891, 893, 894, 895, 896, 902, 904, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 951, 953, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1089, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1145, 1147, 1151, 1152, 1155, 1157, 1159, 1161, 1164, 1165, 1167, 1169, 1184, 1189, 1191, 1193, 1195, 1203, 1204, 1206, 1210, 1212, 1214, 1218, 1220, 1224, 1227, 1228, 1233, 1236, 1238, 1240, 1246, 1249, 1251, 1254, 1255, 1265, 1266, 1268, 1269, 1271, 1273, 1274, 1276, 1277, 1279, 1281, 1282, 1284, 1285, 1287, 1288, 1290, 1292, 1295, 1297, 1298, 1301, 1307, 1308, 1310, 1313, 1315, 1316, 1318, 1320, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1349, 1351, 1353, 1355, 1364, 1366, 1389, 1392, 1393, 1397, 1398, 1401, 1402, 1405, 1410, 1413, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1440, 1442, 1443, 1445, 1447, 1449, 1450, 1452, 1453, 1455, 1457, 1459, 1461, 1463, 1465, 1467, 1469, 1471, 1472, 1474, 1475, 1477, 1488, 1490, 1491, 1494, 1499, 1500, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1527, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1588, 1590, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1617], "3": [0, 1, 2, 3, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 213, 214, 217, 218, 225, 226, 249, 250, 253, 254, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 651, 653, 654, 660, 662, 666, 669, 670, 675, 677, 678, 679, 680, 705, 710, 712, 714, 716, 718, 720, 722, 724, 732, 733, 753, 755, 763, 765, 774, 776, 786, 788, 789, 792, 793, 796, 798, 800, 802, 804, 806, 808, 810, 820, 822, 825, 827, 844, 846, 848, 850, 859, 861, 873, 878, 879, 881, 890, 894, 897, 901, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1039, 1041, 1043, 1045, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1083, 1085, 1087, 1089, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1132, 1135, 1136, 1139, 1144, 1151, 1152, 1155, 1157, 1159, 1161, 1165, 1167, 1184, 1189, 1191, 1193, 1195, 1204, 1206, 1210, 1212, 1214, 1218, 1220, 1236, 1238, 1240, 1246, 1249, 1255, 1256, 1265, 1266, 1268, 1273, 1274, 1276, 1277, 1279, 1281, 1282, 1284, 1288, 1290, 1292, 1295, 1297, 1298, 1301, 1307, 1308, 1310, 1312, 1313, 1315, 1316, 1318, 1320, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1349, 1351, 1353, 1355, 1364, 1366, 1372, 1374, 1389, 1392, 1393, 1397, 1398, 1401, 1402, 1405, 1414, 1417, 1418, 1419, 1421, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1443, 1445, 1447, 1449, 1453, 1455, 1457, 1459, 1461, 1463, 1465, 1467, 1469, 1471, 1475, 1477, 1488, 1490, 1491, 1494, 1499, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1594, 1596, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1617], "1": [0, 1, 2, 3, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 229, 230, 233, 238, 244, 247, 248, 249, 250, 251, 252, 253, 254, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 647, 652, 653, 654, 657, 660, 662, 663, 664, 665, 669, 670, 672, 673, 674, 675, 677, 678, 679, 680, 692, 705, 710, 712, 714, 716, 718, 720, 722, 724, 733, 734, 735, 752, 753, 755, 757, 758, 760, 761, 763, 765, 771, 772, 774, 776, 789, 792, 793, 796, 798, 800, 802, 804, 806, 808, 810, 820, 822, 824, 825, 827, 844, 846, 848, 850, 873, 878, 879, 881, 886, 889, 890, 897, 901, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 943, 945, 947, 949, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1083, 1085, 1087, 1089, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1132, 1135, 1136, 1139, 1144, 1145, 1147, 1151, 1152, 1155, 1157, 1159, 1161, 1164, 1165, 1167, 1184, 1189, 1191, 1193, 1195, 1204, 1206, 1210, 1212, 1214, 1218, 1220, 1224, 1227, 1228, 1236, 1238, 1240, 1242, 1246, 1249, 1251, 1254, 1255, 1256, 1260, 1263, 1265, 1266, 1268, 1273, 1274, 1276, 1277, 1279, 1281, 1282, 1284, 1288, 1290, 1292, 1295, 1297, 1298, 1301, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1320, 1322, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1349, 1351, 1353, 1355, 1364, 1366, 1372, 1374, 1385, 1387, 1389, 1392, 1393, 1397, 1398, 1401, 1402, 1405, 1406, 1409, 1410, 1413, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1443, 1445, 1447, 1449, 1450, 1452, 1453, 1455, 1457, 1459, 1461, 1463, 1465, 1467, 1469, 1471, 1472, 1474, 1475, 1477, 1488, 1490, 1491, 1494, 1499, 1500, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1617], "y": [0, 1, 2, 3, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 221, 222, 223, 224, 225, 226, 229, 230, 249, 250, 253, 254, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 636, 637, 640, 641, 642, 643, 644, 645, 646, 647, 656, 660, 663, 666, 669, 675, 677, 705, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 733, 753, 755, 763, 765, 771, 772, 774, 776, 789, 792, 793, 796, 798, 800, 802, 804, 806, 820, 822, 825, 827, 835, 837, 859, 861, 873, 879, 881, 886, 890, 891, 895, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1027, 1029, 1031, 1033, 1039, 1041, 1043, 1045, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1083, 1085, 1087, 1089, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1132, 1135, 1136, 1139, 1144, 1145, 1147, 1151, 1152, 1155, 1157, 1159, 1161, 1164, 1165, 1167, 1184, 1185, 1189, 1191, 1193, 1195, 1204, 1206, 1210, 1212, 1214, 1230, 1233, 1236, 1238, 1240, 1246, 1249, 1251, 1254, 1255, 1256, 1265, 1272, 1292, 1295, 1298, 1301, 1307, 1316, 1318, 1320, 1324, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1349, 1351, 1353, 1355, 1372, 1374, 1393, 1397, 1398, 1401, 1402, 1405, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1443, 1445, 1447, 1449, 1453, 1455, 1457, 1459, 1461, 1463, 1465, 1467, 1469, 1471, 1475, 1477, 1488, 1491, 1494, 1504, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1546, 1549, 1550, 1555, 1558, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "print": [0, 1, 2, 3, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 236, 237, 238, 244, 249, 250, 251, 252, 253, 254, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 660, 662, 669, 675, 677, 678, 679, 705, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 733, 752, 753, 755, 763, 765, 771, 772, 774, 776, 786, 788, 789, 792, 793, 796, 798, 800, 802, 804, 806, 808, 810, 813, 820, 822, 824, 829, 830, 832, 833, 839, 844, 846, 848, 850, 859, 861, 872, 873, 879, 881, 886, 887, 888, 889, 890, 891, 892, 895, 902, 903, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 991, 993, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1039, 1041, 1043, 1045, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1083, 1085, 1087, 1089, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1132, 1135, 1136, 1139, 1144, 1145, 1147, 1150, 1151, 1152, 1155, 1157, 1159, 1161, 1164, 1165, 1167, 1184, 1189, 1191, 1193, 1195, 1199, 1200, 1204, 1206, 1210, 1212, 1214, 1225, 1230, 1233, 1236, 1238, 1240, 1246, 1249, 1251, 1254, 1255, 1256, 1265, 1266, 1268, 1273, 1274, 1276, 1277, 1279, 1281, 1282, 1284, 1288, 1290, 1291, 1292, 1295, 1296, 1297, 1298, 1301, 1306, 1307, 1308, 1310, 1313, 1315, 1316, 1318, 1320, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1349, 1351, 1353, 1355, 1372, 1374, 1389, 1392, 1393, 1397, 1398, 1401, 1402, 1405, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1443, 1445, 1447, 1449, 1453, 1455, 1457, 1459, 1461, 1463, 1465, 1467, 1469, 1471, 1475, 1477, 1488, 1490, 1491, 1494, 1499, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1617], "185": [0, 1, 249, 250], "046": [0, 1, 249, 250], "return": [0, 1, 2, 3, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 233, 236, 237, 244, 249, 250, 251, 252, 253, 254, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 651, 652, 656, 657, 658, 659, 660, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 675, 677, 678, 679, 680, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 730, 731, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 767, 769, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 794, 795, 796, 798, 800, 802, 804, 806, 808, 810, 812, 813, 814, 815, 816, 818, 819, 820, 822, 824, 825, 827, 829, 830, 832, 833, 835, 837, 839, 840, 842, 844, 846, 848, 850, 852, 855, 857, 858, 859, 861, 867, 872, 873, 875, 876, 877, 878, 879, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 901, 902, 903, 904, 905, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1145, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1157, 1159, 1161, 1163, 1164, 1165, 1167, 1169, 1170, 1171, 1172, 1174, 1176, 1178, 1180, 1182, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1193, 1195, 1198, 1199, 1200, 1201, 1202, 1204, 1206, 1208, 1209, 1210, 1212, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1227, 1228, 1229, 1230, 1231, 1232, 1234, 1236, 1237, 1238, 1240, 1242, 1243, 1244, 1245, 1246, 1249, 1250, 1251, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1263, 1264, 1265, 1266, 1268, 1269, 1271, 1272, 1273, 1274, 1276, 1277, 1279, 1281, 1282, 1284, 1285, 1287, 1288, 1290, 1291, 1292, 1295, 1296, 1297, 1298, 1301, 1302, 1305, 1306, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1322, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1345, 1347, 1348, 1349, 1351, 1353, 1355, 1356, 1358, 1360, 1362, 1364, 1366, 1368, 1370, 1372, 1374, 1376, 1377, 1379, 1381, 1383, 1385, 1387, 1389, 1392, 1393, 1397, 1398, 1401, 1402, 1405, 1406, 1409, 1410, 1413, 1414, 1417, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1440, 1442, 1443, 1445, 1447, 1449, 1450, 1452, 1453, 1455, 1457, 1459, 1461, 1463, 1465, 1467, 1469, 1471, 1472, 1474, 1475, 1477, 1478, 1480, 1481, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1494, 1498, 1499, 1500, 1501, 1505, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1527, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1559, 1562, 1563, 1566, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1617], "type": [0, 1, 2, 3, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 238, 244, 249, 250, 251, 252, 253, 254, 607, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 655, 656, 657, 658, 659, 660, 662, 663, 664, 667, 668, 669, 671, 672, 673, 675, 677, 678, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 730, 731, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 767, 769, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 794, 795, 796, 798, 800, 802, 804, 806, 808, 810, 813, 814, 815, 816, 818, 819, 820, 822, 824, 825, 827, 829, 830, 832, 833, 835, 837, 839, 840, 842, 844, 846, 848, 850, 852, 855, 857, 858, 859, 861, 863, 867, 872, 873, 875, 876, 877, 878, 879, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 901, 902, 903, 904, 905, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1145, 1147, 1149, 1151, 1152, 1154, 1155, 1157, 1159, 1161, 1164, 1165, 1167, 1169, 1170, 1171, 1172, 1174, 1176, 1178, 1180, 1182, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1193, 1195, 1198, 1199, 1200, 1201, 1202, 1204, 1206, 1208, 1210, 1212, 1214, 1215, 1217, 1218, 1219, 1220, 1224, 1227, 1228, 1229, 1230, 1231, 1232, 1234, 1236, 1237, 1238, 1240, 1242, 1243, 1245, 1246, 1249, 1250, 1251, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1263, 1264, 1265, 1266, 1268, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1284, 1285, 1287, 1288, 1290, 1292, 1295, 1298, 1301, 1302, 1305, 1306, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1322, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1345, 1347, 1348, 1349, 1351, 1353, 1355, 1356, 1358, 1360, 1362, 1364, 1366, 1368, 1370, 1372, 1374, 1376, 1377, 1379, 1381, 1383, 1385, 1387, 1389, 1392, 1393, 1397, 1398, 1401, 1402, 1405, 1406, 1409, 1410, 1413, 1414, 1417, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1440, 1442, 1443, 1445, 1447, 1449, 1450, 1452, 1453, 1455, 1457, 1459, 1461, 1463, 1465, 1467, 1469, 1471, 1472, 1474, 1475, 1477, 1478, 1480, 1481, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1494, 1498, 1499, 1500, 1505, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1527, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1559, 1562, 1563, 1566, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1617], "leaky_relu": [0, 1, 249, 250, 662, 705, 1617], "alpha": [0, 1, 249, 250, 662, 663, 705, 710, 712], "2": [0, 1, 2, 3, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 229, 230, 233, 236, 249, 250, 253, 254, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 647, 651, 652, 653, 654, 657, 660, 662, 666, 669, 670, 674, 675, 677, 678, 679, 680, 692, 705, 710, 712, 714, 716, 718, 720, 722, 724, 732, 733, 752, 753, 755, 763, 765, 771, 772, 774, 776, 789, 792, 793, 796, 798, 800, 802, 804, 806, 808, 810, 820, 822, 825, 827, 844, 846, 848, 850, 873, 878, 879, 881, 883, 886, 888, 890, 894, 897, 901, 906, 907, 909, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 943, 945, 947, 949, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1043, 1045, 1047, 1049, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1083, 1085, 1087, 1089, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1132, 1135, 1136, 1139, 1144, 1145, 1147, 1151, 1152, 1155, 1157, 1159, 1161, 1165, 1167, 1184, 1189, 1191, 1193, 1195, 1204, 1206, 1210, 1212, 1214, 1218, 1220, 1236, 1238, 1240, 1246, 1249, 1256, 1265, 1266, 1268, 1273, 1274, 1276, 1277, 1279, 1281, 1282, 1284, 1288, 1290, 1292, 1295, 1297, 1298, 1301, 1307, 1308, 1310, 1313, 1314, 1315, 1316, 1318, 1320, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1349, 1351, 1353, 1355, 1356, 1358, 1364, 1366, 1372, 1374, 1376, 1377, 1379, 1389, 1392, 1393, 1397, 1398, 1401, 1402, 1405, 1410, 1413, 1418, 1419, 1421, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1443, 1445, 1447, 1449, 1453, 1455, 1457, 1459, 1461, 1463, 1465, 1467, 1469, 1471, 1475, 1477, 1488, 1490, 1491, 1494, 1499, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1594, 1596, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1617], "39": [0, 1, 199, 200, 217, 218, 249, 250, 618, 619, 622, 623, 628, 629, 636, 637, 705, 710, 712, 906, 927, 929, 991, 993, 1043, 1045, 1265, 1266, 1268, 1328, 1372, 1374, 1510, 1519, 1521, 1581, 1582, 1584], "85": [0, 1, 217, 218, 249, 250, 618, 619, 622, 623, 636, 637, 705, 710, 712, 906, 963, 965, 1144, 1238, 1240, 1265, 1274, 1276, 1510, 1523, 1525], "17": [0, 1, 249, 250, 622, 623, 626, 627, 636, 637, 660, 669, 705, 710, 712, 906, 979, 981, 1144, 1214, 1265, 1266, 1268, 1328, 1341, 1343, 1393, 1397, 1510, 1523, 1525], "relu": [0, 1, 231, 232, 249, 250, 664, 678, 679, 705, 710, 712, 1617], "sigmoid": [0, 1, 249, 250, 675, 678, 679, 705, 1617], "269": [0, 1, 249, 250, 705, 718, 720], "731": [0, 1, 249, 250, 705, 718, 720], "881": [0, 1, 199, 200, 249, 250, 618, 619, 705, 718, 720, 906, 927, 929], "softmax": [0, 1, 231, 232, 249, 250, 705, 1307, 1326, 1327, 1617], "axi": [0, 1, 201, 202, 209, 210, 211, 212, 213, 214, 219, 220, 223, 224, 225, 226, 229, 230, 249, 250, 251, 252, 612, 613, 620, 621, 628, 629, 630, 631, 632, 633, 638, 639, 642, 643, 644, 645, 646, 647, 657, 660, 662, 663, 665, 669, 670, 672, 673, 675, 677, 680, 691, 705, 722, 724, 733, 757, 758, 760, 761, 873, 896, 1144, 1165, 1167, 1169, 1189, 1191, 1260, 1263, 1328, 1333, 1335, 1341, 1343, 1406, 1409, 1410, 1413, 1418, 1423, 1425, 1427, 1429, 1431, 1436, 1438, 1440, 1442, 1443, 1445, 1447, 1449, 1453, 1455, 1461, 1463, 1465, 1467, 1469, 1471, 1472, 1474, 1475, 1477, 1478, 1480, 1481, 1483, 1510, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1567, 1568, 1570, 1577, 1579, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "422": [0, 1, 249, 250, 705, 722, 724], "155": [0, 1, 249, 250, 705, 722, 724], "softplu": [0, 1, 249, 250, 705, 1617], "3461": [0, 1, 249, 250, 705, 726, 728], "6491": [0, 1, 249, 250, 705, 726, 728], "535": [0, 1, 249, 250, 705, 726, 728], "42": [0, 1, 217, 218, 249, 250, 622, 623, 634, 635, 636, 637, 675, 680, 705, 726, 728, 1144, 1165, 1167, 1265, 1266, 1268, 1274, 1276, 1328, 1372, 1374, 1510, 1527, 1581, 1582, 1584], "activ": [1, 231, 232, 250, 648, 649, 651, 652, 654, 656, 679, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 1617], "support": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 194, 196, 198, 200, 202, 203, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 252, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 613, 615, 616, 617, 619, 621, 622, 623, 625, 627, 628, 629, 631, 633, 635, 637, 639, 641, 643, 645, 647, 649, 651, 657, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 671, 672, 674, 675, 677, 678, 680, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 731, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1485, 1486, 1487, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1507, 1508, 1509, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1621, 1622, 1623, 1625, 1626, 1628, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1648, 1650, 1652, 1653, 1654, 1655, 1656, 1658, 1659, 1661], "framework": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 198, 200, 202, 203, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 613, 615, 617, 619, 621, 622, 623, 625, 627, 629, 631, 633, 635, 637, 639, 641, 643, 645, 647, 649, 651, 653, 655, 657, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 674, 675, 677, 680, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1485, 1486, 1487, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1507, 1508, 1509, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1621, 1622, 1623, 1625, 1626, 1628, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1648, 1650, 1652, 1653, 1654, 1655, 1656, 1658, 1659, 1661], "data": [2, 3, 4, 193, 194, 196, 199, 200, 203, 204, 209, 210, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 245, 247, 251, 252, 253, 254, 612, 613, 615, 618, 619, 622, 623, 628, 629, 632, 633, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 651, 655, 656, 657, 658, 659, 664, 665, 667, 669, 671, 672, 675, 677, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 763, 765, 767, 769, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 794, 795, 796, 798, 804, 806, 808, 810, 813, 820, 822, 824, 825, 827, 829, 830, 832, 833, 835, 837, 839, 840, 842, 844, 846, 848, 850, 852, 855, 857, 859, 861, 863, 867, 872, 873, 874, 875, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1087, 1089, 1095, 1097, 1099, 1101, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1151, 1152, 1210, 1212, 1217, 1218, 1220, 1243, 1265, 1277, 1279, 1302, 1305, 1307, 1324, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1345, 1347, 1348, 1349, 1351, 1353, 1355, 1364, 1366, 1368, 1370, 1372, 1374, 1376, 1377, 1379, 1385, 1387, 1389, 1392, 1398, 1401, 1402, 1405, 1406, 1409, 1410, 1413, 1431, 1443, 1445, 1447, 1449, 1450, 1452, 1457, 1459, 1461, 1463, 1469, 1471, 1472, 1474, 1510, 1515, 1517, 1519, 1521, 1523, 1525, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1567, 1568, 1570, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1616, 1617, 1623], "arraywithcr": [2, 3, 193, 677], "arraywithdatatyp": [2, 3, 195, 677], "arraywithdevic": [2, 3, 197, 677], "arraywithelementwis": [2, 3, 199, 653, 668, 677], "arraywithgener": [2, 3, 201, 677], "arraywithgradi": [2, 3, 203, 677], "arraywithimag": [2, 3, 205, 677], "arraywithlay": [2, 3, 207, 677], "arraywithlinearalgebra": [2, 3, 209, 677], "arraywithloss": [2, 3, 211, 677], "arraywithmanipul": [2, 3, 213, 677], "arraywithnorm": [2, 3, 215, 677], "arraywithrandom": [2, 3, 217, 677], "arraywithsearch": [2, 3, 219, 677], "arraywithset": [2, 3, 221, 677], "arraywithsort": [2, 3, 223, 677], "arraywithstatist": [2, 3, 225, 677], "arraywithutil": [2, 3, 229, 677], "properti": [2, 3, 251, 252, 660, 662, 664, 665, 669, 677, 678, 679], "t": [2, 3, 231, 232, 233, 237, 247, 248, 648, 649, 651, 652, 653, 654, 660, 662, 667, 670, 675, 677, 678, 679, 680, 692, 1144, 1152, 1307, 1324, 1325], "__add__": [2, 3, 253, 254, 657, 659, 660, 668, 669, 677], "other": [2, 3, 195, 196, 201, 202, 225, 226, 247, 251, 252, 253, 254, 614, 615, 618, 619, 620, 621, 644, 645, 651, 652, 656, 659, 660, 661, 662, 663, 664, 665, 668, 669, 672, 673, 675, 677, 679, 680, 690, 691, 692, 730, 731, 733, 734, 735, 793, 858, 906, 995, 997, 1043, 1045, 1144, 1145, 1147, 1149, 1265, 1272, 1510, 1523, 1525, 1550, 1559, 1562, 1581, 1597, 1599, 1603, 1606, 1616, 1617], "special": [2, 3, 225, 226, 253, 254, 653, 656, 657, 659, 660, 663, 668, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 963, 965, 967, 969, 971, 973, 975, 977, 991, 993, 995, 997, 999, 1001, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1059, 1061, 1079, 1081, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1132, 1135, 1136, 1139, 1140, 1143, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1597, 1599, 1600, 1602, 1603, 1606], "add": [2, 3, 199, 200, 215, 216, 231, 232, 251, 252, 253, 254, 618, 619, 620, 621, 634, 635, 642, 643, 648, 649, 651, 652, 653, 655, 656, 657, 659, 661, 662, 663, 665, 666, 668, 669, 672, 675, 677, 692, 793, 813, 906, 907, 909, 1043, 1045, 1071, 1073, 1075, 1077, 1144, 1256, 1265, 1291, 1306, 1506, 1507, 1509, 1617, 1623], "paramet": [2, 3, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 236, 237, 249, 250, 251, 252, 253, 254, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 656, 657, 659, 662, 675, 677, 678, 691, 705, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 730, 731, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 767, 769, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 794, 795, 796, 798, 800, 802, 804, 806, 808, 810, 812, 813, 814, 815, 816, 818, 819, 820, 822, 824, 825, 827, 829, 830, 832, 833, 835, 837, 839, 840, 842, 844, 846, 848, 850, 852, 855, 857, 859, 861, 863, 864, 865, 866, 867, 872, 873, 874, 875, 876, 877, 878, 879, 881, 883, 884, 885, 886, 888, 890, 891, 892, 893, 894, 895, 896, 897, 901, 902, 905, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1145, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1157, 1159, 1161, 1164, 1165, 1167, 1169, 1171, 1172, 1174, 1176, 1178, 1180, 1182, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1193, 1195, 1202, 1203, 1204, 1206, 1208, 1209, 1210, 1212, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1224, 1227, 1228, 1230, 1231, 1233, 1235, 1236, 1238, 1240, 1242, 1243, 1245, 1246, 1249, 1250, 1251, 1254, 1255, 1256, 1260, 1263, 1264, 1265, 1266, 1268, 1269, 1271, 1272, 1273, 1274, 1276, 1277, 1279, 1281, 1282, 1284, 1285, 1287, 1288, 1290, 1291, 1292, 1295, 1296, 1297, 1298, 1301, 1302, 1305, 1306, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1322, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1345, 1347, 1348, 1349, 1351, 1353, 1355, 1356, 1358, 1364, 1366, 1368, 1370, 1372, 1374, 1376, 1377, 1379, 1381, 1383, 1385, 1387, 1389, 1392, 1393, 1397, 1398, 1401, 1402, 1405, 1406, 1409, 1410, 1413, 1414, 1417, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1440, 1442, 1443, 1445, 1447, 1449, 1450, 1452, 1453, 1455, 1457, 1459, 1461, 1463, 1465, 1467, 1469, 1471, 1472, 1474, 1475, 1477, 1478, 1480, 1481, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1527, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1559, 1562, 1563, 1566, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "self": [2, 3, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 249, 250, 251, 252, 253, 254, 607, 610, 611, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 668, 669, 675, 677, 678, 679, 680, 873, 1617], "first": [2, 3, 199, 200, 201, 202, 209, 210, 217, 218, 219, 220, 221, 222, 246, 247, 253, 254, 607, 608, 609, 618, 619, 620, 621, 628, 629, 636, 637, 640, 641, 651, 652, 654, 657, 660, 662, 664, 665, 667, 668, 669, 675, 677, 678, 680, 730, 731, 733, 757, 758, 760, 761, 793, 857, 867, 873, 878, 906, 919, 921, 943, 945, 951, 953, 955, 957, 959, 961, 963, 965, 983, 985, 1003, 1005, 1011, 1013, 1027, 1029, 1031, 1033, 1051, 1053, 1055, 1057, 1063, 1065, 1067, 1069, 1079, 1081, 1087, 1089, 1095, 1097, 1127, 1131, 1144, 1151, 1265, 1272, 1328, 1333, 1335, 1341, 1343, 1345, 1347, 1353, 1355, 1372, 1374, 1377, 1379, 1389, 1392, 1398, 1401, 1406, 1409, 1431, 1436, 1438, 1461, 1463, 1472, 1474, 1475, 1477, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1498, 1499, 1510, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1550, 1551, 1554, 1555, 1558, 1567, 1572, 1575], "input": [2, 3, 188, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 249, 250, 251, 252, 253, 254, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 656, 657, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 675, 677, 678, 679, 680, 692, 693, 703, 705, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 730, 731, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 767, 769, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 796, 798, 800, 802, 804, 806, 808, 810, 812, 813, 814, 815, 816, 818, 819, 820, 822, 824, 825, 827, 835, 837, 839, 840, 842, 844, 846, 848, 850, 852, 855, 857, 858, 859, 861, 863, 867, 872, 873, 878, 879, 881, 890, 896, 897, 901, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1145, 1147, 1149, 1151, 1152, 1153, 1155, 1157, 1159, 1161, 1164, 1165, 1167, 1169, 1171, 1172, 1174, 1176, 1178, 1180, 1182, 1184, 1185, 1186, 1189, 1191, 1193, 1195, 1201, 1202, 1204, 1206, 1208, 1210, 1212, 1214, 1215, 1217, 1218, 1219, 1220, 1224, 1227, 1228, 1229, 1232, 1236, 1238, 1240, 1243, 1245, 1246, 1249, 1250, 1251, 1254, 1255, 1257, 1258, 1260, 1263, 1264, 1265, 1266, 1268, 1269, 1271, 1272, 1273, 1274, 1276, 1277, 1279, 1281, 1282, 1284, 1285, 1287, 1288, 1290, 1292, 1295, 1297, 1298, 1301, 1302, 1305, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1322, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1345, 1347, 1348, 1349, 1351, 1353, 1355, 1356, 1358, 1364, 1366, 1368, 1370, 1372, 1374, 1376, 1377, 1379, 1381, 1383, 1385, 1387, 1389, 1392, 1393, 1397, 1398, 1401, 1402, 1405, 1406, 1409, 1410, 1413, 1414, 1417, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1440, 1442, 1443, 1445, 1447, 1449, 1450, 1452, 1453, 1455, 1457, 1459, 1461, 1463, 1465, 1467, 1469, 1471, 1472, 1474, 1475, 1477, 1478, 1480, 1481, 1483, 1484, 1485, 1486, 1487, 1488, 1490, 1491, 1494, 1499, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1559, 1562, 1563, 1566, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "should": [2, 3, 193, 194, 199, 200, 203, 204, 209, 210, 213, 214, 217, 218, 219, 220, 225, 226, 245, 247, 249, 250, 251, 252, 253, 254, 618, 619, 622, 623, 628, 629, 632, 633, 636, 637, 638, 639, 642, 643, 644, 645, 648, 649, 651, 652, 653, 654, 656, 657, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 677, 678, 679, 730, 731, 733, 763, 765, 778, 781, 782, 785, 793, 804, 806, 858, 873, 874, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 991, 993, 995, 997, 999, 1001, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1079, 1081, 1087, 1089, 1095, 1097, 1099, 1101, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1154, 1215, 1224, 1265, 1269, 1271, 1274, 1276, 1282, 1284, 1285, 1287, 1288, 1290, 1307, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1349, 1351, 1353, 1355, 1364, 1366, 1372, 1374, 1376, 1377, 1379, 1385, 1387, 1389, 1392, 1398, 1401, 1402, 1405, 1406, 1409, 1410, 1413, 1431, 1457, 1459, 1510, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1581, 1582, 1584, 1585, 1587, 1588, 1590, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1617], "have": [2, 3, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 675, 676, 677, 678, 679, 680, 691, 692, 705, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 796, 798, 800, 802, 804, 806, 825, 827, 873, 897, 901, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1155, 1157, 1159, 1161, 1164, 1165, 1167, 1172, 1174, 1176, 1178, 1180, 1182, 1185, 1193, 1195, 1208, 1224, 1227, 1228, 1265, 1266, 1268, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1284, 1285, 1287, 1288, 1290, 1292, 1295, 1302, 1305, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1322, 1324, 1326, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1345, 1347, 1348, 1349, 1351, 1353, 1355, 1356, 1358, 1364, 1366, 1368, 1370, 1372, 1374, 1376, 1377, 1379, 1381, 1383, 1385, 1387, 1389, 1392, 1393, 1397, 1398, 1401, 1402, 1405, 1406, 1409, 1410, 1413, 1414, 1417, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1440, 1442, 1443, 1445, 1447, 1449, 1450, 1452, 1453, 1455, 1457, 1459, 1461, 1463, 1469, 1471, 1472, 1474, 1475, 1477, 1478, 1480, 1481, 1483, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1567, 1568, 1570, 1577, 1579, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1616, 1617], "numer": [2, 3, 195, 196, 199, 200, 201, 202, 209, 210, 217, 218, 219, 220, 253, 254, 614, 615, 618, 619, 620, 621, 628, 629, 636, 637, 638, 639, 642, 643, 656, 664, 667, 675, 679, 733, 763, 765, 793, 796, 798, 906, 907, 909, 919, 921, 967, 969, 979, 981, 995, 997, 999, 1001, 1003, 1005, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1059, 1061, 1063, 1065, 1079, 1081, 1083, 1085, 1087, 1089, 1095, 1097, 1099, 1101, 1107, 1109, 1123, 1125, 1127, 1131, 1140, 1143, 1144, 1199, 1200, 1230, 1231, 1238, 1240, 1242, 1328, 1333, 1335, 1353, 1355, 1372, 1374, 1389, 1392, 1398, 1401, 1402, 1405, 1406, 1409, 1510, 1515, 1517, 1519, 1521, 1523, 1525, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1581, 1585, 1587, 1594, 1596, 1600, 1602], "second": [2, 3, 199, 200, 203, 204, 209, 210, 221, 222, 248, 253, 254, 618, 619, 622, 623, 628, 629, 640, 641, 651, 660, 662, 663, 664, 672, 677, 793, 857, 867, 906, 919, 921, 943, 945, 951, 953, 955, 957, 959, 961, 963, 965, 983, 985, 1003, 1005, 1011, 1013, 1027, 1029, 1031, 1033, 1051, 1053, 1055, 1057, 1063, 1065, 1067, 1069, 1079, 1081, 1087, 1089, 1095, 1097, 1127, 1131, 1144, 1151, 1226, 1233, 1265, 1266, 1268, 1269, 1271, 1282, 1284, 1328, 1333, 1335, 1341, 1343, 1345, 1347, 1353, 1355, 1372, 1374, 1377, 1379, 1389, 1392, 1398, 1401, 1406, 1409, 1431, 1472, 1474, 1475, 1477, 1484, 1486, 1488, 1490, 1550, 1551, 1554, 1555, 1558], "must": [2, 3, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 246, 248, 249, 250, 251, 252, 253, 254, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 651, 652, 653, 656, 657, 659, 660, 665, 668, 670, 671, 675, 679, 680, 705, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 796, 798, 800, 802, 804, 806, 873, 896, 897, 901, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1155, 1157, 1159, 1161, 1164, 1165, 1167, 1172, 1174, 1176, 1178, 1180, 1182, 1185, 1193, 1195, 1208, 1224, 1227, 1228, 1265, 1266, 1268, 1269, 1271, 1274, 1276, 1282, 1284, 1285, 1287, 1288, 1290, 1292, 1295, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1322, 1324, 1326, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1345, 1347, 1348, 1349, 1351, 1353, 1355, 1356, 1358, 1364, 1366, 1368, 1370, 1372, 1374, 1376, 1377, 1379, 1381, 1383, 1385, 1387, 1389, 1392, 1393, 1397, 1398, 1401, 1402, 1405, 1406, 1409, 1410, 1413, 1414, 1417, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1440, 1442, 1443, 1445, 1447, 1449, 1450, 1452, 1453, 1455, 1457, 1459, 1461, 1463, 1469, 1471, 1472, 1474, 1475, 1477, 1478, 1480, 1481, 1483, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1527, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1567, 1568, 1570, 1577, 1579, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "compat": [2, 3, 199, 200, 209, 210, 213, 214, 219, 220, 225, 226, 229, 230, 247, 253, 254, 618, 619, 628, 629, 632, 633, 638, 639, 644, 645, 646, 647, 656, 657, 658, 675, 692, 793, 804, 806, 906, 919, 921, 935, 937, 943, 945, 951, 953, 955, 957, 959, 961, 963, 965, 979, 981, 983, 985, 1003, 1005, 1011, 1013, 1027, 1029, 1031, 1033, 1051, 1053, 1055, 1057, 1063, 1065, 1067, 1069, 1079, 1081, 1087, 1089, 1095, 1097, 1099, 1101, 1127, 1131, 1328, 1364, 1366, 1376, 1385, 1387, 1398, 1401, 1406, 1409, 1410, 1413, 1431, 1457, 1459, 1532, 1537, 1539, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1617], "see": [2, 3, 195, 196, 199, 200, 209, 210, 219, 220, 225, 226, 229, 230, 246, 253, 254, 607, 608, 609, 618, 619, 628, 629, 638, 639, 644, 645, 646, 647, 650, 651, 652, 653, 657, 660, 661, 662, 664, 665, 669, 671, 675, 677, 678, 691, 692, 733, 734, 735, 748, 750, 757, 758, 760, 761, 793, 804, 806, 859, 861, 906, 919, 921, 943, 945, 951, 953, 955, 957, 959, 961, 963, 965, 979, 981, 995, 997, 1027, 1029, 1043, 1045, 1051, 1053, 1063, 1065, 1067, 1069, 1079, 1081, 1087, 1089, 1095, 1097, 1099, 1101, 1127, 1131, 1328, 1364, 1366, 1376, 1385, 1387, 1406, 1409, 1410, 1413, 1532, 1537, 1539, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1617], "broadcast": [2, 3, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 225, 226, 229, 230, 249, 250, 253, 254, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 656, 659, 660, 662, 669, 670, 675, 705, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 796, 798, 800, 802, 804, 806, 873, 897, 901, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1155, 1157, 1159, 1161, 1164, 1165, 1167, 1172, 1174, 1176, 1178, 1180, 1182, 1185, 1193, 1195, 1208, 1224, 1227, 1228, 1265, 1266, 1268, 1269, 1271, 1274, 1276, 1282, 1284, 1285, 1287, 1288, 1290, 1292, 1295, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1322, 1324, 1326, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1348, 1349, 1351, 1353, 1355, 1356, 1358, 1364, 1366, 1368, 1370, 1372, 1374, 1376, 1381, 1383, 1385, 1387, 1389, 1392, 1393, 1397, 1398, 1401, 1402, 1405, 1406, 1409, 1410, 1413, 1414, 1417, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1440, 1442, 1443, 1445, 1447, 1449, 1450, 1452, 1453, 1455, 1457, 1459, 1461, 1463, 1469, 1471, 1472, 1474, 1475, 1477, 1478, 1480, 1481, 1483, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1546, 1549, 1550, 1563, 1566, 1567, 1577, 1579, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "ret": [2, 3, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 229, 230, 233, 236, 237, 244, 249, 250, 251, 252, 253, 254, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 656, 659, 663, 675, 680, 705, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 730, 731, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 767, 769, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 794, 795, 796, 798, 800, 802, 804, 806, 808, 810, 812, 813, 820, 822, 824, 825, 827, 829, 830, 832, 833, 835, 837, 839, 840, 842, 844, 846, 848, 850, 852, 855, 857, 859, 861, 872, 873, 875, 876, 878, 879, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 895, 896, 897, 901, 902, 903, 905, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1145, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1157, 1159, 1161, 1163, 1164, 1165, 1167, 1169, 1170, 1171, 1172, 1174, 1176, 1178, 1180, 1182, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1193, 1195, 1199, 1200, 1202, 1204, 1206, 1208, 1209, 1210, 1212, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1224, 1227, 1228, 1236, 1238, 1240, 1242, 1243, 1244, 1245, 1246, 1249, 1250, 1251, 1254, 1255, 1260, 1263, 1264, 1265, 1266, 1268, 1269, 1271, 1272, 1273, 1274, 1276, 1277, 1279, 1281, 1282, 1284, 1285, 1287, 1288, 1290, 1291, 1292, 1295, 1296, 1297, 1298, 1301, 1302, 1305, 1306, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1322, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1345, 1347, 1348, 1349, 1351, 1353, 1355, 1356, 1358, 1364, 1366, 1368, 1370, 1372, 1374, 1376, 1377, 1379, 1381, 1383, 1385, 1387, 1389, 1392, 1393, 1397, 1398, 1401, 1402, 1405, 1406, 1409, 1410, 1413, 1414, 1417, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1440, 1442, 1443, 1445, 1447, 1449, 1450, 1452, 1453, 1455, 1457, 1459, 1461, 1463, 1465, 1467, 1469, 1471, 1472, 1474, 1475, 1477, 1478, 1480, 1481, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1494, 1498, 1499, 1500, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1559, 1562, 1563, 1566, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "an": [2, 3, 188, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 209, 210, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 247, 248, 251, 252, 607, 608, 609, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 628, 629, 632, 633, 636, 637, 640, 641, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 677, 678, 679, 680, 691, 692, 705, 714, 716, 718, 720, 726, 728, 732, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 767, 769, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 796, 798, 800, 802, 804, 806, 808, 810, 813, 825, 827, 835, 837, 840, 842, 848, 850, 858, 859, 861, 873, 897, 901, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1089, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1154, 1155, 1157, 1159, 1161, 1164, 1185, 1186, 1189, 1191, 1204, 1206, 1208, 1210, 1212, 1215, 1217, 1218, 1219, 1220, 1251, 1254, 1255, 1256, 1265, 1277, 1279, 1291, 1292, 1295, 1298, 1301, 1302, 1305, 1306, 1307, 1313, 1318, 1320, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1345, 1347, 1348, 1349, 1351, 1353, 1355, 1360, 1362, 1364, 1366, 1368, 1370, 1376, 1377, 1379, 1381, 1383, 1385, 1387, 1389, 1392, 1402, 1405, 1406, 1409, 1410, 1413, 1431, 1432, 1434, 1436, 1438, 1440, 1442, 1443, 1445, 1447, 1449, 1450, 1452, 1457, 1459, 1461, 1463, 1465, 1467, 1469, 1471, 1472, 1474, 1475, 1477, 1478, 1480, 1481, 1483, 1488, 1494, 1506, 1507, 1509, 1510, 1515, 1517, 1528, 1530, 1532, 1541, 1544, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1559, 1562, 1563, 1566, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1616, 1617], "contain": [2, 3, 188, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 209, 210, 211, 212, 213, 214, 219, 220, 221, 222, 225, 226, 229, 230, 246, 249, 250, 251, 252, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 653, 654, 655, 657, 659, 660, 662, 665, 667, 670, 672, 674, 675, 676, 679, 692, 705, 714, 716, 718, 720, 726, 728, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 796, 798, 800, 802, 804, 806, 808, 810, 820, 822, 825, 827, 835, 837, 840, 842, 844, 846, 848, 850, 859, 861, 873, 879, 881, 886, 890, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1089, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1145, 1147, 1149, 1150, 1152, 1155, 1157, 1159, 1161, 1164, 1165, 1167, 1184, 1189, 1191, 1193, 1195, 1201, 1204, 1206, 1210, 1212, 1214, 1219, 1232, 1233, 1238, 1240, 1246, 1249, 1251, 1254, 1255, 1258, 1265, 1266, 1268, 1274, 1276, 1277, 1279, 1282, 1284, 1288, 1290, 1292, 1295, 1298, 1301, 1302, 1305, 1307, 1308, 1310, 1313, 1316, 1318, 1320, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1345, 1347, 1348, 1349, 1351, 1353, 1355, 1364, 1366, 1368, 1370, 1372, 1374, 1376, 1377, 1379, 1385, 1387, 1389, 1392, 1393, 1397, 1398, 1401, 1402, 1405, 1406, 1409, 1410, 1413, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1443, 1445, 1447, 1449, 1450, 1452, 1453, 1455, 1457, 1459, 1461, 1463, 1465, 1467, 1469, 1471, 1475, 1477, 1484, 1485, 1486, 1487, 1488, 1501, 1504, 1506, 1507, 1509, 1510, 1511, 1513, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1567, 1568, 1570, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1616, 1617], "element": [2, 3, 193, 194, 199, 200, 201, 202, 209, 210, 213, 214, 217, 218, 219, 220, 221, 222, 225, 226, 249, 250, 251, 252, 253, 254, 612, 613, 618, 619, 620, 621, 628, 629, 632, 633, 636, 637, 640, 641, 644, 645, 659, 662, 664, 675, 705, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 733, 734, 735, 752, 753, 755, 778, 781, 782, 785, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1151, 1152, 1155, 1157, 1159, 1161, 1165, 1167, 1169, 1185, 1208, 1251, 1254, 1255, 1265, 1291, 1306, 1307, 1322, 1328, 1333, 1335, 1345, 1347, 1353, 1355, 1377, 1379, 1389, 1392, 1431, 1432, 1434, 1447, 1449, 1453, 1455, 1461, 1463, 1465, 1467, 1469, 1471, 1488, 1491, 1510, 1511, 1513, 1532, 1541, 1544, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1559, 1562, 1563, 1566, 1567, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "wise": [2, 3, 199, 200, 209, 210, 249, 250, 251, 252, 253, 254, 618, 619, 628, 629, 705, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 906, 907, 909, 911, 913, 919, 921, 923, 925, 931, 933, 935, 937, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 979, 981, 983, 985, 987, 989, 1003, 1005, 1007, 1009, 1011, 1013, 1027, 1029, 1031, 1033, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1087, 1089, 1095, 1097, 1099, 1101, 1127, 1131, 1144, 1185, 1431, 1432, 1434], "sum": [2, 3, 199, 200, 201, 202, 225, 226, 251, 252, 253, 254, 618, 619, 620, 621, 644, 645, 665, 669, 670, 672, 675, 873, 896, 906, 919, 921, 1051, 1053, 1144, 1169, 1176, 1178, 1227, 1228, 1307, 1327, 1328, 1389, 1392, 1402, 1405, 1410, 1413, 1581, 1582, 1584, 1597, 1599], "The": [2, 3, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 233, 236, 237, 245, 246, 248, 249, 250, 251, 252, 253, 254, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 647, 650, 651, 653, 654, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 678, 679, 680, 691, 705, 706, 708, 710, 712, 722, 724, 730, 731, 733, 734, 735, 748, 750, 760, 761, 778, 781, 782, 785, 793, 794, 795, 796, 798, 813, 824, 829, 830, 832, 833, 839, 844, 846, 852, 855, 857, 866, 867, 872, 873, 874, 875, 876, 877, 878, 883, 884, 885, 886, 890, 891, 892, 893, 894, 895, 896, 902, 905, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1079, 1081, 1087, 1089, 1095, 1097, 1099, 1101, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1149, 1151, 1154, 1155, 1157, 1170, 1171, 1186, 1187, 1188, 1193, 1195, 1210, 1212, 1214, 1215, 1217, 1218, 1219, 1220, 1222, 1227, 1228, 1230, 1231, 1233, 1238, 1240, 1242, 1244, 1245, 1250, 1264, 1265, 1266, 1268, 1269, 1271, 1274, 1276, 1282, 1284, 1285, 1287, 1288, 1290, 1292, 1295, 1302, 1305, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1322, 1324, 1326, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1345, 1347, 1348, 1349, 1351, 1356, 1358, 1364, 1366, 1368, 1370, 1372, 1374, 1376, 1377, 1379, 1381, 1383, 1385, 1387, 1389, 1392, 1393, 1397, 1398, 1401, 1402, 1405, 1406, 1409, 1410, 1413, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1436, 1438, 1440, 1442, 1447, 1449, 1450, 1452, 1453, 1455, 1457, 1459, 1465, 1467, 1478, 1480, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1513, 1519, 1521, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1616, 1617], "determin": [2, 3, 199, 200, 209, 210, 229, 230, 246, 251, 252, 253, 254, 618, 619, 628, 629, 642, 643, 646, 647, 659, 664, 665, 669, 670, 671, 793, 808, 810, 813, 824, 839, 840, 842, 844, 846, 848, 850, 852, 855, 872, 873, 887, 888, 889, 903, 906, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 951, 953, 955, 957, 959, 961, 963, 965, 971, 973, 975, 977, 979, 981, 991, 993, 995, 997, 1015, 1017, 1019, 1021, 1023, 1025, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1067, 1069, 1079, 1081, 1095, 1097, 1099, 1101, 1111, 1113, 1115, 1117, 1119, 1121, 1132, 1135, 1136, 1139, 1144, 1145, 1147, 1151, 1152, 1204, 1206, 1209, 1216, 1217, 1218, 1219, 1220, 1243, 1264, 1265, 1277, 1279, 1307, 1326, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1349, 1351, 1353, 1355, 1364, 1366, 1372, 1374, 1376, 1381, 1383, 1385, 1387, 1402, 1405, 1406, 1409, 1410, 1413, 1484, 1485, 1486, 1487, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1607, 1608, 1610, 1612, 1614], "promot": [2, 3, 195, 196, 199, 200, 209, 210, 253, 254, 614, 615, 618, 619, 628, 629, 642, 643, 659, 665, 670, 793, 796, 798, 808, 810, 857, 858, 859, 861, 867, 906, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 939, 941, 943, 945, 951, 953, 955, 957, 959, 961, 963, 965, 971, 973, 975, 977, 979, 981, 991, 993, 995, 997, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1067, 1069, 1079, 1081, 1095, 1097, 1099, 1101, 1111, 1113, 1115, 1117, 1119, 1121, 1132, 1135, 1136, 1139, 1328, 1329, 1331, 1333, 1335, 1349, 1351, 1353, 1355, 1364, 1366, 1372, 1374, 1376, 1385, 1387, 1406, 1409, 1410, 1413, 1431, 1472, 1474, 1581, 1588, 1590], "With": [2, 3, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 209, 210, 219, 220, 247, 248, 253, 254, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 651, 660, 662, 663, 675, 705, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 733, 752, 753, 755, 763, 765, 789, 792, 793, 796, 798, 800, 802, 804, 806, 808, 810, 813, 820, 822, 824, 825, 827, 835, 837, 844, 846, 848, 850, 859, 861, 863, 873, 879, 881, 890, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 955, 957, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1039, 1041, 1043, 1045, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1083, 1085, 1087, 1089, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1132, 1135, 1136, 1139, 1144, 1145, 1147, 1152, 1155, 1157, 1159, 1161, 1164, 1165, 1167, 1184, 1189, 1191, 1193, 1195, 1204, 1206, 1210, 1212, 1214, 1238, 1240, 1246, 1249, 1251, 1254, 1255, 1265, 1266, 1268, 1274, 1276, 1277, 1279, 1281, 1282, 1284, 1288, 1290, 1292, 1295, 1297, 1298, 1301, 1307, 1308, 1310, 1313, 1316, 1318, 1320, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1353, 1355, 1356, 1358, 1364, 1366, 1393, 1397, 1398, 1401, 1418, 1419, 1421, 1427, 1429, 1431, 1432, 1434, 1443, 1445, 1447, 1449, 1453, 1455, 1457, 1459, 1461, 1463, 1465, 1467, 1469, 1471, 1475, 1477, 1488, 1490, 1491, 1494, 1499, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1513, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "onli": [2, 3, 217, 218, 246, 251, 252, 636, 637, 650, 651, 652, 653, 656, 657, 658, 660, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 675, 677, 678, 679, 680, 690, 692, 793, 858, 873, 892, 906, 1059, 1061, 1063, 1065, 1328, 1353, 1355, 1377, 1379, 1431, 1447, 1449, 1488, 1489, 1490, 1498, 1499, 1510, 1515, 1517, 1519, 1521, 1523, 1525, 1532, 1533, 1535, 1537, 1539, 1581, 1588, 1590, 1617], "4": [2, 3, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 213, 214, 217, 218, 225, 226, 248, 249, 250, 251, 252, 253, 254, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 653, 654, 660, 662, 666, 669, 675, 677, 678, 679, 680, 705, 710, 712, 714, 716, 722, 724, 733, 753, 755, 763, 765, 774, 776, 789, 792, 793, 800, 802, 804, 806, 808, 810, 820, 822, 825, 827, 844, 846, 848, 850, 859, 861, 873, 879, 881, 883, 890, 894, 906, 907, 909, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 943, 945, 955, 957, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1039, 1041, 1043, 1045, 1067, 1069, 1071, 1073, 1075, 1077, 1083, 1085, 1087, 1089, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1132, 1135, 1136, 1139, 1144, 1152, 1155, 1157, 1159, 1161, 1164, 1165, 1167, 1186, 1189, 1191, 1193, 1195, 1204, 1206, 1210, 1212, 1218, 1220, 1238, 1240, 1246, 1249, 1256, 1265, 1266, 1268, 1273, 1274, 1276, 1277, 1279, 1281, 1282, 1284, 1288, 1290, 1292, 1295, 1297, 1298, 1301, 1307, 1308, 1310, 1313, 1314, 1315, 1318, 1320, 1325, 1327, 1328, 1329, 1331, 1337, 1339, 1341, 1343, 1349, 1351, 1353, 1355, 1364, 1366, 1372, 1374, 1393, 1397, 1398, 1401, 1402, 1405, 1418, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1443, 1445, 1447, 1449, 1453, 1455, 1457, 1459, 1461, 1463, 1465, 1467, 1469, 1471, 1475, 1477, 1488, 1490, 1491, 1494, 1499, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1513, 1519, 1521, 1523, 1525, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1617], "5": [2, 3, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 209, 210, 213, 214, 215, 216, 217, 218, 223, 224, 225, 226, 253, 254, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 642, 643, 644, 645, 652, 654, 657, 660, 662, 664, 666, 677, 678, 679, 705, 710, 712, 714, 716, 722, 724, 733, 753, 755, 763, 765, 774, 776, 786, 788, 789, 792, 793, 800, 802, 804, 806, 808, 810, 820, 822, 825, 827, 844, 846, 848, 850, 859, 861, 873, 879, 881, 890, 894, 906, 907, 909, 915, 917, 919, 921, 923, 925, 927, 929, 935, 937, 939, 941, 943, 945, 955, 957, 959, 961, 963, 965, 967, 969, 975, 977, 979, 981, 983, 985, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1039, 1041, 1043, 1045, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1083, 1085, 1087, 1089, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1119, 1121, 1123, 1125, 1132, 1135, 1136, 1139, 1144, 1152, 1155, 1157, 1159, 1161, 1165, 1167, 1189, 1191, 1193, 1195, 1204, 1206, 1210, 1212, 1214, 1218, 1220, 1238, 1240, 1246, 1249, 1256, 1265, 1266, 1268, 1273, 1274, 1276, 1277, 1279, 1281, 1282, 1284, 1288, 1290, 1292, 1295, 1297, 1298, 1301, 1307, 1308, 1310, 1313, 1315, 1316, 1318, 1320, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1349, 1351, 1353, 1355, 1372, 1374, 1393, 1397, 1398, 1401, 1402, 1405, 1418, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1443, 1445, 1447, 1449, 1453, 1455, 1457, 1459, 1461, 1463, 1465, 1467, 1469, 1471, 1475, 1477, 1488, 1490, 1491, 1494, 1499, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1528, 1530, 1532, 1537, 1539, 1541, 1544, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1567, 1568, 1570, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "6": [2, 3, 193, 194, 199, 200, 201, 202, 203, 204, 207, 208, 213, 214, 217, 218, 223, 224, 225, 226, 253, 254, 612, 613, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 642, 643, 644, 645, 654, 660, 662, 666, 669, 675, 677, 678, 679, 705, 710, 712, 714, 716, 722, 724, 733, 752, 753, 755, 789, 792, 793, 800, 802, 804, 806, 820, 822, 825, 827, 873, 890, 906, 907, 909, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 943, 945, 947, 949, 955, 957, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1043, 1045, 1059, 1061, 1067, 1069, 1071, 1073, 1075, 1077, 1083, 1085, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1119, 1121, 1123, 1125, 1132, 1135, 1136, 1139, 1144, 1152, 1155, 1157, 1159, 1161, 1165, 1167, 1189, 1191, 1193, 1195, 1210, 1212, 1214, 1218, 1220, 1238, 1240, 1246, 1249, 1256, 1265, 1266, 1268, 1273, 1274, 1276, 1281, 1282, 1284, 1288, 1290, 1297, 1307, 1308, 1310, 1313, 1316, 1318, 1320, 1327, 1328, 1333, 1335, 1337, 1339, 1341, 1343, 1353, 1355, 1372, 1374, 1389, 1392, 1393, 1397, 1398, 1401, 1418, 1419, 1421, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1443, 1445, 1447, 1449, 1453, 1455, 1461, 1463, 1465, 1467, 1469, 1471, 1475, 1477, 1488, 1490, 1499, 1505, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1532, 1533, 1535, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1567, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1594, 1596, 1603, 1606], "z": [2, 3, 199, 200, 201, 202, 209, 210, 211, 212, 217, 218, 253, 254, 618, 619, 620, 621, 628, 629, 630, 631, 636, 637, 660, 666, 669, 675, 677, 873, 886, 906, 919, 921, 935, 937, 943, 945, 955, 957, 963, 965, 1007, 1009, 1011, 1013, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1144, 1151, 1152, 1189, 1191, 1210, 1212, 1214, 1236, 1238, 1240, 1256, 1328, 1333, 1335, 1353, 1355, 1418, 1419, 1421, 1423, 1425, 1431, 1432, 1434, 1488, 1491, 1504, 1510, 1519, 1521, 1523, 1525, 1532, 1533, 1535, 1581, 1582, 1584, 1585, 1587, 1594, 1596], "7": [2, 3, 199, 200, 201, 202, 203, 204, 207, 208, 211, 212, 213, 214, 217, 218, 223, 224, 225, 226, 253, 254, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 642, 643, 644, 645, 652, 654, 660, 662, 665, 669, 672, 705, 710, 712, 714, 716, 793, 825, 827, 835, 837, 859, 861, 873, 879, 881, 883, 906, 907, 909, 919, 921, 943, 945, 947, 949, 955, 957, 963, 965, 967, 969, 975, 977, 979, 981, 983, 985, 991, 993, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1027, 1029, 1031, 1033, 1039, 1041, 1059, 1061, 1067, 1069, 1071, 1073, 1075, 1077, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1132, 1135, 1136, 1139, 1144, 1152, 1155, 1157, 1159, 1161, 1165, 1167, 1189, 1191, 1210, 1212, 1214, 1218, 1220, 1265, 1266, 1268, 1269, 1271, 1273, 1274, 1276, 1281, 1282, 1284, 1288, 1290, 1297, 1307, 1308, 1310, 1316, 1318, 1320, 1327, 1328, 1333, 1335, 1337, 1339, 1341, 1343, 1353, 1355, 1372, 1374, 1393, 1397, 1398, 1401, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1443, 1445, 1447, 1449, 1465, 1467, 1475, 1477, 1488, 1490, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1532, 1546, 1549, 1550, 1551, 1554, 1567, 1577, 1579, 1581, 1582, 1584, 1603, 1606], "9": [2, 3, 199, 200, 201, 202, 203, 204, 207, 208, 213, 214, 217, 218, 223, 224, 225, 226, 253, 254, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 636, 637, 642, 643, 644, 645, 654, 660, 662, 678, 679, 793, 819, 825, 827, 835, 837, 906, 919, 921, 927, 929, 943, 945, 947, 949, 979, 981, 983, 985, 1003, 1005, 1015, 1017, 1039, 1041, 1043, 1045, 1059, 1061, 1063, 1065, 1071, 1073, 1075, 1077, 1103, 1105, 1107, 1109, 1119, 1121, 1123, 1125, 1144, 1159, 1161, 1189, 1191, 1210, 1212, 1214, 1218, 1220, 1265, 1266, 1268, 1269, 1271, 1282, 1284, 1307, 1308, 1310, 1313, 1316, 1318, 1320, 1328, 1333, 1335, 1337, 1339, 1341, 1343, 1353, 1355, 1372, 1374, 1389, 1392, 1393, 1397, 1398, 1401, 1431, 1432, 1434, 1447, 1449, 1461, 1463, 1465, 1467, 1488, 1490, 1494, 1499, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1532, 1546, 1549, 1550, 1551, 1554, 1567, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1603, 1606], "mix": [2, 3, 195, 196, 199, 200, 201, 202, 253, 254, 614, 615, 618, 619, 630, 631, 636, 637, 655, 660, 662, 672, 675, 793, 800, 802, 859, 861, 873, 890, 906, 919, 921, 943, 945, 955, 957, 963, 965, 979, 981, 983, 985, 1003, 1005, 1007, 1009, 1011, 1013, 1027, 1029, 1067, 1069, 1087, 1089, 1099, 1101, 1144, 1184, 1189, 1191, 1193, 1195, 1246, 1249, 1251, 1254, 1255, 1307, 1308, 1310, 1313, 1316, 1318, 1320, 1327, 1328, 1329, 1331, 1398, 1401, 1418, 1419, 1421, 1427, 1429, 1431, 1432, 1434, 1506, 1507, 1509, 1532, 1546, 1549, 1567, 1577, 1579, 1581, 1582, 1584, 1588, 1590, 1616], "b": [2, 3, 195, 196, 199, 200, 245, 248, 253, 254, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 647, 650, 655, 660, 665, 666, 669, 674, 675, 676, 678, 679, 680, 690, 733, 752, 753, 755, 789, 792, 793, 796, 798, 800, 802, 804, 806, 808, 810, 820, 822, 844, 846, 848, 850, 873, 879, 881, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 955, 957, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1039, 1041, 1043, 1045, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1083, 1085, 1087, 1089, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1132, 1135, 1136, 1139, 1144, 1145, 1147, 1151, 1152, 1155, 1157, 1159, 1161, 1164, 1165, 1167, 1184, 1189, 1191, 1193, 1195, 1204, 1206, 1210, 1212, 1214, 1238, 1240, 1251, 1254, 1255, 1265, 1266, 1268, 1274, 1276, 1277, 1279, 1282, 1284, 1288, 1290, 1292, 1295, 1298, 1301, 1307, 1308, 1310, 1313, 1316, 1318, 1320, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1353, 1355, 1364, 1366, 1372, 1374, 1385, 1387, 1393, 1397, 1398, 1401, 1414, 1417, 1418, 1419, 1421, 1431, 1432, 1434, 1443, 1445, 1447, 1449, 1453, 1455, 1457, 1459, 1461, 1463, 1469, 1471, 1472, 1474, 1475, 1477, 1488, 1491, 1494, 1499, 1504, 1505, 1506, 1507, 1509, 1532, 1537, 1539, 1541, 1544, 1546, 1549, 1550, 1555, 1558, 1567, 1568, 1570, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1617, 1623], "8": [2, 3, 199, 200, 201, 202, 211, 212, 213, 214, 217, 218, 223, 224, 225, 226, 253, 254, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 636, 637, 642, 643, 644, 645, 651, 654, 660, 662, 669, 674, 678, 705, 718, 720, 733, 752, 753, 755, 789, 792, 793, 819, 824, 825, 827, 873, 883, 902, 906, 919, 921, 927, 929, 943, 945, 967, 969, 975, 977, 1003, 1005, 1007, 1009, 1011, 1013, 1027, 1029, 1031, 1033, 1059, 1061, 1063, 1065, 1071, 1073, 1075, 1077, 1103, 1105, 1107, 1109, 1119, 1121, 1123, 1125, 1136, 1139, 1144, 1152, 1159, 1161, 1189, 1191, 1210, 1212, 1214, 1218, 1220, 1238, 1240, 1265, 1266, 1268, 1273, 1277, 1279, 1281, 1288, 1290, 1297, 1307, 1308, 1310, 1316, 1318, 1320, 1328, 1337, 1339, 1341, 1343, 1353, 1355, 1372, 1374, 1393, 1397, 1398, 1401, 1418, 1419, 1421, 1431, 1432, 1434, 1447, 1449, 1465, 1467, 1488, 1490, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1532, 1546, 1549, 1550, 1551, 1554, 1567, 1577, 1579, 1581, 1582, 1584, 1603, 1606, 1617], "__init__": [2, 3, 4, 233, 236, 237, 251, 252, 253, 254, 656, 666, 670, 675, 677, 678, 679, 680, 793, 873, 874, 1265, 1510, 1511, 1513, 1519, 1521, 1617], "__le__": [2, 3], "less": [2, 3, 199, 200, 217, 218, 225, 226, 247, 618, 619, 628, 629, 636, 637, 652, 657, 660, 669, 672, 674, 675, 906, 911, 913, 915, 917, 923, 925, 935, 937, 967, 969, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1095, 1097, 1099, 1101, 1107, 1109, 1119, 1121, 1328, 1364, 1366, 1376, 1410, 1413, 1510, 1523, 1525, 1581, 1603, 1606], "than": [2, 3, 203, 204, 217, 218, 221, 222, 225, 226, 247, 251, 252, 618, 619, 622, 623, 628, 629, 636, 637, 640, 641, 644, 645, 652, 656, 660, 662, 663, 664, 669, 670, 672, 675, 678, 679, 680, 692, 733, 734, 735, 793, 825, 827, 873, 896, 906, 911, 913, 915, 917, 923, 925, 935, 937, 951, 953, 959, 961, 967, 969, 999, 1001, 1003, 1005, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1071, 1073, 1095, 1097, 1099, 1101, 1107, 1109, 1119, 1121, 1140, 1143, 1144, 1217, 1218, 1220, 1265, 1277, 1279, 1328, 1333, 1335, 1353, 1355, 1364, 1366, 1376, 1410, 1413, 1431, 1432, 1434, 1447, 1449, 1469, 1471, 1510, 1523, 1525, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1581, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606], "equal": [2, 3, 193, 194, 195, 196, 199, 200, 201, 202, 213, 214, 217, 218, 223, 224, 225, 226, 251, 252, 614, 615, 618, 619, 620, 621, 628, 629, 632, 633, 636, 637, 642, 643, 660, 669, 670, 733, 745, 746, 752, 753, 755, 793, 796, 798, 906, 951, 953, 959, 961, 1015, 1017, 1019, 1021, 1095, 1097, 1103, 1105, 1144, 1145, 1147, 1151, 1152, 1328, 1341, 1343, 1364, 1366, 1376, 1431, 1432, 1434, 1440, 1442, 1465, 1467, 1481, 1483, 1510, 1523, 1525, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1567, 1568, 1570, 1577, 1579, 1581, 1588, 1590, 1597, 1599, 1600, 1602, 1603, 1606], "result": [2, 3, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 225, 226, 229, 230, 249, 250, 251, 252, 253, 254, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 652, 656, 657, 659, 660, 662, 663, 664, 667, 668, 669, 670, 672, 675, 678, 692, 705, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 796, 798, 804, 806, 858, 859, 861, 873, 897, 901, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1155, 1157, 1159, 1161, 1164, 1165, 1167, 1169, 1172, 1174, 1176, 1178, 1180, 1182, 1185, 1189, 1191, 1193, 1195, 1208, 1224, 1227, 1228, 1265, 1274, 1276, 1285, 1287, 1288, 1290, 1292, 1295, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1322, 1324, 1326, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1348, 1349, 1351, 1353, 1355, 1356, 1358, 1364, 1366, 1368, 1370, 1372, 1374, 1376, 1381, 1383, 1385, 1387, 1389, 1392, 1393, 1397, 1398, 1401, 1402, 1405, 1406, 1409, 1410, 1413, 1414, 1417, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1440, 1442, 1443, 1445, 1447, 1449, 1450, 1452, 1453, 1455, 1457, 1459, 1461, 1463, 1469, 1471, 1472, 1474, 1475, 1477, 1478, 1480, 1481, 1483, 1488, 1491, 1494, 1501, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1546, 1549, 1550, 1551, 1554, 1563, 1566, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1617], "bool": [2, 3, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 209, 210, 213, 214, 217, 218, 219, 220, 223, 224, 225, 226, 229, 230, 249, 250, 251, 252, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 628, 629, 630, 631, 632, 633, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 658, 660, 663, 670, 672, 673, 675, 680, 730, 731, 733, 737, 738, 752, 793, 796, 798, 808, 810, 812, 814, 815, 816, 818, 819, 820, 822, 839, 840, 842, 844, 846, 848, 850, 852, 855, 863, 872, 873, 878, 879, 881, 887, 888, 891, 892, 896, 903, 905, 906, 943, 945, 947, 949, 955, 957, 963, 965, 983, 985, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1055, 1057, 1059, 1061, 1063, 1065, 1087, 1089, 1144, 1145, 1147, 1151, 1152, 1165, 1167, 1171, 1184, 1186, 1198, 1201, 1202, 1204, 1206, 1215, 1217, 1218, 1219, 1220, 1236, 1237, 1251, 1254, 1260, 1263, 1264, 1265, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1284, 1285, 1287, 1288, 1290, 1291, 1292, 1295, 1306, 1307, 1322, 1328, 1329, 1331, 1356, 1358, 1389, 1392, 1410, 1413, 1431, 1457, 1459, 1465, 1467, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1494, 1498, 1499, 1500, 1510, 1511, 1513, 1532, 1533, 1535, 1537, 1539, 1567, 1568, 1570, 1577, 1579, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "oper": [2, 3, 195, 196, 203, 204, 207, 208, 246, 251, 252, 253, 254, 614, 615, 626, 627, 651, 653, 659, 660, 662, 663, 665, 668, 669, 671, 672, 675, 678, 679, 733, 757, 758, 760, 761, 793, 859, 861, 906, 919, 921, 959, 961, 963, 965, 1011, 1013, 1083, 1085, 1087, 1089, 1099, 1101, 1123, 1125, 1144, 1153, 1172, 1174, 1176, 1178, 1180, 1182, 1243, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1324, 1616], "fals": [2, 3, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 209, 210, 213, 214, 219, 220, 223, 224, 225, 226, 229, 230, 233, 239, 240, 241, 242, 243, 249, 250, 251, 252, 253, 254, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 658, 660, 662, 663, 664, 672, 673, 675, 678, 679, 680, 733, 752, 793, 796, 798, 808, 810, 812, 818, 820, 822, 839, 840, 842, 844, 846, 848, 850, 852, 855, 872, 873, 878, 879, 881, 887, 888, 891, 896, 903, 905, 906, 943, 945, 983, 985, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1087, 1089, 1144, 1145, 1147, 1151, 1152, 1165, 1167, 1171, 1184, 1186, 1198, 1201, 1202, 1204, 1206, 1215, 1217, 1218, 1220, 1221, 1229, 1232, 1234, 1236, 1237, 1257, 1258, 1259, 1260, 1263, 1265, 1272, 1277, 1279, 1288, 1290, 1291, 1292, 1295, 1296, 1306, 1328, 1329, 1331, 1356, 1358, 1389, 1392, 1410, 1413, 1431, 1457, 1459, 1465, 1467, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1494, 1498, 1499, 1500, 1501, 1510, 1511, 1513, 1532, 1533, 1535, 1537, 1539, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1567, 1568, 1570, 1577, 1579, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "__radd__": [2, 3, 253, 254, 659, 660], "revers": [2, 3, 253, 254, 653, 659, 660, 663, 669, 680, 692, 1144, 1171, 1431, 1447, 1449], "devic": [2, 3, 193, 194, 198, 201, 202, 217, 218, 247, 251, 252, 612, 613, 617, 620, 621, 636, 637, 652, 655, 656, 658, 664, 665, 667, 670, 675, 680, 692, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 752, 753, 755, 757, 758, 760, 761, 767, 769, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 874, 875, 876, 877, 878, 879, 881, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 901, 902, 903, 904, 905, 1144, 1150, 1187, 1188, 1189, 1191, 1193, 1195, 1224, 1227, 1228, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1616], "dtype": [2, 3, 193, 194, 195, 196, 217, 218, 219, 220, 225, 226, 612, 613, 614, 615, 620, 621, 636, 637, 638, 639, 644, 645, 656, 658, 660, 662, 663, 664, 665, 667, 670, 671, 673, 675, 677, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 752, 753, 755, 757, 758, 760, 761, 767, 769, 771, 772, 774, 776, 786, 788, 789, 792, 793, 794, 795, 796, 798, 800, 802, 808, 810, 813, 814, 815, 816, 818, 819, 824, 825, 827, 829, 830, 832, 833, 835, 837, 839, 840, 842, 844, 846, 848, 850, 852, 855, 857, 858, 859, 861, 863, 864, 865, 866, 871, 872, 873, 892, 906, 959, 961, 1043, 1045, 1144, 1151, 1152, 1187, 1188, 1224, 1251, 1254, 1307, 1322, 1510, 1515, 1517, 1519, 1521, 1523, 1525, 1532, 1533, 1535, 1537, 1539, 1567, 1577, 1579, 1581, 1594, 1596, 1597, 1599, 1600, 1602, 1607, 1608, 1610, 1612, 1614, 1617], "is_vari": [2, 3, 203, 204, 622, 623, 672, 677, 1265], "whether": [2, 3, 188, 189, 190, 191, 192, 195, 196, 201, 202, 203, 204, 213, 214, 217, 218, 249, 250, 251, 252, 253, 254, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 628, 629, 630, 631, 632, 633, 636, 637, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 657, 660, 669, 670, 672, 705, 706, 708, 730, 731, 733, 737, 738, 793, 796, 798, 819, 820, 822, 839, 840, 842, 844, 846, 848, 850, 852, 855, 872, 873, 878, 879, 881, 887, 888, 891, 892, 896, 903, 905, 906, 1023, 1025, 1144, 1145, 1147, 1151, 1152, 1165, 1167, 1171, 1184, 1186, 1201, 1202, 1204, 1206, 1209, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1229, 1232, 1234, 1236, 1243, 1251, 1254, 1258, 1260, 1263, 1264, 1265, 1269, 1271, 1272, 1274, 1276, 1277, 1279, 1282, 1284, 1285, 1287, 1288, 1290, 1291, 1292, 1295, 1306, 1307, 1322, 1328, 1345, 1347, 1431, 1457, 1459, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1494, 1498, 1499, 1500, 1501, 1510, 1511, 1513, 1607, 1608, 1610, 1612, 1614], "i": [2, 3, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 229, 230, 233, 236, 237, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 691, 692, 705, 706, 708, 722, 724, 730, 731, 732, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 767, 769, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 796, 798, 804, 806, 808, 810, 812, 813, 819, 820, 822, 825, 827, 835, 837, 839, 840, 842, 844, 846, 848, 850, 852, 855, 859, 861, 872, 873, 874, 878, 879, 881, 887, 888, 891, 895, 896, 902, 903, 905, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 943, 945, 951, 953, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1015, 1017, 1019, 1021, 1023, 1025, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1059, 1061, 1063, 1065, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1089, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1145, 1147, 1151, 1152, 1154, 1155, 1157, 1159, 1161, 1165, 1167, 1169, 1171, 1184, 1186, 1189, 1191, 1201, 1204, 1206, 1208, 1210, 1212, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1226, 1227, 1228, 1233, 1251, 1254, 1256, 1260, 1263, 1264, 1265, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1284, 1285, 1287, 1288, 1290, 1291, 1292, 1295, 1296, 1298, 1301, 1302, 1305, 1306, 1307, 1313, 1318, 1320, 1322, 1324, 1326, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1345, 1347, 1353, 1355, 1356, 1358, 1364, 1366, 1372, 1374, 1376, 1377, 1379, 1381, 1383, 1385, 1387, 1389, 1392, 1398, 1401, 1402, 1405, 1406, 1409, 1410, 1413, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1440, 1442, 1443, 1445, 1447, 1449, 1450, 1452, 1453, 1455, 1457, 1459, 1461, 1463, 1465, 1467, 1472, 1474, 1481, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1494, 1498, 1499, 1500, 1501, 1504, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1616, 1617], "variabl": [2, 3, 188, 189, 190, 191, 192, 203, 204, 215, 216, 251, 252, 607, 610, 611, 622, 623, 634, 635, 652, 657, 658, 659, 662, 666, 670, 672, 673, 675, 678, 679, 680, 692, 1144, 1153, 1215, 1216, 1217, 1218, 1220, 1243, 1265, 1269, 1271, 1272, 1274, 1276, 1277, 1279, 1282, 1284, 1285, 1287, 1288, 1290, 1292, 1295, 1297, 1302, 1305, 1307, 1326, 1328, 1385, 1387, 1484, 1485, 1486, 1487, 1506, 1507, 1509, 1617], "boolean": [2, 3, 195, 196, 199, 200, 201, 202, 203, 204, 213, 214, 251, 252, 614, 615, 618, 619, 620, 621, 622, 623, 632, 633, 638, 639, 662, 664, 669, 733, 737, 738, 752, 793, 796, 798, 839, 872, 873, 887, 903, 906, 943, 945, 947, 949, 955, 957, 963, 965, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1144, 1145, 1147, 1151, 1152, 1204, 1206, 1208, 1209, 1216, 1217, 1218, 1219, 1220, 1229, 1232, 1234, 1243, 1264, 1265, 1277, 1279, 1291, 1306, 1431, 1457, 1459, 1484, 1485, 1486, 1488, 1498, 1581, 1591, 1593], "trainabl": [2, 3, 203, 204, 622, 623, 659, 676, 678, 679, 1265, 1277, 1279], "otherwis": [2, 3, 188, 189, 190, 191, 192, 195, 196, 199, 200, 203, 204, 209, 210, 213, 214, 219, 220, 225, 226, 229, 230, 233, 244, 249, 250, 251, 252, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 628, 629, 630, 631, 632, 633, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 657, 660, 662, 668, 669, 670, 671, 675, 733, 734, 735, 793, 796, 798, 808, 810, 812, 814, 815, 816, 818, 819, 840, 842, 848, 850, 858, 873, 878, 906, 1015, 1017, 1019, 1021, 1023, 1025, 1144, 1153, 1256, 1265, 1277, 1279, 1292, 1295, 1328, 1329, 1331, 1337, 1339, 1406, 1409, 1410, 1413, 1431, 1457, 1459, 1484, 1485, 1486, 1488, 1501, 1532, 1533, 1535, 1537, 1539, 1546, 1549, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "mt": [2, 3, 677], "ndim": [2, 3, 662, 1328, 1377, 1379, 1389, 1392], "number": [2, 3, 195, 196, 201, 202, 213, 214, 217, 218, 221, 222, 225, 226, 229, 230, 245, 246, 251, 252, 253, 254, 614, 615, 618, 619, 620, 621, 628, 629, 632, 633, 636, 637, 640, 641, 644, 645, 646, 647, 651, 652, 660, 662, 664, 669, 671, 672, 675, 678, 730, 731, 732, 733, 734, 735, 737, 738, 745, 746, 757, 758, 760, 761, 763, 765, 767, 769, 793, 800, 802, 819, 824, 825, 827, 835, 837, 840, 842, 844, 846, 848, 850, 852, 855, 859, 861, 873, 888, 889, 890, 906, 919, 921, 935, 937, 967, 969, 999, 1001, 1003, 1005, 1071, 1073, 1079, 1081, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1140, 1143, 1144, 1145, 1147, 1186, 1199, 1200, 1202, 1223, 1238, 1240, 1255, 1264, 1307, 1326, 1328, 1341, 1343, 1345, 1347, 1364, 1366, 1381, 1383, 1389, 1392, 1406, 1409, 1431, 1432, 1434, 1440, 1442, 1450, 1452, 1453, 1455, 1461, 1463, 1465, 1467, 1472, 1474, 1478, 1480, 1481, 1483, 1484, 1485, 1486, 1487, 1510, 1511, 1513, 1527, 1532, 1541, 1544, 1550, 1551, 1554, 1555, 1558, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1617], "dimens": [2, 3, 193, 194, 201, 202, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 225, 226, 229, 230, 251, 252, 253, 254, 620, 621, 626, 627, 628, 629, 630, 631, 632, 633, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 660, 662, 663, 664, 675, 678, 705, 722, 724, 733, 778, 781, 782, 785, 1144, 1172, 1174, 1176, 1178, 1180, 1182, 1186, 1202, 1224, 1260, 1263, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1325, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1345, 1347, 1348, 1349, 1351, 1353, 1355, 1356, 1358, 1364, 1366, 1368, 1370, 1376, 1377, 1379, 1385, 1387, 1389, 1392, 1393, 1397, 1402, 1405, 1406, 1409, 1410, 1413, 1418, 1423, 1425, 1427, 1429, 1431, 1436, 1438, 1443, 1445, 1447, 1449, 1450, 1452, 1453, 1455, 1457, 1459, 1461, 1463, 1465, 1467, 1469, 1471, 1472, 1474, 1484, 1485, 1486, 1487, 1510, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1581, 1582, 1584, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "ax": [2, 3, 209, 210, 213, 214, 219, 220, 225, 226, 229, 230, 249, 250, 628, 629, 632, 633, 638, 639, 644, 645, 646, 647, 656, 660, 662, 670, 675, 677, 873, 896, 1328, 1356, 1358, 1385, 1387, 1398, 1401, 1410, 1413, 1431, 1440, 1442, 1447, 1449, 1450, 1452, 1461, 1463, 1469, 1471, 1475, 1477, 1481, 1483, 1532, 1533, 1535, 1537, 1539, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "shape": [2, 3, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 229, 230, 249, 250, 251, 252, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 652, 656, 657, 659, 660, 662, 664, 670, 671, 672, 675, 677, 678, 679, 680, 705, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 796, 798, 800, 802, 804, 806, 873, 892, 897, 901, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1155, 1157, 1159, 1161, 1164, 1165, 1167, 1172, 1174, 1176, 1178, 1180, 1182, 1185, 1193, 1195, 1202, 1208, 1224, 1227, 1228, 1234, 1245, 1250, 1259, 1265, 1266, 1268, 1269, 1271, 1274, 1276, 1282, 1284, 1285, 1287, 1288, 1290, 1292, 1295, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1322, 1324, 1326, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1345, 1347, 1348, 1349, 1351, 1353, 1355, 1356, 1358, 1364, 1366, 1368, 1370, 1372, 1374, 1376, 1377, 1379, 1381, 1383, 1385, 1387, 1389, 1392, 1393, 1397, 1398, 1401, 1402, 1405, 1406, 1409, 1410, 1413, 1414, 1417, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1440, 1442, 1443, 1445, 1447, 1449, 1450, 1452, 1453, 1455, 1457, 1459, 1461, 1463, 1465, 1467, 1469, 1471, 1472, 1474, 1475, 1477, 1478, 1480, 1481, 1483, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1528, 1530, 1532, 1533, 1535, 1541, 1544, 1546, 1549, 1567, 1568, 1570, 1577, 1579, 1581, 1582, 1584, 1607, 1608, 1610, 1612, 1614, 1617], "size": [2, 3, 213, 214, 217, 218, 219, 220, 251, 252, 253, 254, 628, 629, 632, 633, 636, 637, 638, 639, 662, 664, 678, 733, 757, 758, 760, 761, 873, 894, 895, 896, 1144, 1227, 1307, 1327, 1328, 1341, 1343, 1356, 1358, 1372, 1374, 1377, 1379, 1389, 1392, 1393, 1397, 1406, 1409, 1431, 1443, 1445, 1461, 1463, 1465, 1467, 1469, 1471, 1510, 1511, 1513, 1532, 1533, 1535, 1541, 1544, 1607, 1608, 1610, 1612, 1614], "product": [2, 3, 199, 200, 201, 202, 209, 210, 620, 621, 628, 629, 675, 906, 1079, 1081, 1144, 1165, 1167, 1307, 1326, 1327, 1328, 1333, 1335, 1353, 1355, 1372, 1374, 1398, 1401, 1406, 1409, 1581, 1582, 1584, 1594, 1596], "": [2, 3, 188, 191, 192, 193, 194, 203, 204, 225, 226, 233, 236, 237, 238, 244, 247, 248, 251, 252, 622, 623, 644, 645, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 662, 663, 664, 666, 667, 668, 669, 670, 671, 672, 673, 675, 677, 678, 679, 680, 691, 692, 732, 733, 763, 765, 778, 781, 782, 785, 793, 829, 830, 832, 833, 873, 878, 884, 885, 895, 906, 1099, 1101, 1144, 1152, 1187, 1188, 1265, 1269, 1271, 1273, 1274, 1276, 1281, 1282, 1284, 1288, 1290, 1328, 1389, 1392, 1393, 1397, 1488, 1500, 1581, 1597, 1599, 1603, 1606, 1616, 1617], "valu": [2, 3, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 207, 208, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 251, 252, 253, 254, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 651, 652, 657, 659, 660, 662, 663, 664, 665, 669, 670, 671, 672, 673, 675, 677, 692, 733, 734, 735, 745, 746, 752, 753, 755, 757, 758, 760, 761, 793, 796, 798, 814, 815, 816, 818, 858, 873, 895, 896, 906, 907, 909, 911, 913, 919, 921, 923, 925, 931, 933, 967, 969, 983, 985, 987, 989, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1027, 1029, 1031, 1033, 1071, 1073, 1075, 1077, 1079, 1081, 1087, 1089, 1091, 1093, 1095, 1097, 1103, 1105, 1136, 1139, 1140, 1143, 1144, 1155, 1157, 1159, 1161, 1163, 1171, 1186, 1189, 1191, 1193, 1195, 1203, 1209, 1210, 1212, 1214, 1216, 1226, 1227, 1228, 1230, 1231, 1233, 1264, 1265, 1266, 1268, 1269, 1271, 1272, 1282, 1284, 1291, 1296, 1306, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1325, 1326, 1327, 1328, 1364, 1366, 1376, 1377, 1379, 1381, 1383, 1385, 1387, 1389, 1392, 1393, 1397, 1410, 1413, 1431, 1432, 1434, 1440, 1442, 1453, 1455, 1457, 1459, 1481, 1483, 1484, 1485, 1486, 1488, 1492, 1493, 1494, 1495, 1496, 1501, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1527, 1532, 1533, 1535, 1537, 1539, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1559, 1562, 1563, 1566, 1567, 1568, 1570, 1577, 1579, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606], "one": [2, 3, 213, 214, 219, 220, 221, 222, 233, 237, 247, 248, 251, 252, 618, 619, 620, 621, 622, 623, 628, 629, 632, 633, 634, 635, 638, 639, 640, 641, 642, 643, 651, 652, 653, 657, 660, 662, 663, 665, 667, 668, 669, 670, 672, 673, 674, 677, 678, 680, 692, 733, 734, 735, 763, 765, 793, 800, 802, 808, 810, 873, 896, 906, 1071, 1073, 1075, 1077, 1144, 1145, 1147, 1164, 1204, 1206, 1221, 1224, 1227, 1228, 1265, 1266, 1268, 1274, 1276, 1282, 1284, 1288, 1290, 1292, 1295, 1328, 1353, 1355, 1356, 1358, 1372, 1374, 1377, 1379, 1406, 1409, 1410, 1413, 1431, 1443, 1445, 1447, 1449, 1461, 1463, 1469, 1471, 1506, 1507, 1509, 1532, 1533, 1535, 1541, 1544, 1550, 1551, 1554, 1555, 1558, 1559, 1562, 1563, 1566, 1581, 1582, 1584, 1617], "more": [2, 3, 221, 222, 607, 608, 609, 640, 641, 652, 655, 656, 657, 660, 662, 663, 664, 665, 666, 667, 668, 669, 672, 673, 674, 675, 676, 677, 678, 679, 680, 691, 692, 733, 734, 735, 793, 800, 802, 906, 995, 997, 1043, 1045, 1328, 1353, 1355, 1431, 1447, 1449, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1617], "ar": [2, 3, 188, 189, 190, 199, 200, 201, 202, 213, 214, 217, 218, 219, 220, 246, 247, 248, 251, 252, 253, 254, 607, 608, 609, 612, 613, 618, 619, 620, 621, 628, 629, 632, 633, 636, 637, 638, 639, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 691, 692, 693, 703, 733, 734, 735, 873, 886, 890, 892, 896, 906, 971, 973, 1059, 1061, 1063, 1065, 1103, 1105, 1111, 1113, 1132, 1135, 1144, 1145, 1147, 1151, 1152, 1153, 1197, 1201, 1208, 1209, 1216, 1223, 1225, 1232, 1243, 1258, 1265, 1291, 1296, 1306, 1307, 1324, 1328, 1333, 1335, 1353, 1355, 1356, 1358, 1364, 1366, 1376, 1389, 1392, 1393, 1397, 1406, 1409, 1431, 1432, 1434, 1447, 1449, 1461, 1463, 1488, 1490, 1494, 1499, 1500, 1510, 1515, 1517, 1519, 1521, 1523, 1525, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1550, 1551, 1554, 1616, 1617], "unknown": [2, 3], "For": [2, 3, 203, 204, 246, 247, 248, 607, 608, 609, 622, 623, 651, 652, 653, 654, 655, 656, 657, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 675, 677, 678, 679, 680, 691, 692, 733, 734, 735, 763, 765, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 967, 969, 971, 973, 975, 977, 991, 993, 995, 997, 999, 1001, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1059, 1061, 1079, 1081, 1095, 1097, 1099, 1101, 1103, 1105, 1111, 1113, 1115, 1117, 1119, 1121, 1132, 1135, 1136, 1139, 1140, 1143, 1265, 1277, 1279, 1302, 1305, 1328, 1389, 1392, 1402, 1405, 1431, 1432, 1434, 1472, 1474, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1581, 1585, 1587, 1591, 1593, 1600, 1602], "librari": [2, 3, 246, 247, 248, 616, 617, 663, 680, 690, 692, 873, 897, 901, 906, 995, 997, 1043, 1045, 1059, 1061, 1063, 1065, 1328, 1345, 1347, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1616, 1617], "graph": [2, 3, 203, 204, 248, 665, 669, 676, 692, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1616], "comput": [2, 3, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 225, 226, 247, 248, 249, 250, 251, 252, 618, 619, 620, 621, 622, 623, 628, 629, 630, 631, 644, 645, 651, 662, 663, 665, 669, 675, 678, 692, 873, 896, 906, 919, 921, 943, 945, 955, 957, 963, 965, 983, 985, 987, 989, 1007, 1009, 1011, 1013, 1027, 1029, 1031, 1033, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1079, 1081, 1083, 1085, 1087, 1089, 1144, 1155, 1157, 1159, 1161, 1165, 1167, 1169, 1265, 1266, 1268, 1272, 1273, 1281, 1291, 1292, 1295, 1296, 1297, 1298, 1301, 1306, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1324, 1326, 1328, 1329, 1331, 1333, 1335, 1345, 1347, 1348, 1349, 1351, 1353, 1355, 1356, 1358, 1377, 1379, 1381, 1383, 1385, 1387, 1389, 1392, 1406, 1409, 1410, 1413, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1488, 1494, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1581, 1582, 1584, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1616], "model": [2, 3, 678, 679, 1616, 1617], "mai": [2, 3, 199, 200, 223, 224, 248, 616, 617, 618, 619, 642, 643, 651, 652, 662, 663, 669, 672, 676, 677, 679, 733, 734, 735, 748, 750, 873, 897, 901, 906, 983, 985, 1011, 1013, 1031, 1033, 1059, 1061, 1063, 1065, 1144, 1171, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1567, 1568, 1570, 1577, 1579, 1581, 1585, 1587, 1588, 1590, 1591, 1593], "due": [2, 3, 247, 651, 663, 672, 906, 1079, 1081], "depend": [2, 3, 195, 196, 223, 224, 247, 614, 615, 642, 643, 644, 645, 651, 652, 659, 662, 663, 667, 670, 672, 675, 692, 793, 796, 798, 906, 907, 909, 911, 913, 915, 917, 923, 925, 927, 929, 931, 933, 935, 937, 971, 973, 975, 977, 991, 993, 995, 997, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1095, 1097, 1111, 1113, 1115, 1117, 1132, 1135, 1136, 1139, 1328, 1345, 1347, 1377, 1379, 1385, 1387, 1389, 1392, 1532, 1546, 1549, 1567, 1568, 1570, 1577, 1579], "collect": [188, 251, 252, 607, 662, 664, 691, 705, 730, 873, 1144, 1265, 1307, 1418, 1488, 1501, 1506, 1510], "accept": [188, 199, 200, 607, 618, 619, 651, 652, 656, 657, 659, 660, 662, 664, 665, 667, 668, 669, 671, 672, 677, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 808, 810, 840, 842, 848, 850, 906, 907, 909, 919, 921, 923, 925, 927, 929, 935, 937, 943, 945, 963, 965, 967, 969, 975, 977, 995, 997, 999, 1001, 1015, 1017, 1019, 1021, 1023, 1025, 1039, 1041, 1043, 1045, 1059, 1061, 1063, 1065, 1071, 1073, 1075, 1077, 1087, 1089, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1119, 1121, 1123, 1125, 1132, 1135, 1136, 1139, 1144, 1189, 1191, 1204, 1206, 1210, 1212, 1265, 1277, 1279, 1292, 1295, 1298, 1301, 1302, 1305, 1307, 1313, 1318, 1320, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1353, 1355, 1431, 1443, 1445, 1447, 1449, 1461, 1463, 1506, 1507, 1509, 1550, 1551, 1554, 1555, 1558, 1567, 1568, 1570, 1581, 1585, 1587, 1588, 1590, 1603, 1606, 1607, 1608, 1610, 1616, 1617], "args_to_ivi": 188, "arg": [188, 189, 190, 233, 236, 251, 252, 654, 675, 679, 873, 896, 1144, 1228, 1256], "include_deriv": [188, 189, 190, 191, 192, 607, 610, 611, 1488, 1490, 1500], "kwarg": [188, 189, 190, 233, 236, 249, 250, 251, 252, 253, 254, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 675, 679, 1144, 1221, 1256], "keyword": [188, 189, 190, 251, 252, 253, 254, 656, 662, 663, 664, 667, 670, 671, 672, 678, 733, 763, 765, 1144, 1150, 1221, 1256, 1488, 1494, 1581, 1600, 1602], "form": [188, 189, 190, 191, 192, 193, 194, 203, 204, 209, 210, 247, 251, 252, 628, 629, 650, 662, 665, 679, 680, 733, 737, 738, 767, 769, 778, 781, 782, 785, 1144, 1149, 1245, 1250, 1307, 1328, 1329, 1331, 1337, 1339, 1341, 1343, 1345, 1347, 1348, 1349, 1351, 1364, 1366, 1368, 1370, 1376, 1377, 1379, 1385, 1387, 1389, 1392, 1393, 1397, 1402, 1405, 1488, 1490, 1500], "all": [188, 189, 190, 191, 192, 193, 194, 201, 202, 213, 214, 217, 218, 229, 230, 231, 232, 246, 247, 248, 251, 252, 607, 610, 611, 618, 619, 620, 621, 628, 629, 632, 633, 636, 637, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 691, 692, 693, 703, 730, 731, 733, 734, 735, 778, 781, 782, 785, 873, 886, 892, 1144, 1145, 1147, 1151, 1152, 1197, 1225, 1251, 1254, 1307, 1325, 1328, 1364, 1366, 1385, 1387, 1398, 1401, 1410, 1413, 1431, 1447, 1449, 1461, 1463, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1499, 1500, 1501, 1510, 1511, 1513, 1523, 1525, 1607, 1616, 1617], "nest": [188, 189, 190, 191, 192, 251, 252, 253, 254, 607, 610, 611, 656, 662, 665, 668, 669, 678, 679, 692, 1144, 1246, 1249, 1265, 1291, 1296, 1306, 1484, 1485, 1486, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1616], "argument": [188, 189, 190, 191, 192, 199, 200, 233, 236, 237, 246, 251, 252, 253, 254, 607, 608, 609, 610, 611, 618, 619, 653, 655, 656, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 673, 675, 677, 678, 730, 731, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 808, 810, 840, 842, 848, 850, 859, 861, 906, 907, 909, 919, 921, 923, 925, 927, 929, 967, 969, 995, 997, 999, 1001, 1015, 1017, 1019, 1021, 1039, 1041, 1043, 1045, 1063, 1065, 1071, 1073, 1075, 1077, 1087, 1089, 1103, 1105, 1107, 1109, 1111, 1113, 1119, 1121, 1123, 1125, 1132, 1135, 1144, 1149, 1150, 1154, 1171, 1189, 1191, 1204, 1206, 1210, 1212, 1221, 1228, 1256, 1265, 1277, 1279, 1292, 1295, 1298, 1301, 1302, 1305, 1307, 1313, 1318, 1320, 1327, 1328, 1329, 1331, 1341, 1343, 1353, 1355, 1431, 1443, 1445, 1461, 1463, 1488, 1494, 1506, 1507, 1509, 1550, 1555, 1558, 1581, 1585, 1587, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1616], "unchang": [188, 189, 190, 191, 192], "iter": [188, 189, 190, 191, 192, 201, 202, 213, 214, 231, 232, 248, 251, 252, 253, 254, 620, 621, 632, 633, 648, 649, 669, 675, 678, 730, 731, 873, 896, 1144, 1145, 1147, 1431, 1440, 1442, 1453, 1455, 1465, 1467, 1478, 1480, 1481, 1483, 1488, 1489, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1503, 1505], "ani": [188, 189, 190, 193, 194, 199, 200, 201, 202, 229, 230, 231, 232, 233, 236, 244, 246, 247, 248, 251, 252, 616, 617, 618, 619, 620, 621, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 675, 677, 678, 679, 680, 691, 692, 730, 731, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 767, 769, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 808, 810, 812, 840, 842, 848, 850, 858, 873, 897, 901, 906, 907, 909, 919, 921, 923, 925, 927, 929, 967, 969, 983, 985, 995, 997, 999, 1001, 1011, 1013, 1015, 1017, 1019, 1021, 1031, 1033, 1039, 1041, 1043, 1045, 1063, 1065, 1071, 1073, 1075, 1077, 1087, 1089, 1103, 1105, 1107, 1109, 1111, 1113, 1119, 1121, 1123, 1125, 1132, 1135, 1144, 1145, 1147, 1171, 1172, 1174, 1176, 1178, 1180, 1182, 1184, 1189, 1191, 1204, 1206, 1210, 1212, 1217, 1219, 1242, 1256, 1265, 1272, 1277, 1279, 1292, 1295, 1298, 1301, 1302, 1305, 1307, 1313, 1318, 1320, 1325, 1327, 1328, 1329, 1331, 1341, 1343, 1353, 1355, 1431, 1443, 1445, 1461, 1463, 1484, 1485, 1486, 1487, 1488, 1491, 1494, 1498, 1504, 1505, 1506, 1507, 1509, 1510, 1523, 1525, 1550, 1555, 1558, 1581, 1585, 1587, 1603, 1606, 1607, 1608, 1610, 1616, 1617], "posit": [188, 189, 190, 199, 200, 209, 210, 213, 214, 618, 619, 628, 629, 632, 633, 652, 656, 662, 663, 664, 667, 678, 691, 732, 733, 745, 746, 793, 825, 827, 906, 907, 909, 1015, 1017, 1019, 1021, 1079, 1081, 1099, 1101, 1144, 1186, 1328, 1329, 1331, 1431, 1443, 1445, 1461, 1463, 1510, 1527, 1532, 1541, 1544, 1607, 1608, 1610, 1612, 1614], "check": [188, 189, 190, 191, 192, 195, 196, 201, 202, 203, 204, 246, 247, 248, 251, 252, 614, 615, 620, 621, 622, 623, 651, 652, 653, 658, 660, 662, 667, 669, 674, 675, 677, 678, 679, 680, 691, 793, 812, 813, 829, 830, 832, 833, 839, 844, 846, 852, 855, 872, 873, 884, 885, 891, 905, 1144, 1153, 1184, 1187, 1188, 1201, 1204, 1206, 1217, 1218, 1219, 1220, 1232, 1243, 1258, 1264, 1265, 1277, 1279, 1328, 1345, 1347, 1488, 1489, 1498, 1499, 1500, 1617], "option": [188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 225, 226, 229, 230, 231, 232, 233, 237, 249, 250, 251, 252, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 656, 657, 658, 659, 660, 662, 663, 664, 665, 669, 670, 671, 672, 673, 675, 680, 692, 705, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 730, 731, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 767, 769, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 796, 798, 804, 806, 813, 814, 815, 816, 818, 819, 839, 872, 873, 878, 894, 895, 896, 897, 901, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1149, 1155, 1157, 1159, 1161, 1164, 1165, 1167, 1169, 1170, 1172, 1174, 1176, 1178, 1180, 1182, 1185, 1189, 1191, 1193, 1195, 1208, 1222, 1224, 1227, 1228, 1238, 1240, 1242, 1256, 1265, 1266, 1268, 1269, 1271, 1274, 1276, 1282, 1284, 1285, 1287, 1288, 1290, 1292, 1295, 1306, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1322, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1348, 1349, 1351, 1353, 1355, 1356, 1358, 1364, 1366, 1368, 1370, 1372, 1374, 1376, 1381, 1383, 1385, 1387, 1389, 1392, 1393, 1397, 1398, 1401, 1402, 1405, 1406, 1409, 1410, 1413, 1414, 1417, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1440, 1442, 1443, 1445, 1447, 1449, 1450, 1452, 1453, 1455, 1457, 1459, 1461, 1463, 1465, 1467, 1469, 1471, 1472, 1474, 1475, 1477, 1478, 1480, 1481, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1494, 1499, 1500, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1546, 1549, 1550, 1563, 1566, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "dict": [188, 189, 190, 191, 192, 201, 202, 233, 244, 249, 250, 251, 252, 253, 254, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 628, 629, 630, 631, 632, 633, 636, 637, 640, 641, 642, 643, 644, 645, 646, 647, 658, 663, 669, 673, 678, 679, 873, 878, 1144, 1149, 1172, 1174, 1176, 1178, 1180, 1182, 1187, 1188, 1488, 1490, 1491, 1494, 1497, 1499, 1500, 1501, 1504, 1505, 1616], "recurs": [188, 189, 190, 191, 192, 251, 252, 607, 610, 611, 651, 654, 665, 669, 679, 692, 1488, 1489, 1490, 1498, 1499, 1500], "deriv": [188, 189, 190, 191, 192, 193, 194, 203, 204, 607, 610, 611, 612, 613, 622, 623, 670, 671, 677, 679, 733, 741, 743, 753, 755, 774, 776, 789, 792, 1265, 1266, 1268, 1269, 1271, 1274, 1276, 1281, 1282, 1284, 1285, 1287, 1288, 1290, 1488, 1490, 1500], "from": [188, 189, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 207, 208, 213, 214, 217, 218, 219, 220, 225, 226, 229, 230, 231, 232, 233, 236, 237, 238, 246, 247, 248, 251, 252, 253, 254, 607, 610, 611, 612, 613, 614, 615, 620, 621, 622, 623, 626, 627, 632, 633, 636, 637, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 662, 663, 664, 666, 667, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 691, 692, 733, 734, 735, 741, 743, 748, 750, 752, 753, 755, 763, 765, 767, 769, 774, 776, 789, 792, 793, 808, 810, 858, 859, 861, 873, 878, 886, 890, 895, 896, 906, 1119, 1121, 1144, 1171, 1189, 1191, 1193, 1195, 1233, 1246, 1249, 1265, 1269, 1271, 1282, 1284, 1296, 1307, 1318, 1320, 1322, 1326, 1328, 1341, 1343, 1389, 1392, 1406, 1409, 1431, 1447, 1449, 1457, 1459, 1469, 1471, 1484, 1485, 1486, 1487, 1488, 1490, 1500, 1501, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1532, 1546, 1549, 1550, 1551, 1554, 1559, 1562, 1581, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1616, 1617, 1623], "tupl": [188, 189, 190, 191, 192, 193, 194, 195, 196, 207, 208, 209, 210, 213, 214, 225, 226, 229, 230, 249, 250, 251, 252, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 636, 637, 640, 641, 642, 643, 644, 645, 646, 647, 656, 657, 658, 662, 663, 664, 670, 671, 673, 675, 678, 679, 680, 692, 733, 737, 738, 767, 769, 793, 804, 806, 829, 830, 832, 833, 858, 867, 873, 878, 884, 885, 1144, 1186, 1307, 1313, 1314, 1316, 1318, 1320, 1325, 1328, 1364, 1366, 1376, 1389, 1392, 1398, 1401, 1410, 1413, 1431, 1436, 1438, 1440, 1442, 1443, 1445, 1447, 1449, 1450, 1452, 1461, 1463, 1469, 1471, 1472, 1474, 1481, 1483, 1484, 1485, 1486, 1487, 1488, 1490, 1491, 1493, 1495, 1496, 1497, 1499, 1500, 1502, 1503, 1504, 1505, 1532, 1541, 1544, 1550, 1555, 1558, 1559, 1562, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "list": [188, 189, 190, 191, 192, 193, 194, 195, 196, 201, 202, 207, 208, 213, 214, 215, 216, 231, 232, 249, 250, 251, 252, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 653, 654, 656, 657, 660, 662, 663, 664, 669, 670, 671, 673, 675, 678, 679, 680, 692, 733, 734, 735, 737, 738, 763, 765, 767, 769, 793, 800, 802, 873, 878, 896, 1144, 1150, 1152, 1246, 1249, 1256, 1260, 1263, 1265, 1291, 1296, 1306, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1328, 1398, 1401, 1431, 1436, 1438, 1443, 1445, 1447, 1449, 1465, 1467, 1472, 1474, 1488, 1489, 1490, 1491, 1494, 1499, 1500, 1504, 1505, 1506, 1507, 1509, 1532, 1541, 1544, 1550, 1555, 1558, 1617], "default": [188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 237, 249, 250, 251, 252, 253, 254, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 657, 659, 660, 662, 663, 665, 666, 667, 670, 671, 675, 679, 705, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 730, 731, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 767, 769, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 796, 798, 804, 806, 814, 815, 816, 818, 819, 820, 822, 863, 866, 871, 873, 878, 879, 881, 888, 891, 892, 893, 894, 895, 896, 897, 901, 904, 905, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1145, 1147, 1149, 1155, 1157, 1159, 1161, 1164, 1165, 1167, 1169, 1172, 1174, 1176, 1178, 1180, 1182, 1185, 1186, 1189, 1191, 1193, 1195, 1201, 1202, 1203, 1204, 1206, 1208, 1209, 1215, 1216, 1217, 1218, 1220, 1221, 1222, 1224, 1226, 1227, 1228, 1233, 1236, 1238, 1240, 1242, 1251, 1254, 1260, 1263, 1264, 1265, 1266, 1268, 1269, 1271, 1272, 1274, 1276, 1277, 1279, 1282, 1284, 1285, 1287, 1288, 1290, 1291, 1292, 1295, 1296, 1306, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1322, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1348, 1349, 1351, 1353, 1355, 1356, 1358, 1364, 1366, 1368, 1370, 1372, 1374, 1376, 1377, 1379, 1381, 1383, 1385, 1387, 1389, 1392, 1393, 1397, 1398, 1401, 1402, 1405, 1406, 1409, 1410, 1413, 1414, 1417, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1440, 1442, 1443, 1445, 1447, 1449, 1450, 1452, 1453, 1455, 1457, 1459, 1461, 1463, 1465, 1467, 1469, 1471, 1472, 1474, 1475, 1477, 1478, 1480, 1481, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1494, 1498, 1499, 1500, 1501, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1527, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1616], "str": [188, 189, 190, 201, 202, 207, 208, 233, 237, 249, 250, 251, 252, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 636, 637, 640, 641, 642, 643, 644, 645, 646, 647, 658, 670, 671, 673, 675, 680, 730, 731, 733, 763, 765, 793, 794, 813, 814, 815, 816, 824, 825, 827, 835, 837, 839, 840, 842, 844, 846, 848, 850, 852, 855, 863, 864, 865, 866, 872, 873, 874, 875, 896, 1144, 1149, 1170, 1172, 1174, 1176, 1178, 1180, 1182, 1222, 1227, 1228, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1328, 1377, 1379, 1484, 1485, 1486, 1487, 1488, 1494, 1504, 1581, 1582, 1584], "kei": [188, 189, 190, 249, 250, 251, 252, 253, 254, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 628, 629, 630, 631, 632, 633, 636, 637, 640, 641, 642, 643, 644, 645, 646, 647, 662, 664, 669, 673, 678, 1144, 1149, 1163, 1307, 1326, 1327, 1484, 1485, 1486, 1488, 1491, 1497, 1501], "word": [188, 189, 190, 669, 733, 734, 735, 1510, 1523, 1525, 1616], "same": [188, 189, 190, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 213, 214, 217, 218, 221, 222, 223, 224, 225, 226, 246, 248, 251, 252, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 632, 633, 636, 637, 640, 641, 644, 645, 651, 652, 654, 656, 657, 658, 660, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 675, 677, 679, 680, 692, 733, 734, 735, 741, 743, 753, 755, 763, 765, 774, 776, 778, 781, 782, 785, 789, 792, 793, 796, 798, 800, 802, 804, 806, 873, 896, 906, 907, 909, 919, 921, 947, 949, 967, 969, 999, 1001, 1079, 1081, 1099, 1101, 1103, 1105, 1107, 1109, 1140, 1143, 1144, 1185, 1189, 1191, 1193, 1195, 1224, 1227, 1228, 1265, 1277, 1279, 1292, 1295, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1345, 1347, 1348, 1349, 1351, 1368, 1370, 1376, 1377, 1379, 1385, 1387, 1389, 1392, 1402, 1405, 1406, 1409, 1431, 1436, 1438, 1447, 1449, 1450, 1452, 1461, 1463, 1469, 1471, 1472, 1474, 1484, 1485, 1486, 1488, 1501, 1510, 1523, 1525, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1567, 1568, 1570, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1600, 1602, 1603, 1606, 1617], "convert": [188, 189, 190, 191, 192, 193, 194, 248, 607, 608, 609, 610, 611, 653, 662, 667, 668, 675, 692, 693, 703, 733, 737, 738, 767, 769, 793, 794, 795, 873, 875, 876, 877, 878, 891, 902, 905, 1144, 1229, 1245, 1250, 1251, 1254, 1255, 1257, 1328, 1414, 1417, 1488, 1490, 1500, 1501, 1616], "args_to_n": [188, 672], "nativ": [188, 190, 191, 192, 193, 194, 233, 238, 607, 610, 611, 662, 663, 664, 667, 670, 672, 677, 678, 733, 767, 769, 793, 794, 795, 813, 819, 858, 873, 875, 876, 877, 878, 879, 881, 891, 902, 905, 1144, 1215, 1217, 1220, 1250, 1616], "backend": [188, 190, 192, 203, 204, 236, 237, 238, 244, 246, 652, 653, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 670, 671, 672, 674, 676, 677, 680, 793, 829, 830, 832, 833, 839, 872, 873, 884, 885, 887, 889, 903, 1144, 1187, 1188, 1209, 1215, 1216, 1222, 1250, 1265, 1302, 1305, 1616, 1617, 1623], "to_ivi": [188, 607, 1488, 1501], "If": [188, 191, 192, 193, 194, 195, 196, 203, 204, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 233, 236, 237, 238, 246, 249, 250, 251, 252, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 628, 629, 630, 631, 632, 633, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 650, 651, 652, 653, 654, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 678, 680, 692, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 752, 753, 755, 763, 765, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 796, 798, 804, 806, 819, 859, 861, 873, 878, 895, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 967, 969, 971, 973, 975, 977, 991, 993, 995, 997, 999, 1001, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1059, 1061, 1063, 1065, 1079, 1081, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1215, 1265, 1291, 1306, 1328, 1329, 1331, 1333, 1335, 1356, 1358, 1364, 1366, 1376, 1377, 1379, 1385, 1387, 1389, 1392, 1406, 1409, 1410, 1413, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1443, 1445, 1447, 1449, 1457, 1459, 1461, 1463, 1465, 1467, 1469, 1471, 1472, 1474, 1484, 1485, 1486, 1488, 1500, 1501, 1510, 1515, 1517, 1519, 1521, 1523, 1525, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1617], "set": [188, 191, 192, 201, 202, 203, 204, 209, 210, 219, 220, 222, 223, 224, 225, 226, 233, 236, 237, 238, 244, 246, 251, 252, 620, 621, 622, 623, 628, 629, 638, 639, 641, 642, 643, 644, 645, 650, 652, 655, 656, 658, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 675, 677, 678, 793, 819, 863, 866, 873, 878, 893, 894, 895, 896, 906, 935, 937, 1144, 1145, 1147, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1265, 1277, 1279, 1328, 1333, 1335, 1356, 1358, 1364, 1366, 1376, 1385, 1387, 1488, 1489, 1498, 1499, 1500, 1504, 1505, 1510, 1527, 1532, 1533, 1535, 1551, 1554, 1555, 1558, 1559, 1562, 1563, 1566, 1567, 1568, 1570, 1577, 1579, 1581, 1597, 1599, 1603, 1606], "leaf": [188, 191, 192, 251, 252, 665, 669, 678, 1488, 1489, 1498, 1499], "within": [188, 191, 192, 652, 653, 662, 664, 679, 692, 733, 734, 735, 1510, 1523, 1525], "union": [188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 225, 226, 229, 230, 249, 250, 251, 252, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 656, 657, 658, 660, 663, 665, 668, 669, 670, 671, 672, 673, 675, 680, 705, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 730, 731, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 752, 753, 755, 757, 758, 760, 761, 763, 765, 767, 769, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 794, 795, 796, 798, 800, 802, 804, 806, 813, 814, 815, 816, 818, 819, 820, 822, 824, 825, 827, 835, 837, 839, 840, 842, 844, 846, 848, 850, 852, 855, 857, 859, 861, 863, 864, 865, 866, 867, 872, 873, 875, 876, 877, 878, 879, 881, 883, 886, 890, 891, 892, 893, 894, 895, 896, 897, 901, 902, 905, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1145, 1147, 1151, 1152, 1155, 1157, 1159, 1161, 1164, 1165, 1167, 1169, 1172, 1174, 1176, 1178, 1180, 1182, 1185, 1186, 1189, 1191, 1193, 1195, 1202, 1204, 1206, 1208, 1210, 1212, 1214, 1215, 1218, 1220, 1224, 1227, 1228, 1236, 1238, 1240, 1245, 1246, 1249, 1250, 1251, 1254, 1255, 1260, 1263, 1264, 1265, 1266, 1268, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1284, 1285, 1287, 1288, 1290, 1292, 1295, 1298, 1301, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1322, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1345, 1347, 1348, 1349, 1351, 1353, 1355, 1356, 1358, 1364, 1366, 1368, 1370, 1372, 1374, 1376, 1377, 1379, 1381, 1383, 1385, 1387, 1389, 1392, 1393, 1397, 1398, 1401, 1402, 1405, 1406, 1409, 1410, 1413, 1414, 1417, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1440, 1442, 1443, 1445, 1447, 1449, 1450, 1452, 1453, 1455, 1457, 1459, 1461, 1463, 1465, 1467, 1469, 1471, 1472, 1474, 1475, 1477, 1478, 1480, 1481, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1499, 1500, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1559, 1562, 1563, 1566, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1588, 1590, 1591, 1593, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "nativearrai": [188, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 249, 250, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 636, 637, 638, 639, 642, 643, 646, 647, 656, 657, 660, 663, 665, 667, 668, 669, 672, 673, 675, 677, 693, 703, 705, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 733, 734, 735, 737, 738, 741, 743, 753, 755, 757, 758, 760, 761, 763, 765, 767, 769, 774, 776, 778, 781, 782, 785, 789, 792, 793, 796, 798, 800, 802, 804, 806, 808, 810, 820, 822, 825, 827, 835, 837, 840, 842, 844, 846, 848, 850, 852, 855, 858, 859, 861, 867, 873, 878, 879, 881, 890, 896, 897, 901, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1145, 1147, 1151, 1152, 1155, 1157, 1159, 1161, 1164, 1165, 1167, 1169, 1172, 1174, 1176, 1178, 1180, 1182, 1185, 1186, 1189, 1191, 1193, 1195, 1202, 1204, 1206, 1208, 1210, 1212, 1214, 1215, 1218, 1220, 1224, 1227, 1228, 1229, 1236, 1238, 1240, 1246, 1249, 1251, 1254, 1255, 1257, 1260, 1263, 1264, 1265, 1266, 1268, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1284, 1285, 1287, 1288, 1290, 1292, 1295, 1298, 1301, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1322, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1345, 1347, 1348, 1349, 1351, 1353, 1355, 1356, 1358, 1364, 1366, 1368, 1370, 1372, 1374, 1376, 1377, 1379, 1381, 1383, 1385, 1387, 1389, 1392, 1393, 1397, 1398, 1401, 1402, 1405, 1406, 1409, 1410, 1413, 1414, 1417, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1440, 1442, 1443, 1445, 1447, 1449, 1450, 1452, 1453, 1455, 1457, 1459, 1461, 1463, 1465, 1467, 1469, 1471, 1472, 1474, 1475, 1477, 1478, 1480, 1481, 1483, 1488, 1490, 1491, 1500, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1559, 1562, 1563, 1566, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1588, 1590, 1591, 1593, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1616], "mayb": [188, 191, 192, 651, 675, 677], "manner": [188, 191, 192, 246, 607, 610, 611, 656, 659, 662, 671, 678, 691, 692, 1488, 1500], "travers": [188, 191, 192, 607, 610, 611, 669, 675, 1488, 1500], "lowest": [188, 191, 192, 217, 218, 607, 610, 611, 636, 637, 665, 670, 692, 1488, 1500, 1510, 1515, 1517, 1616], "leav": [188, 191, 192, 253, 254, 607, 610, 611, 620, 621, 657, 659, 660, 662, 665, 669, 670, 672, 678, 679, 1431, 1472, 1474, 1488, 1489, 1490, 1498, 1499, 1500], "search": [188, 191, 192, 220, 246, 607, 610, 611, 639, 651, 656, 660, 662, 1533, 1535, 1537, 1539, 1541, 1544, 1546, 1549], "case": [188, 191, 192, 213, 214, 225, 226, 247, 251, 252, 253, 254, 632, 633, 651, 652, 653, 656, 657, 658, 659, 660, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 677, 679, 680, 692, 733, 763, 765, 873, 891, 902, 905, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 963, 965, 967, 969, 971, 973, 975, 977, 991, 993, 995, 997, 999, 1001, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1059, 1061, 1079, 1081, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1215, 1227, 1228, 1328, 1356, 1358, 1431, 1457, 1459, 1488, 1491, 1497, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1597, 1599, 1600, 1602, 1603, 1606], "to_n": [188, 607, 675], "item": [188, 192, 231, 232, 251, 252, 620, 621, 653, 670, 675, 677, 678, 680, 793, 814, 873, 878, 1144, 1163, 1203, 1238, 1240, 1242, 1265, 1296, 1488, 1493, 1494, 1495, 1496, 1500, 1504, 1505, 1617], "convers": [189, 190, 191, 192, 248, 608, 609, 610, 611, 653, 667, 674, 676, 680, 691, 692, 1144, 1229, 1616, 1617, 1623], "asarrai": [193, 194, 201, 202, 620, 621, 662, 664, 667, 672, 733, 1144, 1238, 1240, 1307, 1308, 1310, 1550, 1555, 1558], "copi": [193, 194, 195, 196, 201, 202, 213, 214, 251, 252, 612, 613, 614, 615, 616, 617, 620, 621, 632, 633, 652, 654, 659, 666, 670, 675, 678, 691, 692, 733, 737, 738, 748, 750, 793, 796, 798, 873, 897, 901, 1144, 1164, 1251, 1254, 1255, 1431, 1457, 1459, 1488, 1490, 1567, 1577, 1579], "can": [193, 194, 195, 196, 213, 214, 217, 218, 246, 247, 248, 607, 608, 609, 614, 615, 632, 633, 636, 637, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 691, 692, 733, 737, 738, 767, 769, 793, 808, 810, 873, 894, 895, 896, 1328, 1349, 1351, 1431, 1457, 1459, 1510, 1515, 1517, 1519, 1521, 1523, 1525, 1616, 1617, 1623], "includ": [193, 194, 201, 202, 219, 220, 225, 226, 229, 230, 247, 251, 252, 620, 621, 628, 629, 638, 639, 644, 645, 646, 647, 652, 653, 656, 657, 659, 660, 661, 662, 665, 666, 668, 669, 670, 671, 672, 673, 675, 691, 692, 733, 734, 735, 737, 738, 767, 769, 1144, 1204, 1206, 1264, 1328, 1410, 1413, 1488, 1489, 1510, 1523, 1525, 1532, 1537, 1539, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "ndarrai": [193, 194, 233, 238, 657, 658, 668, 670, 671, 672, 675, 677, 680, 733, 737, 738, 767, 769, 1144, 1251, 1254, 1616], "nativedtyp": [193, 194, 217, 218, 612, 613, 636, 637, 656, 657, 670, 671, 675, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 752, 753, 755, 767, 769, 771, 772, 774, 776, 786, 788, 789, 792, 793, 795, 796, 798, 815, 816, 818, 819, 820, 822, 824, 839, 857, 863, 872, 1510, 1515, 1517, 1519, 1521, 1523, 1525, 1581, 1600, 1602], "datatyp": [193, 194, 251, 252, 733, 753, 755, 767, 769, 793, 813, 857, 863], "infer": [193, 194, 213, 214, 233, 236, 612, 613, 632, 633, 655, 666, 667, 670, 671, 675, 680, 730, 731, 733, 734, 735, 741, 743, 752, 753, 755, 767, 769, 774, 776, 789, 792, 793, 819, 1144, 1202, 1236, 1431, 1457, 1459], "nativedevic": [193, 194, 197, 198, 217, 218, 612, 613, 616, 617, 636, 637, 656, 657, 670, 671, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 752, 753, 755, 757, 758, 760, 761, 767, 769, 771, 772, 774, 776, 786, 788, 789, 792, 873, 876, 877, 878, 879, 881, 883, 886, 890, 891, 892, 893, 894, 895, 896, 897, 901, 902, 905, 1144, 1224, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525], "which": [193, 194, 195, 196, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 226, 229, 230, 233, 236, 237, 246, 247, 248, 249, 250, 251, 252, 253, 254, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 628, 629, 630, 631, 632, 633, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 691, 692, 705, 722, 724, 730, 731, 732, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 752, 753, 755, 757, 758, 760, 761, 767, 769, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 808, 810, 813, 820, 822, 825, 827, 835, 837, 839, 872, 873, 879, 881, 886, 890, 892, 894, 895, 896, 906, 1099, 1101, 1144, 1149, 1165, 1167, 1169, 1171, 1189, 1191, 1193, 1195, 1197, 1208, 1215, 1223, 1224, 1225, 1227, 1228, 1260, 1263, 1265, 1269, 1271, 1272, 1273, 1274, 1276, 1281, 1282, 1284, 1285, 1287, 1288, 1290, 1292, 1295, 1297, 1298, 1301, 1302, 1305, 1307, 1326, 1328, 1333, 1335, 1341, 1343, 1356, 1358, 1385, 1387, 1389, 1392, 1406, 1409, 1410, 1413, 1418, 1423, 1425, 1427, 1429, 1431, 1436, 1438, 1447, 1449, 1453, 1455, 1461, 1463, 1465, 1467, 1472, 1474, 1488, 1493, 1494, 1495, 1496, 1501, 1502, 1503, 1504, 1505, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1567, 1568, 1570, 1577, 1579, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1616, 1617], "place": [193, 194, 199, 200, 201, 202, 213, 214, 251, 252, 612, 613, 616, 617, 618, 619, 620, 621, 632, 633, 652, 655, 656, 657, 658, 659, 660, 662, 663, 665, 669, 671, 672, 673, 680, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 767, 769, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 808, 810, 840, 842, 848, 850, 873, 897, 901, 906, 907, 909, 919, 921, 923, 925, 927, 929, 935, 937, 943, 945, 963, 965, 967, 969, 975, 977, 995, 997, 999, 1001, 1015, 1017, 1019, 1021, 1023, 1025, 1039, 1041, 1043, 1045, 1063, 1065, 1071, 1073, 1075, 1077, 1087, 1089, 1103, 1105, 1107, 1109, 1111, 1113, 1119, 1121, 1123, 1125, 1132, 1135, 1136, 1139, 1144, 1189, 1191, 1204, 1206, 1210, 1212, 1214, 1215, 1265, 1277, 1279, 1292, 1295, 1298, 1301, 1302, 1305, 1307, 1313, 1318, 1320, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1353, 1355, 1431, 1443, 1445, 1447, 1449, 1461, 1463, 1506, 1507, 1509, 1550, 1551, 1554, 1555, 1558, 1567, 1568, 1570, 1581, 1585, 1587, 1603, 1606, 1607, 1608, 1610, 1616], "creat": [193, 194, 201, 202, 217, 218, 247, 251, 252, 612, 613, 620, 621, 636, 637, 650, 651, 652, 653, 654, 655, 658, 662, 663, 664, 667, 670, 671, 672, 675, 676, 679, 690, 691, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 752, 753, 755, 757, 758, 760, 761, 767, 769, 771, 772, 774, 776, 786, 788, 789, 792, 1144, 1189, 1191, 1193, 1195, 1224, 1227, 1228, 1246, 1249, 1265, 1297, 1298, 1301, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1616, 1617, 1623], "output": [193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 225, 226, 229, 230, 249, 250, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 651, 652, 655, 656, 657, 659, 660, 662, 664, 665, 667, 668, 669, 671, 672, 675, 677, 679, 680, 692, 705, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 796, 798, 804, 806, 858, 873, 896, 897, 901, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1154, 1155, 1157, 1159, 1161, 1164, 1165, 1167, 1169, 1172, 1174, 1176, 1178, 1180, 1182, 1185, 1189, 1191, 1193, 1195, 1208, 1224, 1227, 1228, 1229, 1257, 1265, 1266, 1268, 1269, 1271, 1272, 1273, 1274, 1276, 1281, 1282, 1284, 1285, 1287, 1288, 1290, 1292, 1295, 1297, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1322, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1348, 1349, 1351, 1353, 1355, 1356, 1358, 1364, 1366, 1368, 1370, 1372, 1374, 1376, 1381, 1383, 1385, 1387, 1389, 1392, 1393, 1397, 1398, 1401, 1402, 1405, 1406, 1409, 1410, 1413, 1414, 1417, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1440, 1442, 1443, 1445, 1447, 1449, 1450, 1452, 1453, 1455, 1457, 1459, 1461, 1463, 1469, 1471, 1472, 1474, 1475, 1477, 1478, 1480, 1481, 1483, 1488, 1501, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1528, 1530, 1532, 1546, 1549, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1616, 1617], "write": [193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 225, 226, 229, 230, 248, 249, 250, 251, 252, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 652, 653, 654, 655, 656, 659, 660, 664, 665, 666, 672, 675, 677, 680, 705, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 796, 798, 804, 806, 873, 897, 901, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1155, 1157, 1159, 1161, 1164, 1165, 1167, 1169, 1172, 1174, 1176, 1178, 1180, 1182, 1185, 1189, 1191, 1193, 1195, 1208, 1224, 1227, 1228, 1265, 1266, 1268, 1269, 1271, 1274, 1276, 1282, 1284, 1285, 1287, 1288, 1290, 1292, 1295, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1322, 1324, 1326, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1348, 1349, 1351, 1353, 1355, 1356, 1358, 1364, 1366, 1368, 1370, 1372, 1374, 1376, 1381, 1383, 1385, 1387, 1389, 1392, 1393, 1397, 1398, 1401, 1402, 1405, 1406, 1409, 1410, 1413, 1414, 1417, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1440, 1442, 1443, 1445, 1447, 1449, 1450, 1452, 1453, 1455, 1457, 1459, 1461, 1463, 1469, 1471, 1472, 1474, 1475, 1477, 1478, 1480, 1481, 1483, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1528, 1530, 1532, 1546, 1549, 1550, 1563, 1566, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "It": [193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 229, 230, 249, 250, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 651, 652, 653, 654, 655, 656, 659, 660, 662, 663, 664, 666, 667, 668, 669, 670, 672, 675, 677, 678, 679, 705, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 796, 798, 804, 806, 873, 897, 901, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1155, 1157, 1159, 1161, 1164, 1165, 1167, 1172, 1174, 1176, 1178, 1180, 1182, 1185, 1193, 1195, 1208, 1224, 1227, 1228, 1265, 1266, 1268, 1269, 1271, 1274, 1276, 1282, 1284, 1285, 1287, 1288, 1290, 1292, 1295, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1322, 1324, 1326, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1348, 1349, 1351, 1353, 1355, 1356, 1358, 1364, 1366, 1368, 1370, 1372, 1374, 1376, 1381, 1383, 1385, 1387, 1389, 1392, 1393, 1397, 1398, 1401, 1402, 1405, 1406, 1409, 1410, 1413, 1414, 1417, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1440, 1442, 1443, 1445, 1447, 1449, 1450, 1452, 1453, 1455, 1457, 1459, 1461, 1463, 1469, 1471, 1472, 1474, 1475, 1477, 1478, 1480, 1481, 1483, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1528, 1530, 1532, 1533, 1535, 1546, 1549, 1550, 1563, 1566, 1567, 1568, 1570, 1577, 1579, 1607, 1608, 1610, 1612, 1614], "interpret": [193, 194, 733, 737, 738, 767, 769], "empty_lik": [193, 194, 612, 613, 733], "uniniti": [193, 194, 733, 740, 741, 743], "from_dlpack": [193, 194, 612, 613, 733], "full_lik": [193, 194, 612, 613, 658, 733], "fill_valu": [193, 194, 612, 613, 658, 664, 670, 733, 752, 753, 755, 906, 1011, 1013, 1031, 1033], "float": [193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 215, 216, 217, 218, 225, 226, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 628, 629, 630, 631, 634, 635, 636, 637, 644, 645, 657, 658, 659, 662, 664, 665, 667, 669, 670, 672, 675, 677, 679, 705, 710, 712, 732, 733, 734, 735, 737, 738, 740, 745, 746, 752, 753, 755, 757, 758, 760, 761, 771, 772, 786, 788, 793, 796, 798, 812, 815, 816, 825, 827, 844, 846, 858, 859, 861, 873, 883, 891, 894, 895, 902, 905, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1079, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1103, 1105, 1111, 1113, 1115, 1117, 1119, 1121, 1127, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1155, 1157, 1159, 1161, 1186, 1199, 1200, 1204, 1206, 1230, 1231, 1238, 1240, 1242, 1265, 1266, 1268, 1269, 1271, 1274, 1276, 1282, 1284, 1285, 1287, 1288, 1290, 1307, 1313, 1322, 1327, 1328, 1329, 1331, 1337, 1339, 1345, 1347, 1348, 1349, 1351, 1364, 1366, 1376, 1377, 1379, 1385, 1387, 1389, 1392, 1410, 1413, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1484, 1485, 1486, 1487, 1488, 1494, 1506, 1507, 1509, 1510, 1519, 1521, 1523, 1525, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606], "scalar": [193, 194, 249, 250, 612, 613, 628, 629, 670, 692, 733, 753, 755, 1144, 1224, 1255, 1264, 1328, 1410, 1413], "fill": [193, 194, 217, 218, 251, 252, 612, 613, 636, 637, 664, 733, 740, 752, 753, 755, 771, 772, 774, 776, 786, 788, 789, 792, 1510, 1515, 1517], "where": [193, 194, 213, 214, 217, 218, 219, 220, 225, 226, 229, 230, 246, 247, 248, 251, 252, 628, 629, 632, 633, 636, 637, 638, 639, 644, 645, 646, 647, 650, 651, 652, 653, 654, 658, 659, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 678, 679, 680, 692, 733, 752, 753, 755, 763, 765, 906, 935, 937, 991, 993, 1043, 1045, 1079, 1081, 1095, 1097, 1144, 1208, 1215, 1224, 1265, 1291, 1296, 1306, 1328, 1345, 1347, 1364, 1366, 1376, 1377, 1379, 1389, 1392, 1393, 1397, 1402, 1405, 1406, 1409, 1431, 1432, 1434, 1440, 1442, 1443, 1445, 1450, 1452, 1472, 1474, 1481, 1483, 1488, 1489, 1499, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1532, 1541, 1544, 1581, 1597, 1599, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1617], "everi": [193, 194, 201, 202, 620, 621, 652, 653, 654, 657, 660, 661, 662, 665, 666, 667, 669, 670, 672, 675, 677, 679, 733, 752, 753, 755, 1144, 1145, 1147], "int": [193, 194, 195, 196, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 229, 230, 612, 613, 614, 615, 616, 617, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 656, 657, 658, 660, 662, 663, 664, 665, 669, 670, 671, 672, 673, 675, 680, 705, 722, 724, 730, 731, 733, 745, 746, 752, 753, 755, 757, 758, 760, 761, 778, 781, 782, 785, 793, 804, 806, 818, 824, 825, 827, 835, 837, 848, 850, 873, 888, 889, 890, 896, 897, 901, 906, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 1144, 1149, 1165, 1167, 1169, 1172, 1174, 1176, 1178, 1180, 1182, 1186, 1189, 1191, 1202, 1224, 1227, 1238, 1240, 1260, 1263, 1265, 1266, 1268, 1269, 1271, 1282, 1284, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1328, 1333, 1335, 1341, 1343, 1398, 1401, 1402, 1405, 1406, 1409, 1410, 1413, 1418, 1423, 1425, 1427, 1429, 1431, 1436, 1438, 1440, 1442, 1443, 1445, 1447, 1449, 1450, 1452, 1453, 1455, 1457, 1459, 1461, 1463, 1465, 1467, 1469, 1471, 1472, 1474, 1475, 1477, 1478, 1480, 1481, 1483, 1484, 1485, 1486, 1487, 1488, 1491, 1494, 1499, 1500, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1527, 1532, 1533, 1535, 1537, 1539, 1567, 1568, 1570, 1577, 1579, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "000123": [193, 194, 733, 753, 755], "ones": [193, 194, 203, 204, 217, 218, 251, 252, 612, 613, 636, 637, 660, 662, 677, 678, 733, 745, 746, 753, 755, 774, 776, 789, 792, 906, 967, 969, 1144, 1224, 1265, 1266, 1268, 1617], "meshgrid": [193, 194, 612, 613, 733], "index": [193, 194, 201, 202, 219, 220, 221, 222, 223, 224, 251, 252, 612, 613, 620, 621, 638, 639, 640, 641, 642, 643, 654, 665, 669, 677, 732, 733, 745, 746, 763, 765, 873, 893, 1144, 1149, 1189, 1191, 1193, 1195, 1265, 1296, 1431, 1472, 1474, 1488, 1491, 1492, 1495, 1496, 1497, 1502, 1504, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1550, 1551, 1554, 1555, 1558, 1567, 1568, 1570, 1572, 1575], "xy": [193, 194, 612, 613, 733, 763, 765], "native_arrai": [193, 194, 195, 196, 199, 200, 201, 202, 233, 238, 244, 612, 613, 618, 619, 620, 621, 642, 643, 662, 664, 705, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 733, 753, 755, 763, 765, 789, 792, 793, 796, 798, 800, 802, 804, 806, 808, 810, 820, 822, 825, 827, 835, 837, 848, 850, 859, 861, 873, 879, 881, 890, 906, 907, 909, 923, 925, 927, 929, 935, 937, 943, 945, 963, 965, 967, 969, 979, 981, 983, 985, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1039, 1041, 1043, 1045, 1055, 1057, 1059, 1061, 1063, 1065, 1083, 1085, 1087, 1089, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1136, 1139, 1144, 1145, 1147, 1152, 1155, 1157, 1159, 1161, 1184, 1189, 1191, 1193, 1195, 1204, 1206, 1210, 1212, 1214, 1218, 1220, 1246, 1249, 1251, 1254, 1255, 1307, 1308, 1310, 1313, 1316, 1318, 1320, 1327, 1328, 1337, 1339, 1341, 1343, 1353, 1355, 1364, 1366, 1393, 1397, 1398, 1401, 1418, 1419, 1421, 1427, 1429, 1431, 1432, 1434, 1447, 1449, 1453, 1455, 1457, 1459, 1461, 1463, 1465, 1467, 1469, 1471, 1475, 1477, 1510, 1511, 1513, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1567, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "A": [193, 194, 195, 196, 201, 202, 213, 214, 229, 230, 245, 246, 247, 248, 251, 252, 253, 254, 607, 608, 609, 614, 615, 620, 621, 622, 623, 632, 633, 636, 637, 646, 647, 654, 655, 657, 662, 665, 669, 670, 671, 675, 678, 692, 733, 745, 746, 767, 769, 793, 800, 802, 873, 896, 906, 1091, 1093, 1144, 1200, 1246, 1249, 1265, 1297, 1328, 1372, 1374, 1381, 1383, 1385, 1387, 1389, 1392, 1431, 1465, 1467, 1472, 1474, 1488, 1489, 1491, 1493, 1495, 1496, 1497, 1498, 1499, 1502, 1503, 1504, 1505, 1581, 1582, 1584, 1607, 1608, 1610, 1612, 1614, 1616, 1617], "ones_lik": [193, 194, 612, 613, 680, 733, 1617], "tril": [193, 194, 612, 613, 733], "k": [193, 194, 217, 218, 612, 613, 618, 619, 636, 637, 655, 663, 664, 675, 733, 745, 746, 778, 781, 782, 785, 1144, 1151, 1307, 1327, 1328, 1353, 1355, 1377, 1379, 1385, 1387, 1389, 1392, 1393, 1397, 1402, 1405, 1510, 1515, 1517, 1519, 1521, 1523, 1525, 1532, 1541, 1544], "m": [193, 194, 209, 210, 217, 218, 618, 619, 628, 629, 636, 637, 651, 652, 654, 655, 675, 733, 763, 765, 778, 781, 782, 785, 1144, 1152, 1328, 1329, 1331, 1337, 1339, 1341, 1343, 1345, 1347, 1348, 1349, 1351, 1353, 1355, 1364, 1366, 1368, 1370, 1372, 1374, 1376, 1377, 1379, 1385, 1387, 1389, 1392, 1393, 1397, 1402, 1405, 1510, 1515, 1517, 1519, 1521, 1523, 1525], "n": [193, 194, 213, 214, 217, 218, 225, 226, 229, 230, 618, 619, 628, 629, 632, 633, 636, 637, 644, 645, 646, 647, 655, 662, 733, 763, 765, 778, 781, 782, 785, 1144, 1152, 1307, 1322, 1328, 1341, 1343, 1353, 1355, 1360, 1362, 1364, 1366, 1368, 1370, 1372, 1374, 1376, 1377, 1379, 1389, 1392, 1393, 1397, 1402, 1405, 1406, 1409, 1410, 1413, 1414, 1417, 1431, 1440, 1442, 1443, 1445, 1450, 1452, 1472, 1474, 1481, 1483, 1510, 1515, 1517, 1519, 1521, 1523, 1525, 1532, 1541, 1544, 1581, 1588, 1590, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "whose": [193, 194, 199, 200, 209, 210, 213, 214, 221, 222, 612, 613, 618, 619, 628, 629, 632, 633, 640, 641, 659, 662, 733, 778, 781, 782, 785, 906, 915, 917, 927, 929, 939, 941, 971, 973, 975, 977, 1095, 1097, 1111, 1113, 1115, 1117, 1132, 1135, 1136, 1139, 1144, 1154, 1328, 1329, 1331, 1337, 1339, 1341, 1343, 1345, 1347, 1348, 1349, 1351, 1364, 1366, 1368, 1370, 1372, 1374, 1376, 1377, 1379, 1385, 1387, 1389, 1392, 1393, 1397, 1402, 1405, 1431, 1447, 1449, 1461, 1463, 1550, 1551, 1554, 1555, 1558, 1581, 1582, 1584], "innermost": [193, 194, 209, 210, 628, 629, 733, 778, 781, 782, 785, 1328, 1329, 1331, 1337, 1339, 1341, 1343, 1345, 1347, 1348, 1349, 1351, 1364, 1366, 1368, 1370, 1376, 1377, 1379, 1385, 1387, 1389, 1392, 1393, 1397, 1402, 1405], "two": [193, 194, 209, 210, 248, 253, 254, 628, 629, 651, 659, 660, 661, 662, 663, 664, 668, 674, 678, 680, 733, 734, 735, 745, 746, 763, 765, 778, 781, 782, 785, 793, 857, 867, 906, 959, 961, 1103, 1105, 1144, 1151, 1328, 1329, 1331, 1337, 1339, 1341, 1343, 1345, 1347, 1348, 1349, 1351, 1353, 1355, 1356, 1358, 1364, 1366, 1368, 1370, 1372, 1374, 1376, 1377, 1379, 1381, 1383, 1385, 1387, 1389, 1392, 1393, 1397, 1402, 1405, 1406, 1409, 1431, 1475, 1477, 1550, 1551, 1554, 1555, 1558, 1559, 1562, 1563, 1566, 1617], "mxn": [193, 194, 628, 629, 733, 778, 781, 782, 785, 1328, 1341, 1343, 1364, 1366, 1368, 1370, 1376, 1377, 1379, 1393, 1397, 1402, 1405], "matric": [193, 194, 209, 210, 628, 629, 691, 733, 763, 765, 778, 781, 782, 785, 1307, 1324, 1328, 1329, 1331, 1337, 1339, 1341, 1343, 1345, 1347, 1348, 1349, 1351, 1360, 1362, 1364, 1366, 1368, 1370, 1376, 1377, 1379, 1385, 1387, 1389, 1392, 1393, 1397, 1402, 1405], "diagon": [193, 194, 209, 210, 628, 629, 733, 745, 746, 778, 781, 782, 785, 1328, 1402, 1405], "abov": [193, 194, 199, 200, 217, 218, 618, 619, 636, 637, 651, 652, 654, 657, 659, 660, 662, 663, 665, 666, 668, 669, 672, 673, 675, 677, 678, 679, 680, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 808, 810, 840, 842, 848, 850, 906, 907, 909, 919, 921, 923, 925, 927, 929, 935, 937, 943, 945, 963, 965, 967, 969, 975, 977, 995, 997, 999, 1001, 1015, 1017, 1019, 1021, 1023, 1025, 1039, 1041, 1043, 1045, 1063, 1065, 1071, 1073, 1075, 1077, 1079, 1081, 1087, 1089, 1103, 1105, 1107, 1109, 1111, 1113, 1119, 1121, 1123, 1125, 1132, 1135, 1136, 1139, 1144, 1189, 1191, 1204, 1206, 1210, 1212, 1265, 1277, 1279, 1292, 1295, 1298, 1301, 1302, 1305, 1307, 1313, 1318, 1320, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1345, 1347, 1353, 1355, 1402, 1405, 1431, 1443, 1445, 1447, 1449, 1461, 1463, 1506, 1507, 1509, 1510, 1515, 1517, 1550, 1551, 1554, 1555, 1558, 1567, 1568, 1570, 1581, 1585, 1587, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610], "zero": [193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 219, 220, 225, 226, 229, 230, 248, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 628, 629, 636, 637, 644, 645, 646, 647, 657, 660, 662, 667, 668, 669, 670, 671, 675, 678, 679, 705, 710, 712, 714, 716, 733, 740, 745, 746, 763, 765, 778, 781, 782, 785, 789, 792, 793, 796, 798, 800, 802, 906, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 951, 953, 971, 973, 975, 977, 995, 997, 999, 1001, 1015, 1017, 1019, 1021, 1023, 1025, 1043, 1045, 1059, 1061, 1063, 1065, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1089, 1095, 1097, 1099, 1101, 1103, 1105, 1111, 1113, 1119, 1121, 1123, 1125, 1132, 1135, 1136, 1139, 1144, 1159, 1161, 1164, 1165, 1167, 1224, 1227, 1228, 1265, 1266, 1268, 1269, 1271, 1282, 1284, 1285, 1287, 1288, 1290, 1292, 1295, 1307, 1322, 1327, 1328, 1329, 1331, 1337, 1339, 1353, 1355, 1364, 1366, 1376, 1406, 1409, 1410, 1413, 1431, 1443, 1445, 1447, 1449, 1461, 1463, 1481, 1483, 1506, 1507, 1509, 1510, 1515, 1517, 1519, 1521, 1523, 1525, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1617], "main": [193, 194, 651, 654, 667, 669, 733, 745, 746, 778, 781, 782, 785, 1328, 1341, 1343, 1402, 1405], "below": [193, 194, 644, 645, 650, 651, 653, 654, 655, 656, 658, 660, 662, 665, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 691, 733, 778, 781, 782, 785, 906, 935, 937, 943, 945, 963, 965, 975, 977, 1023, 1025, 1136, 1139, 1328, 1333, 1335, 1337, 1339, 1341, 1343, 1402, 1405, 1431, 1447, 1449, 1550, 1551, 1554, 1567, 1568, 1570, 1617], "lower": [193, 194, 209, 210, 217, 218, 618, 619, 628, 629, 636, 637, 652, 660, 662, 675, 692, 733, 745, 746, 778, 781, 906, 1071, 1073, 1328, 1329, 1331, 1510, 1523, 1525, 1616], "triangular": [193, 194, 209, 210, 628, 629, 733, 778, 781, 782, 785, 1328, 1329, 1331, 1377, 1379], "part": [193, 194, 203, 204, 652, 656, 661, 662, 665, 675, 676, 680, 691, 692, 733, 778, 781, 782, 785], "specifi": [193, 194, 195, 196, 201, 202, 211, 212, 213, 214, 217, 218, 219, 220, 229, 230, 233, 237, 249, 250, 251, 252, 614, 615, 620, 621, 628, 629, 630, 631, 632, 633, 636, 637, 638, 639, 646, 647, 652, 655, 657, 661, 662, 663, 664, 665, 670, 671, 672, 675, 678, 679, 733, 734, 735, 740, 752, 757, 758, 760, 761, 771, 772, 778, 781, 782, 785, 786, 788, 793, 796, 798, 804, 806, 873, 886, 890, 892, 895, 896, 897, 901, 906, 1099, 1101, 1144, 1149, 1189, 1191, 1193, 1195, 1204, 1206, 1260, 1263, 1328, 1341, 1343, 1356, 1358, 1398, 1401, 1402, 1405, 1406, 1409, 1410, 1413, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1436, 1438, 1440, 1442, 1443, 1445, 1447, 1449, 1461, 1463, 1469, 1471, 1472, 1474, 1481, 1483, 1488, 1493, 1495, 1496, 1502, 1503, 1504, 1505, 1510, 1515, 1517, 1519, 1521, 1523, 1525, 1532, 1533, 1535, 1537, 1539, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1567, 1568, 1570, 1581, 1582, 1584, 1594, 1596, 1600, 1602, 1607, 1608, 1610, 1612, 1614], "alloc": [193, 194, 195, 196, 614, 615, 652, 692, 733, 778, 781, 782, 785, 793, 796, 798], "triu": [193, 194, 612, 613, 733], "upper": [193, 194, 209, 210, 217, 218, 628, 629, 636, 637, 662, 733, 745, 746, 782, 785, 1328, 1329, 1331, 1377, 1379, 1510, 1523, 1525], "zeros_lik": [193, 194, 612, 613, 663, 733, 793, 796, 798, 906, 1063, 1065, 1265, 1266, 1268, 1274, 1276, 1282, 1284, 1288, 1290, 1307, 1318, 1320, 1431, 1432, 1434, 1617], "creation": [194, 251, 252, 253, 254, 613, 656, 658, 662, 664, 667, 670, 671, 675, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 767, 769, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792], "data_typ": [195, 196, 614, 615, 656, 658, 662, 670, 793, 794, 795, 796, 798, 800, 802, 804, 806, 808, 810, 812, 813, 814, 815, 816, 818, 819, 820, 822, 824, 825, 827, 829, 830, 832, 833, 835, 837, 839, 840, 842, 844, 846, 848, 850, 852, 855, 857, 858, 859, 861, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "astyp": [195, 196, 207, 208, 614, 615, 626, 627, 663, 670, 672, 793], "irrespect": [195, 196, 614, 615, 669, 672, 677, 793, 796, 798], "rule": [195, 196, 209, 210, 614, 615, 628, 629, 660, 662, 665, 668, 669, 670, 673, 793, 796, 798, 808, 810, 858, 859, 861, 906, 939, 941, 959, 961, 979, 981, 1079, 1081, 1099, 1101, 1328, 1329, 1331, 1333, 1335, 1372, 1374, 1385, 1387], "cast": [195, 196, 614, 615, 663, 664, 665, 670, 675, 793, 796, 798, 808, 810, 1431, 1436, 1438, 1581, 1594, 1596, 1600, 1602, 1617], "point": [195, 196, 199, 200, 209, 210, 217, 218, 225, 226, 248, 614, 615, 618, 619, 628, 629, 636, 637, 644, 645, 652, 653, 657, 659, 660, 662, 668, 672, 675, 677, 678, 691, 732, 733, 734, 735, 737, 738, 740, 745, 746, 752, 771, 772, 786, 788, 793, 796, 798, 825, 827, 844, 846, 859, 861, 906, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 991, 993, 995, 997, 999, 1001, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1079, 1081, 1095, 1097, 1099, 1101, 1103, 1105, 1111, 1113, 1115, 1117, 1119, 1121, 1132, 1135, 1136, 1139, 1140, 1143, 1328, 1329, 1331, 1337, 1339, 1345, 1347, 1348, 1349, 1351, 1364, 1366, 1376, 1377, 1379, 1385, 1387, 1389, 1392, 1410, 1413, 1510, 1519, 1521, 1523, 1525, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1567, 1572, 1575, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606], "nan": [195, 196, 199, 200, 201, 202, 225, 226, 251, 252, 614, 615, 618, 619, 620, 621, 656, 659, 662, 732, 793, 796, 798, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 967, 969, 971, 973, 975, 977, 991, 993, 995, 997, 999, 1001, 1015, 1017, 1023, 1025, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1059, 1061, 1079, 1081, 1095, 1097, 1099, 1101, 1103, 1105, 1111, 1113, 1115, 1117, 1119, 1121, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1204, 1206, 1264, 1307, 1327, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "infin": [195, 196, 199, 200, 201, 202, 614, 615, 618, 619, 620, 621, 628, 629, 659, 732, 793, 796, 798, 906, 907, 909, 915, 917, 919, 921, 927, 929, 931, 933, 935, 937, 967, 969, 971, 973, 975, 977, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1015, 1017, 1019, 1021, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1059, 1061, 1079, 1081, 1095, 1097, 1099, 1101, 1103, 1105, 1111, 1113, 1115, 1117, 1119, 1121, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1204, 1206, 1328, 1410, 1413, 1581, 1585, 1587, 1591, 1593, 1607, 1608, 1610, 1612, 1614], "integr": [195, 196, 614, 615, 651, 793, 796, 798], "implement": [195, 196, 223, 224, 233, 244, 614, 615, 616, 617, 642, 643, 653, 655, 657, 658, 659, 662, 664, 665, 666, 667, 668, 669, 670, 671, 672, 675, 677, 678, 679, 680, 691, 692, 793, 796, 798, 859, 861, 873, 897, 901, 906, 907, 909, 911, 913, 915, 917, 923, 925, 927, 929, 931, 933, 935, 937, 971, 973, 975, 977, 991, 993, 995, 997, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1079, 1081, 1095, 1097, 1099, 1101, 1111, 1113, 1115, 1117, 1132, 1135, 1136, 1139, 1328, 1345, 1347, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1567, 1568, 1570, 1577, 1579, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1616, 1617], "when": [195, 196, 211, 212, 217, 218, 219, 220, 225, 226, 233, 236, 246, 247, 251, 252, 253, 254, 614, 615, 630, 631, 636, 637, 644, 645, 651, 652, 653, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 677, 678, 680, 692, 793, 796, 798, 906, 919, 921, 995, 997, 1043, 1045, 1095, 1097, 1144, 1154, 1215, 1233, 1242, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1488, 1499, 1510, 1515, 1517, 1519, 1521, 1523, 1525, 1532, 1533, 1535, 1537, 1539, 1546, 1549, 1581, 1585, 1587, 1591, 1593, 1597, 1599, 1603, 1606, 1617], "non": [195, 196, 217, 218, 219, 220, 225, 226, 229, 230, 614, 615, 628, 629, 636, 637, 644, 645, 646, 647, 660, 667, 669, 670, 675, 730, 731, 793, 796, 798, 839, 858, 906, 1059, 1061, 1063, 1065, 1307, 1313, 1328, 1337, 1339, 1364, 1366, 1389, 1392, 1398, 1401, 1406, 1409, 1410, 1413, 1510, 1519, 1521, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "desir": [195, 196, 246, 251, 252, 614, 615, 616, 617, 652, 663, 793, 796, 798, 808, 810, 873, 897, 901, 1144, 1208], "match": [195, 196, 251, 252, 614, 615, 660, 669, 793, 796, 798, 906, 1099, 1101, 1144, 1221], "newli": [195, 196, 614, 615, 652, 662, 672, 730, 731, 793, 796, 798, 1144, 1154], "alwai": [195, 196, 203, 204, 213, 214, 614, 615, 622, 623, 632, 633, 652, 653, 656, 657, 659, 662, 665, 666, 668, 669, 672, 673, 675, 692, 793, 796, 798, 906, 919, 921, 1079, 1081, 1144, 1215, 1265, 1277, 1279, 1292, 1295, 1431, 1457, 1459], "us": [195, 196, 199, 200, 201, 202, 203, 204, 213, 214, 215, 216, 231, 232, 233, 237, 244, 248, 249, 250, 251, 252, 253, 254, 607, 608, 609, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 632, 633, 634, 635, 648, 649, 652, 653, 655, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 679, 680, 691, 692, 705, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 732, 793, 796, 798, 824, 825, 827, 835, 837, 858, 873, 874, 887, 891, 894, 895, 896, 897, 901, 903, 905, 906, 923, 925, 943, 945, 963, 965, 975, 977, 1011, 1013, 1063, 1065, 1083, 1085, 1087, 1089, 1119, 1121, 1144, 1189, 1191, 1199, 1200, 1221, 1227, 1228, 1230, 1231, 1238, 1240, 1242, 1265, 1266, 1268, 1269, 1271, 1282, 1284, 1285, 1287, 1307, 1316, 1322, 1324, 1326, 1327, 1328, 1337, 1339, 1341, 1343, 1356, 1358, 1393, 1397, 1418, 1419, 1421, 1431, 1447, 1449, 1453, 1455, 1461, 1463, 1475, 1477, 1484, 1485, 1486, 1487, 1488, 1489, 1491, 1497, 1498, 1499, 1501, 1506, 1507, 1509, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1550, 1551, 1554, 1581, 1582, 1584, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1616, 1617], "float64": [195, 196, 217, 218, 614, 615, 636, 637, 662, 670, 733, 752, 793, 796, 798, 808, 810, 825, 827, 839, 848, 850, 859, 861, 863, 872, 1510, 1519, 1521, 1523, 1525], "broadcast_arrai": [195, 196, 614, 615, 793], "against": [195, 196, 219, 220, 246, 614, 615, 618, 619, 628, 629, 638, 639, 662, 692, 793, 800, 802, 1328, 1353, 1355, 1356, 1358, 1364, 1366, 1376, 1532, 1533, 1535], "arbitrari": [195, 196, 251, 252, 614, 615, 657, 662, 665, 669, 672, 679, 692, 733, 763, 765, 793, 800, 802, 859, 861], "each": [195, 196, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 213, 214, 221, 222, 246, 247, 248, 251, 252, 253, 254, 614, 615, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 632, 633, 640, 641, 644, 645, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 667, 668, 669, 670, 672, 673, 675, 677, 678, 680, 691, 692, 705, 714, 716, 718, 720, 726, 728, 733, 763, 765, 793, 800, 802, 873, 896, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1079, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1131, 1132, 1135, 1136, 1139, 1140, 1143, 1144, 1145, 1147, 1265, 1269, 1271, 1274, 1276, 1282, 1284, 1285, 1287, 1288, 1290, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1322, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1345, 1347, 1353, 1355, 1364, 1366, 1368, 1370, 1376, 1385, 1387, 1389, 1392, 1431, 1440, 1442, 1453, 1455, 1461, 1463, 1465, 1467, 1472, 1474, 1478, 1480, 1481, 1483, 1488, 1494, 1501, 1510, 1511, 1513, 1532, 1541, 1544, 1550, 1551, 1554, 1555, 1558, 1581, 1582, 1584, 1617, 1623], "its": [195, 196, 213, 214, 614, 615, 632, 633, 651, 652, 653, 654, 658, 659, 662, 663, 664, 667, 673, 680, 692, 793, 800, 802, 873, 896, 1144, 1250, 1328, 1353, 1355, 1431, 1443, 1445, 1457, 1459, 1461, 1463, 1475, 1477, 1488, 1494, 1616], "correspond": [195, 196, 199, 200, 201, 202, 213, 214, 225, 226, 251, 252, 253, 254, 614, 615, 618, 619, 632, 633, 644, 645, 652, 657, 659, 660, 661, 662, 665, 667, 668, 669, 670, 675, 793, 800, 802, 906, 935, 937, 1095, 1097, 1328, 1333, 1335, 1345, 1347, 1385, 1387, 1431, 1436, 1438, 1461, 1463, 1510, 1511, 1513, 1532, 1533, 1535, 1537, 1539, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1581, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606], "x1": [195, 196, 199, 200, 201, 202, 209, 210, 219, 220, 614, 615, 618, 619, 620, 621, 628, 629, 638, 639, 642, 643, 657, 660, 663, 733, 789, 792, 793, 800, 802, 820, 822, 858, 867, 873, 890, 906, 919, 921, 935, 937, 943, 945, 951, 953, 955, 957, 959, 961, 963, 965, 979, 981, 983, 985, 1003, 1005, 1007, 1009, 1011, 1013, 1027, 1029, 1031, 1033, 1051, 1053, 1055, 1057, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1087, 1089, 1095, 1097, 1099, 1101, 1127, 1131, 1144, 1145, 1147, 1151, 1307, 1315, 1328, 1333, 1335, 1353, 1355, 1372, 1374, 1385, 1387, 1398, 1401, 1406, 1409, 1532, 1546, 1549, 1567, 1572, 1575], "x2": [195, 196, 199, 200, 201, 202, 209, 210, 219, 220, 614, 615, 618, 619, 620, 621, 628, 629, 638, 639, 657, 660, 663, 733, 789, 792, 793, 800, 802, 858, 867, 873, 890, 906, 919, 921, 935, 937, 943, 945, 951, 953, 955, 957, 959, 961, 963, 965, 979, 981, 983, 985, 1003, 1005, 1007, 1009, 1011, 1013, 1027, 1029, 1031, 1033, 1051, 1053, 1055, 1057, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1087, 1089, 1095, 1097, 1099, 1101, 1127, 1131, 1144, 1145, 1147, 1307, 1315, 1328, 1333, 1335, 1353, 1355, 1372, 1374, 1385, 1387, 1398, 1401, 1406, 1409, 1532, 1546, 1549, 1567, 1572, 1575], "x3": [195, 196, 733, 789, 792, 793, 800, 802, 873, 890], "broadcast_to": [195, 196, 614, 615, 670, 793], "store": [195, 196, 203, 204, 213, 214, 251, 252, 614, 615, 622, 623, 632, 633, 652, 659, 666, 668, 669, 675, 677, 678, 679, 733, 789, 792, 1144, 1186, 1265, 1302, 1305, 1328, 1402, 1405, 1431, 1465, 1467, 1616], "code": [195, 196, 199, 200, 203, 204, 246, 247, 248, 251, 252, 253, 254, 614, 615, 616, 617, 618, 619, 628, 629, 642, 643, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 672, 673, 674, 675, 676, 677, 678, 679, 680, 690, 692, 705, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 733, 752, 873, 874, 879, 881, 897, 901, 906, 963, 965, 1123, 1125, 1144, 1204, 1206, 1265, 1291, 1296, 1306, 1307, 1316, 1318, 1320, 1328, 1364, 1366, 1550, 1551, 1554, 1555, 1558, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1581, 1582, 1584, 1616, 1617, 1623], "can_cast": [195, 196, 614, 615, 665, 670, 793], "occur": [195, 196, 221, 222, 614, 615, 640, 641, 793, 808, 810, 1532, 1533, 1535, 1537, 1539, 1550, 1551, 1554, 1555, 1558, 1563, 1566], "accord": [195, 196, 225, 226, 614, 615, 644, 645, 651, 653, 654, 663, 665, 670, 793, 808, 810, 819, 825, 827, 906, 919, 921, 959, 961, 1079, 1081, 1144, 1189, 1191, 1227, 1228, 1328, 1406, 1409, 1431, 1440, 1442, 1481, 1483, 1581, 1597, 1599, 1603, 1606], "float32": [195, 196, 207, 208, 614, 615, 620, 621, 626, 627, 660, 662, 670, 733, 789, 792, 793, 794, 795, 820, 822, 824, 825, 827, 839, 844, 846, 848, 850, 872, 906, 1043, 1045, 1144, 1251, 1254], "as_n": [195, 196, 197, 198, 614, 615, 616, 617, 670, 793, 814, 815, 816, 818, 819, 820, 822, 873, 878, 879, 881, 893], "finfo": [195, 196, 614, 615, 662, 793], "iinfo": [195, 196, 614, 615, 673, 793], "is_bool_dtyp": [195, 196, 614, 615, 793], "is_float_dtyp": [195, 196, 614, 615, 658, 793], "int64": [195, 196, 217, 218, 614, 615, 636, 637, 662, 670, 675, 793, 808, 810, 824, 835, 837, 844, 846, 852, 855, 872, 906, 959, 961, 1532, 1533, 1535, 1537, 1539, 1581, 1594, 1596, 1600, 1602], "int32": [195, 196, 217, 218, 614, 615, 620, 621, 636, 637, 662, 670, 675, 733, 789, 792, 793, 796, 798, 808, 810, 813, 820, 822, 835, 837, 844, 846, 848, 850, 859, 861, 863, 1144, 1251, 1254, 1510, 1519, 1521, 1523, 1525, 1581, 1594, 1596, 1600, 1602], "arr": [195, 196, 614, 615, 670, 671, 793, 844, 846], "is_int_dtyp": [195, 196, 614, 615, 658, 664, 793, 1144, 1255], "is_uint_dtyp": [195, 196, 614, 615, 658, 664, 793], "result_typ": [195, 196, 614, 615, 670, 793], "arrays_and_dtyp": [195, 196, 614, 615, 793, 859, 861], "involv": [195, 196, 247, 614, 615, 650, 654, 655, 660, 670, 680, 793, 859, 861, 906, 919, 921, 1079, 1081, 1617, 1623], "dev": [197, 198, 251, 252, 616, 617, 651, 665, 671, 677, 679, 873, 886], "to_devic": [197, 198, 616, 617, 873, 878], "stream": [197, 198, 616, 617, 873, 897, 901], "ab": [199, 200, 618, 619, 662, 667, 906, 1095, 1097, 1328, 1393, 1397, 1410, 1413, 1488, 1499, 1617], "absolut": [199, 200, 251, 252, 618, 619, 650, 906, 907, 909, 1328, 1381, 1383], "aco": [199, 200, 618, 619, 906, 1617], "real": [199, 200, 618, 619, 906, 1136, 1139], "invers": [199, 200, 618, 619, 691, 906, 911, 913, 915, 917, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 1328, 1349, 1351, 1376], "cosin": [199, 200, 618, 619, 906, 911, 913, 915, 917, 971, 973, 975, 977], "57": [199, 200, 618, 619, 873, 883, 906, 911, 913, 915, 917, 923, 925, 927, 929, 935, 937, 963, 965, 975, 977], "69": [199, 200, 622, 623, 636, 637, 678, 906, 1043, 1045, 1265, 1274, 1276], "acosh": [199, 200, 618, 619, 793, 829, 830, 832, 833, 906, 1617], "repres": [199, 200, 618, 619, 654, 662, 677, 733, 763, 765, 793, 824, 906, 915, 917, 919, 921, 927, 929, 939, 941, 975, 977, 1079, 1081, 1115, 1117, 1136, 1139, 1265, 1291, 1306, 1307, 1324, 1328, 1381, 1383, 1385, 1387], "area": [199, 200, 247, 618, 619, 672, 690, 906, 915, 917, 927, 929, 939, 941, 1617], "hyperbol": [199, 200, 618, 619, 906, 915, 917, 927, 929, 939, 941, 975, 977, 1115, 1117, 1136, 1139], "sector": [199, 200, 247, 618, 619, 906, 915, 917, 927, 929, 939, 941], "10": [199, 200, 203, 204, 217, 218, 247, 249, 250, 251, 252, 253, 254, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 651, 654, 660, 662, 664, 669, 675, 677, 678, 733, 753, 755, 760, 761, 906, 915, 917, 943, 945, 947, 949, 975, 977, 995, 997, 1011, 1013, 1031, 1033, 1039, 1041, 1043, 1045, 1115, 1117, 1119, 1121, 1144, 1165, 1167, 1189, 1191, 1210, 1212, 1214, 1226, 1238, 1240, 1265, 1282, 1284, 1307, 1308, 1310, 1328, 1337, 1339, 1341, 1343, 1372, 1374, 1393, 1397, 1398, 1401, 1431, 1447, 1449, 1465, 1467, 1488, 1494, 1499, 1506, 1507, 1509, 1510, 1511, 1513, 1515, 1517, 1532, 1541, 1544, 1550, 1551, 1554, 1581, 1582, 1584, 1585, 1587, 1603, 1606], "32": [199, 200, 217, 218, 618, 619, 636, 637, 662, 678, 705, 710, 712, 793, 824, 906, 915, 917, 963, 965, 1144, 1214, 1307, 1313, 1316, 1318, 1320, 1328, 1353, 1355, 1372, 1374, 1510, 1523, 1525, 1532, 1546, 1549, 1581, 1582, 1584], "99": [199, 200, 203, 204, 618, 619, 636, 637, 733, 752, 906, 915, 917, 927, 929, 1144, 1238, 1240, 1265, 1274, 1276, 1581, 1582, 1584], "asin": [199, 200, 618, 619, 906, 1617], "sine": [199, 200, 618, 619, 906, 923, 925, 927, 929, 1111, 1113, 1115, 1117], "927": [199, 200, 618, 619], "12": [199, 200, 217, 218, 618, 619, 620, 621, 626, 627, 632, 633, 634, 635, 636, 637, 651, 660, 662, 669, 906, 943, 945, 963, 965, 975, 977, 979, 981, 983, 985, 1103, 1105, 1144, 1159, 1161, 1165, 1167, 1200, 1328, 1341, 1343, 1372, 1374, 1398, 1401, 1431, 1447, 1449, 1461, 1463, 1506, 1507, 1509, 1510, 1515, 1517, 1519, 1521, 1532, 1546, 1549, 1550, 1551, 1554, 1581, 1582, 1584], "asinh": [199, 200, 618, 619, 906, 1617], "82": [199, 200, 622, 623, 636, 637, 1265, 1266, 1268], "atan": [199, 200, 618, 619, 906, 1617], "tangent": [199, 200, 618, 619, 659, 906, 931, 933, 935, 937, 939, 941, 1132, 1135, 1136, 1139], "785": [199, 200, 618, 619, 906, 931, 933, 935, 937], "464": [199, 200, 636, 637, 906, 935, 937], "atan2": [199, 200, 618, 619, 906, 1617], "coordin": [199, 200, 618, 619, 733, 763, 765, 906, 935, 937], "quotient": [199, 200, 618, 619, 906, 935, 937], "245": [199, 200], "14": [199, 200, 217, 218, 614, 615, 618, 619, 620, 621, 634, 635, 636, 637, 654, 660, 662, 669, 793, 796, 798, 825, 827, 835, 837, 906, 911, 913, 927, 929, 935, 937, 963, 965, 1063, 1065, 1144, 1238, 1240, 1265, 1266, 1268, 1307, 1308, 1310, 1327, 1328, 1341, 1343, 1372, 1374, 1550, 1551, 1554, 1581, 1582, 1584], "atanh": [199, 200, 618, 619, 906, 1617], "549": [199, 200, 618, 619, 906, 939, 941], "47": [199, 200, 217, 218, 618, 619, 622, 623, 636, 637, 906, 1119, 1121, 1265, 1274, 1276, 1510, 1523, 1525], "bitwise_and": [199, 200, 618, 619, 906], "integ": [199, 200, 213, 214, 217, 218, 225, 226, 229, 230, 251, 252, 618, 619, 628, 629, 632, 633, 636, 637, 644, 645, 646, 647, 652, 662, 664, 667, 669, 675, 677, 733, 734, 735, 752, 793, 835, 837, 848, 850, 858, 859, 861, 906, 907, 909, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 999, 1001, 1003, 1005, 1067, 1069, 1095, 1097, 1099, 1101, 1103, 1105, 1140, 1143, 1328, 1360, 1362, 1406, 1409, 1410, 1413, 1431, 1465, 1467, 1510, 1515, 1517, 1527, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "bitwise_invert": [199, 200, 618, 619, 906], "bitiwse_invert": [199, 200], "bitwise_left_shift": [199, 200, 618, 619, 906], "bitwise_or": [199, 200, 618, 619, 906], "bitwise_right_shift": [199, 200, 618, 619, 906], "bitwise_xor": [199, 200, 618, 619, 906], "ceil": [199, 200, 618, 619, 733, 734, 735, 906, 1039, 1041, 1617], "round": [199, 200, 246, 247, 248, 618, 619, 651, 652, 653, 654, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 675, 677, 678, 679, 680, 691, 906, 919, 921, 967, 969, 999, 1001, 1003, 1005, 1079, 1081, 1119, 1121, 1140, 1143, 1617], "co": [199, 200, 247, 618, 619, 670, 675, 691, 906, 1144, 1186, 1617], "express": [199, 200, 618, 619, 659, 673, 675, 680, 906, 911, 913, 923, 925, 931, 933, 935, 937, 971, 973, 1111, 1113, 1132, 1135], "radian": [199, 200, 618, 619, 659, 906, 911, 913, 923, 925, 931, 933, 935, 937, 971, 973, 1111, 1113, 1132, 1135], "54": [199, 200, 618, 619, 634, 635, 636, 637, 660, 906, 971, 973, 975, 977, 1119, 1121, 1307, 1327, 1328, 1372, 1374, 1581, 1582, 1584], "416": [199, 200, 906, 971, 973], "cosh": [199, 200, 618, 619, 906, 1617], "angl": [199, 200, 618, 619, 691, 906, 935, 937, 975, 977, 1115, 1117, 1136, 1139], "76": [199, 200, 618, 619, 636, 637, 793, 835, 837, 906, 975, 977, 1328, 1398, 1401, 1581, 1582, 1584], "23": [199, 200, 217, 218, 612, 613, 618, 619, 636, 637, 675, 733, 753, 755, 906, 935, 937, 963, 965, 1019, 1021, 1023, 1025, 1099, 1101, 1107, 1109, 1115, 1117, 1307, 1316, 1328, 1341, 1343, 1393, 1397, 1488, 1490, 1532, 1546, 1549], "03": [199, 200, 618, 619, 622, 623, 636, 637, 906, 1043, 1045, 1144, 1238, 1240, 1265, 1282, 1284, 1307, 1327, 1506, 1507, 1509], "81": [199, 200, 618, 619, 636, 637, 793, 835, 837, 906, 1043, 1045, 1103, 1105, 1123, 1125, 1510, 1523, 1525, 1581, 1582, 1584], "divid": [199, 200, 201, 202, 213, 214, 251, 252, 618, 619, 632, 633, 660, 668, 669, 906, 1003, 1005, 1144, 1238, 1240, 1431, 1465, 1467], "dividend": [199, 200, 618, 619, 906, 979, 981, 1099, 1101], "divisor": [199, 200, 203, 204, 225, 226, 618, 619, 622, 623, 644, 645, 906, 979, 981, 1099, 1101, 1265, 1266, 1268, 1269, 1271, 1282, 1284, 1581, 1597, 1599, 1603, 1606], "375": [199, 200, 906, 983, 985], "erf": [199, 200, 618, 619, 906], "exponenti": [199, 200, 618, 619, 906, 987, 989, 991, 993, 1051, 1053, 1095, 1097], "gauss": [199, 200, 618, 619, 906, 987, 989], "error": [199, 200, 248, 251, 252, 618, 619, 651, 652, 657, 658, 660, 662, 668, 671, 673, 677, 692, 705, 706, 708, 906, 987, 989, 1328, 1393, 1397, 1581, 1585, 1587, 1591, 1593], "exp": [199, 200, 618, 619, 906, 995, 997, 1051, 1053, 1617], "evalu": [199, 200, 251, 252, 618, 619, 652, 669, 906, 991, 993, 995, 997, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1083, 1085, 1107, 1109, 1123, 1125, 1265, 1297, 1488, 1489, 1498, 1499, 1607, 1608, 1610, 1612, 1614], "expm1": [199, 200, 618, 619, 906], "244": [199, 200], "918": [199, 200], "48": [199, 200, 618, 619, 620, 621, 622, 623, 636, 637, 705, 710, 712, 906, 915, 917, 1119, 1121, 1144, 1210, 1212, 1265, 1266, 1268, 1274, 1276, 1328, 1372, 1374, 1488, 1490, 1581, 1582, 1584], "_": [199, 200, 618, 619, 622, 623, 654, 659, 662, 667, 669, 672, 678, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 808, 810, 813, 825, 827, 835, 837, 859, 861, 906, 907, 909, 923, 925, 927, 929, 935, 937, 963, 965, 967, 969, 975, 977, 995, 997, 999, 1001, 1015, 1017, 1019, 1021, 1023, 1025, 1039, 1041, 1043, 1045, 1063, 1065, 1071, 1073, 1075, 1077, 1087, 1089, 1111, 1113, 1119, 1121, 1123, 1125, 1144, 1210, 1212, 1265, 1266, 1268, 1269, 1271, 1328, 1333, 1335, 1341, 1343, 1353, 1355, 1393, 1397, 1414, 1417, 1431, 1443, 1445, 1461, 1463, 1550, 1551, 1554, 1567, 1568, 1570, 1581, 1585, 1587], "147": [199, 200, 705, 722, 724, 906, 995, 997], "floor": [199, 200, 618, 619, 906, 959, 961, 1144, 1185, 1617], "floor_divid": [199, 200, 618, 619, 906], "13": [199, 200, 201, 202, 207, 208, 217, 218, 620, 621, 622, 623, 626, 627, 636, 637, 660, 662, 669, 793, 835, 837, 873, 883, 906, 943, 945, 963, 965, 975, 977, 995, 997, 1003, 1005, 1119, 1121, 1144, 1155, 1157, 1159, 1161, 1165, 1167, 1214, 1238, 1240, 1265, 1266, 1268, 1307, 1327, 1328, 1341, 1343, 1372, 1374, 1393, 1397, 1532, 1546, 1549, 1550, 1551, 1554, 1581, 1582, 1584], "greater": [199, 200, 217, 218, 618, 619, 636, 637, 652, 906, 911, 913, 923, 925, 935, 937, 951, 953, 959, 961, 999, 1001, 1003, 1005, 1095, 1097, 1099, 1101, 1107, 1109, 1140, 1143, 1328, 1333, 1335, 1431, 1469, 1471, 1510, 1523, 1525], "15": [199, 200, 217, 218, 612, 613, 620, 621, 636, 637, 651, 660, 662, 733, 753, 755, 793, 825, 827, 906, 943, 945, 979, 981, 1099, 1101, 1103, 1105, 1144, 1159, 1161, 1165, 1167, 1210, 1212, 1214, 1233, 1238, 1240, 1307, 1308, 1310, 1313, 1328, 1341, 1343, 1372, 1374, 1393, 1397, 1398, 1401, 1431, 1461, 1463, 1510, 1515, 1517, 1519, 1521, 1532, 1541, 1544, 1550, 1551, 1554, 1581, 1582, 1584], "greater_equ": [199, 200, 618, 619, 906], "isfinit": [199, 200, 618, 619, 662, 906], "test": [199, 200, 229, 230, 248, 618, 619, 646, 647, 651, 653, 655, 660, 673, 692, 793, 840, 842, 848, 850, 906, 1015, 1017, 1019, 1021, 1023, 1025, 1607, 1608, 1610, 1612, 1614], "out_i": [199, 200, 618, 619, 906, 1015, 1017, 1019, 1021, 1023, 1025], "self_i": [199, 200, 618, 619], "finit": [199, 200, 618, 619, 906, 919, 921, 935, 937, 1015, 1017, 1079, 1081, 1095, 1097, 1099, 1101], "inf": [199, 200, 251, 252, 618, 619, 628, 629, 662, 732, 906, 935, 937, 995, 997, 1015, 1017, 1019, 1021, 1023, 1025, 1039, 1041, 1144, 1204, 1206, 1264, 1328, 1410, 1413], "isinf": [199, 200, 618, 619, 906], "either": [199, 200, 233, 237, 244, 251, 252, 607, 608, 609, 618, 619, 651, 652, 654, 659, 660, 662, 665, 666, 669, 670, 671, 672, 675, 678, 692, 733, 748, 750, 906, 919, 921, 935, 937, 1019, 1021, 1035, 1037, 1039, 1041, 1047, 1049, 1051, 1053, 1079, 1081, 1099, 1101, 1107, 1109, 1111, 1113, 1132, 1135, 1144, 1171, 1217, 1221, 1222, 1256, 1328, 1353, 1355, 1484, 1485, 1486, 1487, 1581, 1594, 1596, 1600, 1602], "neg": [199, 200, 213, 214, 217, 218, 229, 230, 249, 250, 618, 619, 628, 629, 632, 633, 636, 637, 646, 647, 665, 669, 672, 705, 710, 712, 733, 734, 735, 745, 746, 906, 1015, 1017, 1019, 1021, 1079, 1081, 1095, 1097, 1099, 1101, 1328, 1389, 1392, 1406, 1409, 1410, 1413, 1431, 1447, 1449, 1461, 1463, 1510, 1519, 1521, 1607, 1608, 1610, 1612, 1614], "isnan": [199, 200, 618, 619, 906], "less_equ": [199, 200, 618, 619, 906], "24": [199, 200, 201, 202, 626, 627, 634, 635, 636, 637, 678, 906, 963, 965, 1119, 1121, 1144, 1165, 1167, 1210, 1212, 1328, 1341, 1343, 1372, 1374, 1488, 1490, 1506, 1507, 1509, 1581, 1582, 1584], "log": [199, 200, 618, 619, 652, 660, 665, 669, 672, 675, 678, 733, 760, 761, 906, 1043, 1045, 1051, 1053, 1328, 1381, 1383, 1617], "log10": [199, 200, 618, 619, 906], "logarithm": [199, 200, 618, 619, 906, 991, 993, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1328, 1381, 1383], "602": [199, 200, 906, 1039, 1041], "699": [199, 200, 906, 1039, 1041], "log1p": [199, 200, 618, 619, 906], "693": [199, 200, 618, 619, 705, 722, 724, 906, 927, 929, 1043, 1045, 1418, 1427, 1429], "001": [199, 200, 215, 216, 678, 679, 793, 825, 827, 906, 1107, 1109, 1506, 1507, 1509], "0953": [199, 200], "log2": [199, 200, 618, 619, 906], "logaddexp": [199, 200, 618, 619, 906], "logical_and": [199, 200, 618, 619, 906, 1617], "logical_not": [199, 200, 618, 619, 906, 1617], "logical_or": [199, 200, 618, 619, 906, 1617], "conform": [199, 200, 618, 619, 659, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 763, 765, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 808, 810, 813, 825, 827, 835, 837, 859, 861, 906, 907, 909, 919, 921, 923, 925, 927, 929, 935, 937, 943, 945, 963, 965, 967, 969, 975, 977, 995, 997, 999, 1001, 1015, 1017, 1019, 1021, 1023, 1025, 1031, 1033, 1039, 1041, 1043, 1045, 1063, 1065, 1071, 1073, 1075, 1077, 1087, 1089, 1103, 1105, 1107, 1109, 1111, 1113, 1119, 1121, 1123, 1125, 1132, 1135, 1136, 1139, 1144, 1204, 1206, 1210, 1212, 1328, 1333, 1335, 1337, 1339, 1341, 1343, 1353, 1355, 1431, 1443, 1445, 1447, 1449, 1461, 1463, 1550, 1551, 1554, 1555, 1558, 1567, 1568, 1570, 1581, 1585, 1587, 1603, 1606, 1607, 1608, 1610], "api": [199, 200, 245, 246, 618, 619, 651, 652, 655, 657, 659, 660, 662, 663, 664, 665, 667, 668, 670, 671, 672, 674, 676, 678, 692, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 763, 765, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 808, 810, 813, 825, 827, 835, 837, 859, 861, 906, 907, 909, 919, 921, 923, 925, 927, 929, 935, 937, 943, 945, 963, 965, 967, 969, 975, 977, 995, 997, 999, 1001, 1015, 1017, 1019, 1021, 1023, 1025, 1031, 1033, 1039, 1041, 1043, 1045, 1063, 1065, 1071, 1073, 1075, 1077, 1087, 1089, 1103, 1105, 1107, 1109, 1111, 1113, 1119, 1121, 1123, 1125, 1132, 1135, 1136, 1139, 1144, 1204, 1206, 1210, 1212, 1328, 1333, 1335, 1337, 1339, 1341, 1343, 1353, 1355, 1431, 1443, 1445, 1447, 1449, 1461, 1463, 1550, 1551, 1554, 1555, 1558, 1567, 1568, 1570, 1581, 1585, 1587, 1603, 1606, 1607, 1608, 1610, 1616, 1617, 1623], "standard": [199, 200, 215, 216, 217, 218, 225, 226, 245, 618, 619, 634, 635, 636, 637, 644, 645, 655, 656, 657, 659, 661, 662, 668, 669, 672, 692, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 763, 765, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 808, 810, 813, 825, 827, 835, 837, 859, 861, 906, 907, 909, 919, 921, 923, 925, 927, 929, 935, 937, 943, 945, 963, 965, 967, 969, 975, 977, 995, 997, 999, 1001, 1015, 1017, 1019, 1021, 1023, 1025, 1031, 1033, 1039, 1041, 1043, 1045, 1063, 1065, 1071, 1073, 1075, 1077, 1087, 1089, 1103, 1105, 1107, 1109, 1111, 1113, 1119, 1121, 1123, 1125, 1132, 1135, 1136, 1139, 1144, 1204, 1206, 1210, 1212, 1328, 1333, 1335, 1337, 1339, 1341, 1343, 1353, 1355, 1431, 1443, 1445, 1447, 1449, 1461, 1463, 1506, 1507, 1509, 1510, 1519, 1521, 1550, 1551, 1554, 1555, 1558, 1567, 1568, 1570, 1581, 1585, 1587, 1597, 1599, 1603, 1606, 1607, 1608, 1610, 1617, 1623], "http": [199, 200, 618, 619, 622, 623, 651, 659, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 808, 810, 813, 825, 827, 835, 837, 859, 861, 906, 907, 909, 923, 925, 927, 929, 935, 937, 963, 965, 967, 969, 975, 977, 995, 997, 999, 1001, 1015, 1017, 1019, 1021, 1023, 1025, 1039, 1041, 1043, 1045, 1063, 1065, 1071, 1073, 1075, 1077, 1087, 1089, 1111, 1113, 1119, 1121, 1123, 1125, 1144, 1210, 1212, 1265, 1266, 1268, 1269, 1271, 1328, 1333, 1335, 1341, 1343, 1353, 1355, 1431, 1443, 1445, 1461, 1463, 1550, 1551, 1554, 1555, 1558, 1567, 1568, 1570, 1581, 1585, 1587], "org": [199, 200, 618, 619, 622, 623, 659, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 808, 810, 813, 825, 827, 835, 837, 859, 861, 906, 907, 909, 923, 925, 927, 929, 935, 937, 963, 965, 967, 969, 975, 977, 995, 997, 999, 1001, 1015, 1017, 1019, 1021, 1023, 1025, 1039, 1041, 1043, 1045, 1063, 1065, 1071, 1073, 1075, 1077, 1087, 1089, 1111, 1113, 1119, 1121, 1123, 1125, 1144, 1210, 1212, 1265, 1266, 1268, 1269, 1271, 1328, 1333, 1335, 1341, 1343, 1353, 1355, 1431, 1443, 1445, 1461, 1463, 1550, 1551, 1554, 1555, 1558, 1567, 1568, 1570, 1581, 1585, 1587], "latest": [199, 200, 618, 619, 651, 652, 653, 654, 659, 692, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 808, 810, 813, 825, 827, 835, 837, 859, 861, 906, 907, 909, 923, 925, 927, 929, 935, 937, 963, 965, 967, 969, 975, 977, 995, 997, 999, 1001, 1015, 1017, 1019, 1021, 1023, 1025, 1039, 1041, 1043, 1045, 1063, 1065, 1071, 1073, 1075, 1077, 1087, 1089, 1111, 1113, 1119, 1121, 1123, 1125, 1144, 1210, 1212, 1328, 1333, 1335, 1341, 1343, 1353, 1355, 1431, 1443, 1445, 1461, 1463, 1550, 1551, 1554, 1555, 1558, 1567, 1568, 1570, 1581, 1585, 1587], "extens": [199, 200, 618, 619, 651, 659, 662, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 763, 765, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 808, 810, 813, 825, 827, 835, 837, 859, 861, 906, 907, 909, 919, 921, 923, 925, 927, 929, 935, 937, 943, 945, 963, 965, 967, 969, 975, 977, 995, 997, 999, 1001, 1015, 1017, 1019, 1021, 1023, 1025, 1031, 1033, 1039, 1041, 1043, 1045, 1063, 1065, 1071, 1073, 1075, 1077, 1087, 1089, 1103, 1105, 1107, 1109, 1111, 1113, 1119, 1121, 1123, 1125, 1132, 1135, 1136, 1139, 1144, 1204, 1206, 1210, 1212, 1328, 1333, 1335, 1337, 1339, 1341, 1343, 1353, 1355, 1431, 1443, 1445, 1447, 1449, 1461, 1463, 1550, 1551, 1554, 1555, 1558, 1567, 1568, 1570, 1581, 1585, 1587, 1603, 1606, 1607, 1608, 1610], "api_specif": [199, 200, 618, 619, 659, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 808, 810, 813, 825, 827, 835, 837, 859, 861, 906, 907, 909, 923, 925, 927, 929, 935, 937, 963, 965, 967, 969, 975, 977, 995, 997, 999, 1001, 1015, 1017, 1019, 1021, 1023, 1025, 1039, 1041, 1043, 1045, 1063, 1065, 1071, 1073, 1075, 1077, 1087, 1089, 1111, 1113, 1119, 1121, 1123, 1125, 1144, 1210, 1212, 1328, 1341, 1343, 1353, 1355, 1431, 1443, 1445, 1461, 1463, 1550, 1551, 1554, 1555, 1558, 1567, 1568, 1570, 1581, 1585, 1587], "gener": [199, 200, 202, 203, 204, 217, 218, 231, 232, 618, 619, 621, 622, 623, 636, 637, 648, 649, 651, 652, 653, 654, 655, 656, 657, 659, 660, 663, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 677, 679, 680, 691, 692, 730, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 808, 810, 813, 825, 827, 835, 837, 859, 861, 906, 907, 909, 923, 925, 927, 929, 935, 937, 963, 965, 967, 969, 975, 977, 995, 997, 999, 1001, 1015, 1017, 1019, 1021, 1023, 1025, 1039, 1041, 1043, 1045, 1063, 1065, 1071, 1073, 1075, 1077, 1087, 1089, 1099, 1101, 1111, 1113, 1119, 1121, 1123, 1125, 1145, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1157, 1159, 1161, 1163, 1164, 1165, 1167, 1169, 1170, 1171, 1172, 1174, 1176, 1178, 1180, 1182, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1193, 1195, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1206, 1208, 1209, 1210, 1212, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1242, 1243, 1244, 1245, 1246, 1249, 1250, 1251, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1263, 1264, 1265, 1277, 1279, 1328, 1333, 1335, 1341, 1343, 1353, 1355, 1431, 1443, 1445, 1461, 1463, 1510, 1511, 1513, 1515, 1517, 1523, 1525, 1527, 1550, 1551, 1554, 1555, 1558, 1567, 1568, 1570, 1581, 1585, 1587, 1616, 1617], "signatur": [199, 200, 247, 618, 619, 656, 657, 659, 660, 662, 670, 671, 672, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 808, 810, 813, 825, 827, 835, 837, 859, 861, 906, 907, 909, 923, 925, 927, 929, 935, 937, 963, 965, 967, 969, 975, 977, 995, 997, 999, 1001, 1015, 1017, 1019, 1021, 1023, 1025, 1039, 1041, 1043, 1045, 1063, 1065, 1071, 1073, 1075, 1077, 1087, 1089, 1111, 1113, 1119, 1121, 1123, 1125, 1144, 1210, 1212, 1328, 1333, 1335, 1341, 1343, 1353, 1355, 1431, 1443, 1445, 1461, 1463, 1550, 1551, 1554, 1555, 1558, 1567, 1568, 1570, 1581, 1585, 1587], "elementwise_funct": [199, 200, 618, 619, 659, 793, 813, 906, 907, 909, 923, 925, 927, 929, 935, 937, 963, 965, 967, 969, 975, 977, 995, 997, 999, 1001, 1015, 1017, 1019, 1021, 1023, 1025, 1039, 1041, 1043, 1045, 1063, 1065, 1071, 1073, 1075, 1077, 1087, 1089, 1111, 1113, 1119, 1121, 1123, 1125, 1144, 1210, 1212, 1328, 1341, 1343, 1431, 1443, 1445, 1461, 1463, 1550, 1551, 1554, 1567, 1568, 1570, 1581, 1585, 1587], "html": [199, 200, 247, 618, 619, 654, 659, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 808, 810, 813, 825, 827, 835, 837, 859, 861, 906, 907, 909, 923, 925, 927, 929, 935, 937, 963, 965, 967, 969, 975, 977, 995, 997, 999, 1001, 1015, 1017, 1019, 1021, 1023, 1025, 1039, 1041, 1043, 1045, 1063, 1065, 1071, 1073, 1075, 1077, 1087, 1089, 1111, 1113, 1119, 1121, 1123, 1125, 1144, 1210, 1212, 1328, 1333, 1335, 1341, 1343, 1353, 1355, 1431, 1443, 1445, 1461, 1463, 1550, 1551, 1554, 1555, 1558, 1567, 1568, 1570, 1581, 1585, 1587], "noqa": [199, 200, 233, 236, 237, 618, 619, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 763, 765, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 808, 810, 813, 825, 827, 835, 837, 859, 861, 906, 907, 909, 919, 921, 927, 929, 935, 937, 943, 945, 963, 965, 967, 969, 975, 977, 995, 997, 1019, 1021, 1023, 1025, 1031, 1033, 1039, 1041, 1043, 1045, 1063, 1065, 1071, 1073, 1075, 1077, 1087, 1089, 1103, 1105, 1107, 1109, 1119, 1121, 1123, 1125, 1132, 1135, 1136, 1139, 1144, 1204, 1206, 1210, 1212, 1328, 1333, 1335, 1337, 1339, 1341, 1343, 1353, 1355, 1431, 1443, 1445, 1447, 1449, 1461, 1463, 1581, 1585, 1587], "both": [199, 200, 607, 608, 609, 618, 619, 652, 657, 658, 659, 660, 662, 663, 664, 665, 669, 671, 672, 675, 677, 678, 679, 680, 691, 692, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 808, 810, 840, 842, 848, 850, 857, 906, 907, 909, 919, 921, 923, 925, 927, 929, 967, 969, 995, 997, 999, 1001, 1015, 1017, 1019, 1021, 1039, 1041, 1043, 1045, 1063, 1065, 1071, 1073, 1075, 1077, 1087, 1089, 1095, 1097, 1103, 1105, 1107, 1109, 1111, 1113, 1119, 1121, 1123, 1125, 1132, 1135, 1144, 1189, 1191, 1204, 1206, 1210, 1212, 1265, 1277, 1279, 1292, 1295, 1297, 1298, 1301, 1302, 1305, 1307, 1313, 1318, 1320, 1327, 1328, 1329, 1331, 1333, 1335, 1341, 1343, 1353, 1355, 1406, 1409, 1431, 1443, 1445, 1461, 1463, 1506, 1507, 1509, 1550, 1555, 1558, 1581, 1585, 1587, 1603, 1606, 1607, 1608, 1610], "descript": [199, 200, 618, 619, 628, 629, 659, 662, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 808, 810, 840, 842, 848, 850, 906, 907, 909, 919, 921, 923, 925, 927, 929, 935, 937, 943, 945, 963, 965, 967, 969, 975, 977, 995, 997, 999, 1001, 1015, 1017, 1019, 1021, 1023, 1025, 1039, 1041, 1043, 1045, 1063, 1065, 1071, 1073, 1075, 1077, 1087, 1089, 1103, 1105, 1107, 1109, 1111, 1113, 1119, 1121, 1123, 1125, 1132, 1135, 1136, 1139, 1144, 1189, 1191, 1204, 1206, 1210, 1212, 1265, 1277, 1279, 1292, 1295, 1298, 1301, 1302, 1305, 1307, 1313, 1318, 1320, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1353, 1355, 1410, 1413, 1431, 1443, 1445, 1447, 1449, 1461, 1463, 1506, 1507, 1509, 1550, 1551, 1554, 1555, 1558, 1567, 1568, 1570, 1581, 1585, 1587, 1603, 1606, 1607, 1608, 1610], "hint": [199, 200, 618, 619, 653, 656, 657, 659, 663, 665, 668, 672, 673, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 808, 810, 840, 842, 848, 850, 906, 907, 909, 919, 921, 923, 925, 927, 929, 935, 937, 943, 945, 963, 965, 967, 969, 975, 977, 995, 997, 999, 1001, 1015, 1017, 1019, 1021, 1023, 1025, 1039, 1041, 1043, 1045, 1063, 1065, 1071, 1073, 1075, 1077, 1087, 1089, 1103, 1105, 1107, 1109, 1111, 1113, 1119, 1121, 1123, 1125, 1132, 1135, 1136, 1139, 1144, 1189, 1191, 1204, 1206, 1210, 1212, 1265, 1277, 1279, 1292, 1295, 1298, 1301, 1302, 1305, 1307, 1313, 1318, 1320, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1353, 1355, 1431, 1443, 1445, 1447, 1449, 1461, 1463, 1506, 1507, 1509, 1550, 1551, 1554, 1555, 1558, 1567, 1568, 1570, 1581, 1585, 1587, 1603, 1606, 1607, 1608, 1610], "assum": [199, 200, 618, 619, 659, 662, 664, 666, 670, 677, 678, 692, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 808, 810, 840, 842, 848, 850, 906, 907, 909, 919, 921, 923, 925, 927, 929, 935, 937, 943, 945, 963, 965, 967, 969, 971, 973, 975, 977, 995, 997, 999, 1001, 1015, 1017, 1019, 1021, 1023, 1025, 1039, 1041, 1043, 1045, 1063, 1065, 1071, 1073, 1075, 1077, 1087, 1089, 1103, 1105, 1107, 1109, 1111, 1113, 1119, 1121, 1123, 1125, 1132, 1135, 1136, 1139, 1144, 1189, 1191, 1204, 1206, 1210, 1212, 1265, 1277, 1279, 1292, 1295, 1298, 1301, 1302, 1305, 1307, 1313, 1318, 1320, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1353, 1355, 1431, 1443, 1445, 1447, 1449, 1461, 1463, 1506, 1507, 1509, 1550, 1551, 1554, 1555, 1558, 1567, 1568, 1570, 1581, 1585, 1587, 1603, 1606, 1607, 1608, 1610], "simplic": [199, 200, 618, 619, 659, 679, 691, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 808, 810, 840, 842, 848, 850, 906, 907, 909, 919, 921, 923, 925, 927, 929, 935, 937, 943, 945, 963, 965, 967, 969, 975, 977, 995, 997, 999, 1001, 1015, 1017, 1019, 1021, 1023, 1025, 1039, 1041, 1043, 1045, 1063, 1065, 1071, 1073, 1075, 1077, 1087, 1089, 1103, 1105, 1107, 1109, 1111, 1113, 1119, 1121, 1123, 1125, 1132, 1135, 1136, 1139, 1144, 1189, 1191, 1204, 1206, 1210, 1212, 1265, 1277, 1279, 1292, 1295, 1298, 1301, 1302, 1305, 1307, 1313, 1318, 1320, 1327, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1353, 1355, 1431, 1443, 1445, 1447, 1449, 1461, 1463, 1506, 1507, 1509, 1550, 1551, 1554, 1555, 1558, 1567, 1568, 1570, 1581, 1585, 1587, 1603, 1606], "nestabl": [199, 200, 618, 619, 655, 659, 660, 662, 672, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 808, 810, 840, 842, 848, 850, 906, 907, 909, 919, 921, 923, 925, 927, 929, 967, 969, 995, 997, 999, 1001, 1015, 1017, 1019, 1021, 1039, 1041, 1043, 1045, 1063, 1065, 1071, 1073, 1075, 1077, 1087, 1089, 1103, 1105, 1107, 1109, 1111, 1113, 1119, 1121, 1123, 1125, 1132, 1135, 1144, 1189, 1191, 1204, 1206, 1210, 1212, 1265, 1277, 1279, 1292, 1295, 1298, 1301, 1302, 1305, 1307, 1313, 1318, 1320, 1327, 1328, 1329, 1331, 1341, 1343, 1353, 1355, 1431, 1443, 1445, 1461, 1463, 1506, 1507, 1509, 1550, 1555, 1558, 1581, 1585, 1587, 1603, 1606, 1607, 1608, 1610, 1616], "therefor": [199, 200, 246, 618, 619, 651, 652, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 668, 669, 670, 671, 672, 675, 677, 679, 692, 733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 760, 761, 763, 765, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792, 793, 808, 810, 840, 842, 848, 850, 858, 906, 907, 909, 919, 921, 923, 925, 927, 929, 967, 969, 995, 997, 999, 1001, 1015, 1017, 1019, 1021, 1039, 1041, 1043, 1045, 1063, 1065, 1071, 1073, 1075, 1077, 1087, 1089, 1103, 1105, 1107, 1109, 1111, 1113, 1119, 1121, 1123, 1125, 1132, 1135, 1144, 1189, 1191, 1204, 1206, 1210, 1212, 1265, 1277, 1279, 1292, 1295, 1298, 1301, 1302, 1305, 1307, 1313, 1318, 1320, 1327, 1328, 1329, 1331, 1341, 1343, 1353, 1355, 1431, 1443, 1445, 1461, 1463, 1506, 1507, 1509, 1550, 1555, 1558, 1581, 1585, 1587, 1603, 1606, 1607, 1608, 1610], "logical_xor": [199, 200, 618, 619, 906], "multipli": [199, 200, 201, 202, 618, 619, 652, 660, 666, 668, 669, 906, 1144, 1165, 1167], "not_equ": [199, 200, 618, 619, 906], "pow": [199, 200, 618, 619, 906], "expon": [199, 200, 906, 1095, 1097, 1144, 1242], "remaind": [199, 200, 213, 214, 251, 252, 618, 619, 632, 633, 906, 1144, 1185, 1431, 1465, 1467], "sign": [199, 200, 247, 618, 619, 651, 675, 680, 733, 734, 735, 906, 907, 909, 919, 921, 935, 937, 959, 961, 1079, 1081, 1099, 1101, 1328, 1381, 1383, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1581, 1594, 1596, 1600, 1602], "respect": [199, 200, 203, 204, 618, 619, 622, 623, 652, 653, 657, 658, 660, 662, 668, 669, 670, 673, 733, 763, 765, 906, 907, 909, 919, 921, 935, 937, 943, 945, 951, 953, 955, 957, 959, 961, 963, 965, 979, 981, 983, 985, 1003, 1005, 1007, 1009, 1011, 1013, 1027, 1029, 1031, 1033, 1051, 1053, 1055, 1057, 1063, 1065, 1067, 1069, 1079, 1081, 1087, 1089, 1099, 1101, 1127, 1131, 1265, 1266, 1268, 1269, 1271, 1272, 1273, 1274, 1276, 1281, 1282, 1284, 1285, 1287, 1288, 1290, 1297, 1328, 1377, 1379, 1484, 1485, 1486, 1487], "x2_i": [199, 200, 618, 619, 906, 919, 921, 935, 937, 943, 945, 951, 953, 955, 957, 959, 961, 963, 965, 979, 981, 983, 985, 1003, 1005, 1007, 1009, 1011, 1013, 1027, 1029, 1031, 1033, 1051, 1053, 1055, 1057, 1063, 1065, 1067, 1069, 1079, 1081, 1087, 1089, 1095, 1097, 1099, 1101, 1127, 1131], "11": [199, 200, 201, 202, 207, 208, 209, 210, 217, 218, 253, 254, 618, 619, 620, 621, 626, 627, 632, 633, 636, 637, 644, 645, 660, 662, 669, 906, 919, 921, 931, 933, 943, 945, 1099, 1101, 1103, 1105, 1144, 1165, 1167, 1189, 1191, 1210, 1212, 1214, 1307, 1308, 1310, 1328, 1341, 1343, 1372, 1374, 1393, 1397, 1418, 1427, 1429, 1431, 1447, 1449, 1488, 1494, 1505, 1510, 1515, 1517, 1519, 1521, 1532, 1546, 1549, 1550, 1551, 1554, 1581, 1582, 1584], "18": [199, 200, 217, 218, 618, 619, 636, 637, 660, 669, 906, 935, 937, 963, 965, 979, 981, 1115, 1117, 1328, 1341, 1343, 1353, 1355, 1372, 1374, 1510, 1519, 1521, 1581, 1582, 1584], "94": [199, 200, 203, 204, 217, 218, 618, 619, 622, 623, 636, 637, 873, 891, 1265, 1274, 1276], "256": [199, 200, 1307, 1316], "0001": [199, 200], "36": [199, 200, 906, 935, 937, 1328, 1372, 1374, 1393, 1397, 1488, 1499, 1581, 1582, 1584], "37": [199, 200, 618, 619, 906, 927, 929, 1132, 1135, 1510, 1519, 1521], "67": [199, 200, 201, 202, 618, 619, 636, 637, 669, 906, 963, 965, 975, 977, 1265, 1273, 1281, 1297], "45": [199, 200, 618, 619, 622, 623, 636, 637, 662, 906, 935, 937, 979, 981, 1265, 1266, 1268, 1282, 1284, 1328, 1372, 1374, 1431, 1465, 1467, 1506, 1507, 1509, 1581, 1582, 1584], "678": [199, 200], "16": [199, 200, 209, 210, 217, 218, 618, 619, 620, 621, 636, 637, 652, 660, 662, 678, 793, 824, 835, 837, 906, 1043, 1045, 1132, 1135, 1265, 1297, 1307, 1318, 1320, 1328, 1329, 1331, 1341, 1343, 1372, 1374, 1393, 1397, 1532, 1546, 1549, 1581, 1582, 1584], "25": [199, 200, 201, 202, 209, 210, 211, 212, 217, 218, 618, 619, 620, 621, 626, 627, 634, 635, 636, 637, 644, 645, 669, 906, 979, 981, 1115, 1117, 1119, 1121, 1123, 1125, 1144, 1210, 1212, 1214, 1238, 1240, 1328, 1329, 1331, 1341, 1343, 1349, 1351, 1418, 1423, 1425, 1488, 1490, 1506, 1507, 1509, 1581, 1582, 1584], "33": [199, 200, 215, 216, 217, 218, 225, 226, 618, 619, 620, 621, 622, 623, 906, 931, 933, 1144, 1214, 1238, 1240, 1265, 1274, 1276, 1328, 1372, 1374, 1488, 1505, 1506, 1507, 1509, 1581, 1582, 1584], "sin": [199, 200, 618, 619, 668, 675, 906, 1144, 1186, 1617], "841": [199, 200, 618, 619, 906, 1111, 1113], "909": [199, 200, 618, 619, 620, 621, 906, 1111, 1113], "141": [199, 200, 618, 619, 793, 796, 798, 906, 1111, 1113], "sinh": [199, 200, 618, 619, 906, 1617], "63": [199, 200, 618, 619, 628, 629, 906, 1115, 1117, 1119, 1121, 1328, 1329, 1331, 1372, 1374, 1488, 1490, 1581, 1582, 1584], "232": [199, 200, 618, 619, 906, 1115, 1117], "51": [199, 200, 636, 637, 906, 963, 965, 1115, 1117], "sqrt": [199, 200, 618, 619, 906, 1328, 1410, 1413], "squar": [199, 200, 209, 210, 618, 619, 628, 629, 662, 906, 1119, 1121, 1265, 1273, 1281, 1297, 1307, 1313, 1328, 1329, 1331, 1337, 1339, 1345, 1347, 1348, 1349, 1351, 1360, 1362, 1381, 1383, 1385, 1387, 1389, 1392, 1488, 1494], "root": [199, 200, 618, 619, 651, 652, 654, 678, 906, 1119, 1121, 1510, 1511, 1513, 1519, 1521], "subtract": [199, 200, 618, 619, 660, 668, 669, 906], "differ": [199, 200, 246, 247, 248, 251, 252, 253, 254, 644, 645, 651, 652, 653, 655, 656, 657, 659, 660, 662, 663, 665, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 692, 793, 825, 827, 906, 919, 921, 1079, 1081, 1127, 1131, 1307, 1324, 1431, 1472, 1474, 1581, 1594, 1596, 1600, 1602, 1617], "tan": [199, 200, 618, 619, 657, 659, 663, 665, 669, 672, 675, 906, 923, 925, 927, 929, 1144, 1150, 1210, 1212, 1328, 1341, 1343, 1431, 1443, 1445, 1550, 1551, 1554, 1567, 1568, 1570, 1617], "56": [199, 200, 217, 218, 618, 619, 660, 906, 1119, 1121, 1132, 1135, 1265, 1266, 1268, 1307, 1316, 1328, 1372, 1374, 1393, 1397, 1581, 1582, 1584], "19": [199, 200, 217, 218, 618, 619, 636, 637, 660, 906, 963, 965, 1132, 1135, 1328, 1341, 1343, 1488, 1499, 1510, 1519, 1521, 1567, 1577, 1579], "tanh": [199, 200, 618, 619, 675, 906, 1617], "762": [199, 200, 618, 619, 906, 1039, 1041, 1136, 1139], "964": [199, 200, 618, 619, 906, 1136, 1139], "trunc": [199, 200, 618, 619, 906], "elementwis": [200, 619, 656, 665, 675, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 969, 971, 973, 975, 977, 979, 981, 983, 985, 987, 989, 991, 993, 995, 997, 999, 1001, 1003, 1005, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1059, 1061, 1063, 1065, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 1095, 1097, 1099, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1131, 1132, 1135, 1136, 1139, 1140, 1143], "all_equ": [201, 202, 620, 621, 1144], "equality_matrix": [201, 202, 620, 621, 1144, 1145, 1147], "compar": [201, 202, 223, 224, 251, 252, 620, 621, 642, 643, 660, 662, 664, 673, 678, 1144, 1145, 1147, 1151, 1152, 1328, 1393, 1397, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1567, 1568, 1570, 1577, 1579], "matrix": [201, 202, 209, 210, 620, 621, 628, 629, 733, 763, 765, 778, 781, 782, 785, 1144, 1145, 1147, 1155, 1157, 1307, 1324, 1328, 1329, 1331, 1337, 1339, 1341, 1343, 1345, 1347, 1348, 1349, 1351, 1353, 1355, 1356, 1358, 1360, 1362, 1364, 1366, 1368, 1370, 1376, 1377, 1379, 1385, 1387, 1389, 1392, 1393, 1397, 1402, 1405, 1414, 1417], "clip_matrix_norm": [201, 202, 620, 621, 1144], "max_norm": [201, 202, 620, 621, 1144, 1155, 1157, 1159, 1161], "p": [201, 202, 620, 621, 628, 629, 651, 652, 655, 733, 763, 765, 1144, 1155, 1157, 1159, 1161, 1307, 1322, 1328, 1356, 1358, 1410, 1413], "maximum": [201, 202, 203, 204, 213, 214, 219, 220, 251, 252, 253, 254, 618, 619, 620, 621, 622, 623, 632, 633, 638, 639, 652, 660, 678, 873, 896, 906, 1144, 1155, 1157, 1159, 1161, 1186, 1265, 1282, 1284, 1431, 1432, 1434, 1488, 1500, 1532, 1533, 1535, 1581, 1585, 1587, 1591, 1593, 1617], "norm": [201, 202, 216, 620, 621, 628, 629, 635, 656, 1144, 1155, 1157, 1159, 1161, 1328, 1356, 1358, 1410, 1413, 1507, 1509, 1617], "downscal": [201, 202, 620, 621, 1144, 1155, 1157, 1159, 1161], "max": [201, 202, 225, 226, 620, 621, 628, 629, 644, 645, 793, 825, 827, 835, 837, 906, 1071, 1073, 1144, 1155, 1157, 1159, 1161, 1176, 1178, 1227, 1228, 1328, 1364, 1366, 1376, 1581], "need": [201, 202, 213, 214, 248, 620, 621, 632, 633, 651, 652, 653, 654, 656, 659, 660, 661, 663, 664, 665, 668, 669, 670, 672, 675, 677, 678, 691, 692, 1144, 1155, 1157, 1159, 1161, 1431, 1432, 1434, 1443, 1445, 1488, 1499], "894": [201, 202, 620, 621, 1144, 1155, 1157, 1159, 1161, 1506, 1507, 1509], "79": [201, 202, 620, 621, 636, 637, 906, 963, 965, 979, 981, 1144, 1155, 1157, 1159, 1161], "clip_vector_norm": [201, 202, 620, 621, 1144], "vector": [201, 202, 209, 210, 620, 621, 628, 629, 691, 733, 763, 765, 1144, 1159, 1161, 1307, 1324, 1328, 1333, 1335, 1345, 1347, 1353, 1355, 1372, 1374, 1389, 1392, 1393, 1397, 1406, 1409, 1410, 1413, 1414, 1417], "cumprod": [201, 202, 620, 621, 663, 680, 1144], "exclus": [201, 202, 203, 204, 251, 252, 620, 621, 622, 623, 662, 663, 665, 669, 680, 733, 734, 735, 1144, 1165, 1167, 1217, 1218, 1220, 1265, 1277, 1279, 1510, 1515, 1517], "along": [201, 202, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 226, 229, 230, 249, 250, 251, 252, 620, 621, 628, 629, 630, 631, 632, 633, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 656, 660, 672, 675, 733, 757, 758, 760, 761, 873, 896, 1144, 1165, 1167, 1169, 1189, 1191, 1260, 1263, 1328, 1356, 1358, 1402, 1405, 1406, 1409, 1410, 1413, 1418, 1423, 1425, 1427, 1429, 1431, 1436, 1438, 1447, 1449, 1453, 1455, 1461, 1463, 1465, 1467, 1472, 1474, 1478, 1480, 1484, 1485, 1486, 1487, 1510, 1528, 1530, 1532, 1533, 1535, 1537, 1539, 1567, 1568, 1570, 1577, 1579, 1581, 1582, 1584, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "take": [201, 202, 248, 650, 651, 652, 653, 659, 660, 662, 664, 669, 670, 671, 675, 677, 679, 680, 692, 906, 963, 965, 1617, 1623], "cumul": [201, 202, 620, 621, 691, 1144, 1165, 1167, 1169], "exclud": [201, 202, 233, 234, 620, 621, 660, 675, 733, 734, 735, 1510, 1523, 1525], "120": [201, 202, 620, 621, 1328, 1372, 1374], "einops_rearrang": [201, 202, 620, 621, 1144], "pattern": [201, 202, 248, 620, 621, 659, 670, 1144, 1172, 1174, 1176, 1178, 1180, 1182], "axes_length": [201, 202, 620, 621, 1144, 1172, 1174, 1176, 1178, 1180, 1182], "re": [201, 202, 245, 246, 247, 620, 621, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 677, 680, 692, 873, 896, 1144, 1172, 1174, 1328, 1398, 1401, 1431, 1461, 1463, 1532, 1546, 1549, 1617], "arrang": [201, 202, 620, 621, 1144, 1172, 1174], "rearrang": [201, 202, 620, 621, 1144, 1172, 1174, 1180, 1182], "addit": [201, 202, 215, 216, 616, 617, 620, 621, 634, 635, 651, 652, 656, 659, 660, 662, 663, 669, 670, 677, 678, 680, 873, 897, 901, 906, 919, 921, 1144, 1172, 1174, 1176, 1178, 1180, 1182, 1506, 1507, 1509], "specif": [201, 202, 246, 616, 617, 620, 621, 652, 653, 655, 657, 658, 661, 662, 663, 664, 665, 668, 669, 670, 671, 672, 675, 676, 677, 679, 680, 691, 692, 793, 859, 861, 873, 894, 897, 901, 906, 1059, 1061, 1063, 1065, 1144, 1172, 1174, 1176, 1178, 1180, 1182, 1222, 1328, 1345, 1347, 1398, 1401, 1431, 1472, 1474, 1484, 1485, 1486, 1487, 1510, 1511, 1513, 1567, 1572, 1575, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1616, 1617, 1623], "new": [201, 202, 203, 204, 213, 214, 215, 216, 246, 247, 248, 251, 252, 620, 621, 622, 623, 632, 633, 634, 635, 650, 651, 652, 653, 654, 655, 656, 659, 660, 662, 667, 669, 670, 672, 674, 677, 680, 691, 733, 740, 748, 750, 752, 753, 755, 771, 772, 774, 776, 786, 788, 789, 792, 793, 867, 906, 939, 941, 1091, 1093, 1144, 1172, 1174, 1176, 1178, 1180, 1182, 1186, 1189, 1191, 1193, 1195, 1227, 1228, 1230, 1231, 1238, 1240, 1242, 1251, 1254, 1265, 1269, 1271, 1274, 1276, 1282, 1284, 1285, 1287, 1288, 1290, 1431, 1443, 1445, 1457, 1459, 1472, 1474, 1488, 1493, 1504, 1505, 1506, 1507, 1509, 1616, 1617], "einop": [201, 202, 247, 620, 621, 1144, 1172, 1174, 1176, 1178, 1180, 1182], "been": [201, 202, 217, 218, 233, 237, 620, 621, 636, 637, 652, 657, 659, 662, 665, 666, 669, 670, 671, 673, 675, 677, 691, 692, 873, 878, 1144, 1172, 1174, 1176, 1178, 1180, 1182, 1510, 1511, 1513, 1616], "einops_reduc": [201, 202, 620, 621, 1144], "reduct": [201, 202, 229, 230, 251, 252, 620, 621, 646, 647, 662, 670, 677, 1144, 1176, 1178, 1227, 1228, 1607, 1608, 1610, 1612, 1614, 1617], "reduc": [201, 202, 209, 210, 219, 220, 225, 226, 229, 230, 251, 252, 620, 621, 628, 629, 638, 639, 644, 645, 646, 647, 675, 677, 873, 896, 1144, 1176, 1178, 1328, 1377, 1379, 1532, 1533, 1535, 1537, 1539, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "callabl": [201, 202, 620, 621, 658, 662, 675, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 730, 731, 793, 829, 830, 832, 833, 873, 884, 885, 896, 1144, 1149, 1154, 1171, 1176, 1178, 1187, 1188, 1256, 1307, 1326, 1484, 1485, 1486, 1487, 1488, 1494, 1495, 1496, 1498, 1499, 1500, 1501], "One": [201, 202, 213, 214, 217, 218, 620, 621, 632, 633, 636, 637, 660, 662, 664, 670, 675, 677, 678, 1144, 1176, 1178, 1431, 1457, 1459, 1510, 1515, 1517], "avail": [201, 202, 246, 620, 621, 651, 652, 659, 663, 669, 671, 692, 873, 878, 887, 888, 889, 903, 1144, 1176, 1178], "min": [201, 202, 225, 226, 620, 621, 644, 645, 793, 825, 827, 835, 837, 906, 1075, 1077, 1144, 1176, 1178, 1227, 1228, 1238, 1240, 1328, 1377, 1379, 1389, 1392, 1393, 1397, 1410, 1413, 1581], "mean": [201, 202, 207, 208, 217, 218, 225, 226, 251, 252, 620, 621, 626, 627, 636, 637, 644, 645, 648, 649, 651, 652, 655, 658, 660, 662, 665, 669, 670, 671, 672, 675, 677, 678, 679, 680, 691, 692, 873, 896, 1144, 1176, 1178, 1265, 1273, 1281, 1297, 1307, 1313, 1316, 1318, 1320, 1484, 1485, 1486, 1487, 1488, 1494, 1510, 1515, 1517, 1519, 1521, 1550, 1551, 1554, 1581, 1616, 1617], "prod": [201, 202, 225, 226, 620, 621, 644, 645, 660, 670, 675, 1144, 1176, 1178, 1581], "einops_repeat": [201, 202, 620, 621, 1144], "repeat": [201, 202, 213, 214, 620, 621, 632, 633, 652, 659, 660, 662, 666, 668, 670, 673, 1144, 1180, 1182, 1431, 1478, 1480], "gather": [201, 202, 620, 621, 1144, 1193, 1195], "indic": [201, 202, 207, 208, 213, 214, 215, 216, 219, 220, 223, 224, 251, 252, 614, 615, 620, 621, 626, 627, 628, 629, 632, 633, 634, 635, 638, 639, 642, 643, 654, 657, 663, 673, 680, 705, 722, 724, 733, 737, 738, 906, 1107, 1109, 1144, 1189, 1191, 1193, 1195, 1208, 1224, 1227, 1228, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1328, 1410, 1413, 1431, 1457, 1459, 1461, 1463, 1488, 1489, 1491, 1493, 1495, 1496, 1497, 1499, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1513, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1550, 1551, 1554, 1559, 1562, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1617], "gather_nd": [201, 202, 620, 621, 1144, 1617], "cuda": [201, 202, 217, 218, 620, 621, 636, 637, 675, 692, 733, 757, 758, 760, 761, 873, 875, 893, 894, 1144, 1189, 1191, 1193, 1195, 1224, 1227, 1228, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1616], "cpu": [201, 202, 217, 218, 620, 621, 636, 637, 652, 671, 692, 733, 752, 757, 758, 760, 761, 789, 792, 873, 878, 879, 881, 883, 888, 891, 893, 894, 897, 901, 902, 904, 905, 1144, 1189, 1191, 1193, 1195, 1224, 1227, 1228, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525], "etc": [201, 202, 217, 218, 231, 232, 248, 620, 621, 636, 637, 648, 649, 651, 652, 653, 656, 657, 660, 662, 664, 668, 669, 670, 675, 677, 678, 692, 733, 757, 758, 760, 761, 1144, 1189, 1191, 1193, 1195, 1224, 1227, 1228, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1616], "given": [201, 202, 211, 212, 213, 214, 217, 218, 247, 248, 251, 252, 620, 621, 622, 623, 630, 631, 632, 633, 636, 637, 651, 652, 653, 654, 656, 659, 660, 661, 662, 664, 665, 666, 667, 668, 669, 670, 671, 672, 677, 679, 691, 733, 734, 735, 740, 757, 758, 760, 761, 793, 819, 858, 873, 883, 891, 893, 894, 895, 896, 902, 905, 1144, 1165, 1167, 1169, 1193, 1195, 1227, 1228, 1234, 1260, 1263, 1265, 1266, 1268, 1269, 1271, 1274, 1276, 1282, 1284, 1285, 1287, 1288, 1290, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1328, 1414, 1417, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1432, 1434, 1443, 1445, 1447, 1449, 1453, 1455, 1461, 1463, 1465, 1467, 1478, 1480, 1488, 1495, 1496, 1510, 1515, 1517, 1519, 1521, 1523, 1525, 1528, 1530, 1567, 1572, 1575, 1577, 1579], "has_nan": [201, 202, 251, 252, 620, 621, 1144], "include_inf": [201, 202, 251, 252, 620, 621, 1144, 1204, 1206, 1264], "inplace_decr": [201, 202, 620, 621, 1144], "val": [201, 202, 251, 252, 620, 621, 672, 677, 1144, 1210, 1212, 1214, 1215, 1230, 1231], "decrement": [201, 202, 620, 621, 1144, 1210, 1212], "defin": [201, 202, 209, 210, 620, 621, 628, 629, 651, 653, 656, 657, 659, 662, 670, 677, 679, 692, 906, 1079, 1081, 1099, 1101, 1144, 1210, 1212, 1214, 1224, 1328, 1333, 1335, 1345, 1347, 1385, 1387, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1616], "follow": [201, 202, 203, 204, 246, 247, 251, 252, 620, 621, 622, 623, 628, 629, 651, 652, 653, 654, 656, 657, 659, 660, 661, 662, 666, 667, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 680, 692, 793, 835, 837, 873, 896, 906, 1099, 1101, 1144, 1210, 1212, 1214, 1215, 1238, 1240, 1242, 1265, 1269, 1271, 1274, 1276, 1282, 1284, 1285, 1287, 1288, 1290, 1307, 1326, 1327, 1328, 1377, 1379, 1410, 1413, 1488, 1494, 1500, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1617], "stable_divid": [201, 202, 620, 621, 665, 1144], "denomin": [201, 202, 215, 216, 620, 621, 634, 635, 665, 670, 692, 1144, 1185, 1200, 1231, 1238, 1240, 1242, 1506, 1507, 1509], "min_denomin": [201, 202, 620, 621, 1144, 1238, 1240], "divis": [201, 202, 203, 204, 620, 621, 622, 623, 665, 906, 959, 961, 979, 981, 1003, 1005, 1099, 1101, 1144, 1185, 1200, 1231, 1238, 1240, 1242, 1265, 1266, 1268, 1269, 1271, 1282, 1284], "minimum": [201, 202, 213, 214, 219, 220, 618, 619, 620, 621, 632, 633, 638, 639, 906, 907, 909, 1144, 1199, 1200, 1230, 1231, 1238, 1240, 1242, 1431, 1432, 1434, 1532, 1537, 1539, 1581, 1585, 1587, 1591, 1593, 1617], "global": [201, 202, 215, 216, 233, 236, 237, 238, 244, 251, 252, 253, 254, 620, 621, 634, 635, 665, 666, 670, 671, 675, 793, 814, 815, 816, 818, 819, 873, 894, 895, 896, 1144, 1199, 1200, 1226, 1230, 1231, 1233, 1238, 1240, 1242, 1265, 1291, 1296, 1306, 1506, 1507, 1509], "_min_denomin": [201, 202, 620, 621, 1144, 1238, 1240], "numpi": [201, 202, 233, 236, 237, 238, 246, 247, 620, 621, 652, 653, 657, 658, 661, 662, 663, 664, 666, 670, 671, 672, 675, 677, 680, 1144, 1251, 1254, 1581, 1582, 1584, 1616, 1617], "to_list": [201, 202, 620, 621, 1144, 1617], "represent": [201, 202, 251, 252, 253, 254, 620, 621, 691, 732, 793, 794, 795, 825, 827, 835, 837, 873, 875, 876, 906, 907, 909, 919, 921, 943, 945, 955, 957, 963, 965, 1067, 1069, 1079, 1081, 1144, 1149, 1246, 1249], "to_numpi": [201, 202, 620, 621, 678, 1144, 1617], "unstack": [201, 202, 251, 252, 620, 621, 669, 675, 678, 1144, 1617], "keepdim": [201, 202, 209, 210, 219, 220, 225, 226, 229, 230, 251, 252, 620, 621, 628, 629, 638, 639, 644, 645, 646, 647, 673, 675, 1144, 1260, 1263, 1328, 1356, 1358, 1410, 1413, 1532, 1533, 1535, 1537, 1539, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "unpack": [201, 202, 620, 621, 662, 673, 1144, 1260, 1263], "keep": [201, 202, 251, 252, 620, 621, 651, 652, 658, 661, 662, 669, 670, 678, 680, 1144, 1260, 1263], "adam_step": [203, 204, 622, 623, 1265], "mw": [203, 204, 622, 623, 679, 1265, 1266, 1268, 1269, 1271], "vw": [203, 204, 622, 623, 679, 1265, 1266, 1268, 1269, 1271], "step": [203, 204, 248, 612, 613, 622, 623, 651, 652, 654, 660, 666, 668, 669, 670, 671, 675, 678, 679, 680, 691, 733, 734, 735, 757, 758, 760, 761, 1265, 1266, 1268, 1269, 1271, 1274, 1276, 1282, 1284, 1285, 1287, 1288, 1290, 1484, 1485, 1486, 1487, 1617], "beta1": [203, 204, 622, 623, 679, 1144, 1150, 1265, 1266, 1268, 1269, 1271, 1282, 1284], "beta2": [203, 204, 622, 623, 679, 1144, 1150, 1265, 1266, 1268, 1269, 1271, 1282, 1284], "999": [203, 204, 618, 619, 622, 623, 679, 906, 1136, 1139, 1265, 1266, 1268, 1269, 1271, 1282, 1284, 1288, 1290], "epsilon": [203, 204, 211, 212, 215, 216, 622, 623, 628, 629, 630, 631, 634, 635, 665, 669, 672, 679, 1144, 1150, 1265, 1266, 1268, 1269, 1271, 1282, 1284, 1328, 1364, 1366, 1376, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1506, 1507, 1509], "1e": [203, 204, 211, 212, 215, 216, 622, 623, 630, 631, 634, 635, 664, 665, 669, 672, 679, 680, 793, 825, 827, 906, 1043, 1045, 1144, 1199, 1200, 1230, 1265, 1266, 1268, 1269, 1271, 1282, 1284, 1288, 1290, 1328, 1389, 1392, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1506, 1507, 1509, 1617], "07": [203, 204, 211, 212, 618, 619, 622, 623, 630, 631, 636, 637, 679, 906, 935, 937, 1107, 1109, 1265, 1266, 1268, 1269, 1271, 1273, 1274, 1276, 1281, 1282, 1284, 1297, 1328, 1393, 1397, 1418, 1419, 1421, 1423, 1425, 1427, 1429], "cost": [203, 204, 622, 623, 1265, 1266, 1268, 1269, 1271, 1274, 1276, 1282, 1284, 1285, 1287, 1288, 1290, 1484, 1485, 1486, 1487], "c": [203, 204, 207, 208, 225, 226, 245, 247, 248, 607, 608, 609, 614, 615, 618, 619, 620, 621, 622, 623, 632, 633, 644, 645, 650, 651, 655, 660, 665, 669, 674, 675, 676, 678, 692, 793, 825, 827, 835, 837, 906, 1039, 1041, 1087, 1089, 1107, 1109, 1144, 1151, 1152, 1255, 1265, 1266, 1268, 1269, 1271, 1274, 1276, 1282, 1284, 1285, 1287, 1288, 1290, 1307, 1316, 1431, 1472, 1474, 1488, 1491, 1499, 1504, 1505, 1532, 1541, 1544, 1581, 1582, 1584, 1597, 1599, 1603, 1606, 1616, 1617, 1623], "weight": [203, 204, 622, 623, 665, 669, 675, 679, 680, 1265, 1266, 1268, 1269, 1271, 1274, 1276, 1282, 1284, 1285, 1287, 1288, 1290, 1307, 1324, 1325, 1327], "w": [203, 204, 207, 208, 251, 252, 618, 619, 622, 623, 626, 627, 675, 678, 679, 1144, 1152, 1238, 1240, 1265, 1266, 1268, 1269, 1271, 1274, 1276, 1282, 1284, 1285, 1287, 1288, 1290, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1488, 1494], "dc": [203, 204, 622, 623, 1265, 1266, 1268, 1269, 1271, 1274, 1276, 1282, 1284, 1285, 1287, 1288, 1290], "dw": [203, 204, 622, 623, 1265, 1266, 1268, 1269, 1271, 1274, 1276, 1282, 1284, 1285, 1287, 1288, 1290], "run": [203, 204, 622, 623, 651, 654, 657, 660, 662, 663, 664, 666, 673, 675, 676, 677, 678, 679, 680, 691, 692, 1265, 1266, 1268, 1269, 1271, 1282, 1284, 1484, 1485, 1486, 1487], "averag": [203, 204, 622, 623, 1265, 1266, 1268, 1269, 1271, 1282, 1284, 1484, 1485, 1486], "moment": [203, 204, 622, 623, 653, 666, 692, 1265, 1266, 1268, 1269, 1271, 1282, 1284], "train": [203, 204, 248, 622, 623, 665, 669, 671, 678, 679, 680, 690, 691, 692, 1265, 1266, 1268, 1269, 1271, 1282, 1284, 1616, 1617], "forget": [203, 204, 622, 623, 1265, 1266, 1268, 1269, 1271, 1282, 1284], "factor": [203, 204, 207, 208, 209, 210, 247, 622, 623, 626, 627, 628, 629, 873, 894, 895, 896, 1265, 1266, 1268, 1269, 1271, 1282, 1284, 1285, 1287, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1328, 1329, 1331], "dure": [203, 204, 225, 226, 251, 252, 616, 617, 622, 623, 644, 645, 651, 665, 667, 669, 670, 671, 672, 692, 730, 731, 873, 897, 901, 1144, 1256, 1265, 1266, 1268, 1269, 1271, 1282, 1284, 1328, 1353, 1355, 1484, 1485, 1486, 1487, 1581, 1597, 1599, 1603, 1606], "adam": [203, 204, 622, 623, 678, 679, 680, 1144, 1150, 1265, 1266, 1268, 1269, 1271, 1282, 1284, 1617], "updat": [203, 204, 251, 252, 622, 623, 651, 652, 653, 654, 655, 657, 660, 661, 667, 668, 669, 670, 675, 677, 678, 680, 692, 1144, 1215, 1227, 1228, 1265, 1266, 1268, 1269, 1271, 1274, 1276, 1282, 1284, 1285, 1287, 1288, 1290, 1307, 1325, 1484, 1485, 1486, 1488, 1495, 1496, 1504, 1505], "prevent": [203, 204, 622, 623, 652, 672, 673, 1265, 1266, 1268, 1269, 1271, 1282, 1284, 1581, 1600, 1602], "delta": [203, 204, 622, 623, 1265, 1266, 1268], "dcdw": [203, 204, 622, 623, 1265, 1266, 1268, 1269, 1271, 1274, 1276, 1282, 1284, 1285, 1287], "adam_step_delta": [203, 204, 622, 623, 1265, 1266, 1268], "182": [203, 204, 1265, 1266, 1268], "adam_upd": [203, 204, 622, 623, 679, 1265], "lr": [203, 204, 622, 623, 678, 679, 1144, 1150, 1265, 1269, 1271, 1274, 1276, 1282, 1284, 1285, 1287, 1288, 1290], "mw_tm1": [203, 204, 622, 623, 1265, 1269, 1271, 1282, 1284], "vw_tm1": [203, 204, 622, 623, 1265, 1269, 1271, 1282, 1284], "stop_gradi": [203, 204, 622, 623, 679, 873, 896, 1144, 1150, 1265, 1269, 1271, 1274, 1276, 1282, 1284, 1285, 1287, 1288, 1290, 1484, 1485, 1486, 1487, 1617], "learn": [203, 204, 246, 247, 622, 623, 651, 653, 655, 665, 674, 691, 1265, 1269, 1271, 1274, 1276, 1282, 1284, 1285, 1287, 1288, 1290, 1484, 1485, 1486, 1487, 1616, 1617], "rate": [203, 204, 622, 623, 1265, 1269, 1271, 1274, 1276, 1282, 1284, 1285, 1287, 1288, 1290, 1484, 1485, 1486, 1487], "rel": [203, 204, 213, 214, 223, 224, 612, 613, 622, 623, 628, 629, 632, 633, 642, 643, 652, 654, 664, 1265, 1269, 1271, 1274, 1276, 1282, 1284, 1285, 1287, 1288, 1290, 1328, 1341, 1343, 1364, 1366, 1376, 1402, 1405, 1431, 1447, 1449, 1461, 1463, 1567, 1568, 1570, 1577, 1579, 1617], "previou": [203, 204, 622, 623, 652, 657, 662, 663, 680, 692, 793, 871, 1144, 1257, 1258, 1259, 1265, 1269, 1271, 1282, 1284], "time": [203, 204, 221, 222, 246, 247, 248, 622, 623, 640, 641, 651, 652, 653, 657, 658, 660, 662, 665, 669, 670, 672, 675, 678, 680, 692, 1265, 1269, 1271, 1282, 1284, 1307, 1325, 1431, 1478, 1480, 1484, 1485, 1486, 1487, 1532, 1533, 1535, 1537, 1539, 1550, 1551, 1554, 1555, 1558], "stop": [203, 204, 612, 613, 622, 623, 675, 692, 733, 734, 735, 757, 758, 760, 761, 873, 874, 896, 1265, 1269, 1271, 1274, 1276, 1282, 1284, 1285, 1287, 1288, 1290, 1292, 1295, 1484, 1485, 1486, 1487, 1488, 1499], "after": [203, 204, 215, 216, 251, 252, 622, 623, 634, 635, 652, 653, 657, 660, 661, 662, 663, 670, 674, 793, 867, 873, 874, 906, 1119, 1121, 1265, 1269, 1271, 1272, 1274, 1276, 1282, 1284, 1285, 1287, 1288, 1290, 1488, 1499, 1506, 1507, 1509], "ws_new": [203, 204, 622, 623, 1265, 1269, 1271, 1282, 1284, 1285, 1287, 1288, 1290], "gradient_descent_upd": [203, 204, 622, 623, 1265, 1484, 1485, 1486, 1487, 1617], "inplac": [203, 204, 251, 252, 655, 657, 660, 667, 668, 677, 679, 1144, 1150, 1153, 1209, 1215, 1216, 1243], "perform": [203, 204, 229, 230, 248, 646, 647, 656, 657, 660, 662, 664, 665, 666, 668, 669, 671, 672, 675, 678, 692, 705, 722, 724, 733, 757, 758, 760, 761, 1144, 1165, 1167, 1172, 1174, 1176, 1178, 1180, 1182, 1210, 1212, 1214, 1215, 1229, 1307, 1322, 1325, 1328, 1389, 1392, 1484, 1485, 1486, 1487, 1488, 1495, 1496, 1607, 1608, 1610, 1612, 1614], "handl": [203, 204, 251, 252, 253, 254, 655, 657, 662, 663, 664, 665, 667, 669, 670, 671, 672, 679, 730, 731, 873, 875, 876, 877, 878, 879, 881, 886, 890, 891, 902, 905], "behind": [203, 204, 652, 655, 662, 674, 676], "scene": [203, 204, 245, 246, 655, 674, 676, 1617], "pytorch": [203, 204, 247, 248, 653, 657, 663, 664, 665, 670, 671, 672, 675, 680, 692, 1616, 1617], "e": [203, 204, 217, 218, 223, 224, 225, 226, 233, 237, 247, 248, 607, 608, 609, 628, 629, 636, 637, 642, 643, 644, 645, 650, 652, 654, 655, 661, 662, 669, 675, 678, 692, 732, 733, 763, 765, 793, 795, 859, 861, 873, 875, 906, 907, 909, 935, 937, 951, 953, 959, 961, 967, 969, 991, 993, 999, 1001, 1003, 1005, 1015, 1017, 1035, 1037, 1043, 1045, 1071, 1073, 1075, 1077, 1083, 1085, 1095, 1097, 1099, 1101, 1328, 1333, 1335, 1353, 1355, 1364, 1366, 1376, 1385, 1387, 1389, 1392, 1410, 1413, 1431, 1472, 1474, 1488, 1491, 1504, 1505, 1510, 1515, 1517, 1519, 1521, 1523, 1525, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1567, 1568, 1570, 1577, 1579, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1616], "higher": [203, 204, 674, 675, 680, 692], "order": [203, 204, 223, 224, 246, 251, 252, 253, 254, 628, 629, 642, 643, 651, 652, 653, 654, 656, 657, 659, 660, 663, 664, 666, 668, 669, 670, 671, 672, 678, 680, 692, 906, 935, 937, 1328, 1345, 1347, 1356, 1358, 1389, 1392, 1393, 1397, 1410, 1413, 1431, 1447, 1449, 1484, 1485, 1486, 1532, 1541, 1544, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1567, 1568, 1570, 1577, 1579], "optim": [203, 204, 248, 622, 623, 672, 676, 678, 680, 691, 1144, 1150, 1265, 1288, 1290, 1484, 1485, 1486, 1487, 1617], "provid": [203, 204, 219, 220, 225, 226, 229, 230, 246, 251, 252, 638, 639, 644, 645, 646, 647, 651, 652, 657, 659, 660, 662, 665, 668, 669, 670, 671, 672, 677, 679, 691, 692, 730, 731, 733, 763, 765, 793, 814, 815, 816, 818, 819, 839, 859, 861, 872, 873, 878, 1144, 1171, 1224, 1228, 1328, 1406, 1409, 1431, 1447, 1449, 1472, 1474, 1532, 1533, 1535, 1581, 1597, 1599, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "descent": [203, 204, 622, 623, 679, 1265, 1274, 1276], "new_weight": [203, 204, 622, 623, 678, 1265, 1274, 1276, 1282, 1284], "95": [203, 204, 217, 218, 622, 623, 636, 637, 906, 1107, 1109, 1265, 1266, 1268, 1274, 1276, 1288, 1290, 1510, 1519, 1521], "98": [203, 204, 217, 218, 618, 619, 622, 623, 636, 637, 906, 963, 965, 1265, 1274, 1276, 1328, 1372, 1374, 1488, 1490, 1532, 1546, 1549, 1581, 1582, 1584], "97": [203, 204, 618, 619, 622, 623, 636, 637, 906, 927, 929, 1265, 1274, 1276], "96": [203, 204, 618, 619, 636, 637, 906, 971, 973, 1132, 1135, 1265, 1274, 1276, 1328, 1372, 1374, 1581, 1582, 1584], "rather": [203, 204, 247, 251, 252, 622, 623, 652, 656, 659, 662, 669, 670, 672, 680, 692, 733, 734, 735, 873, 896, 1144, 1217, 1218, 1220, 1265, 1277, 1279], "like": [203, 204, 247, 622, 623, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 667, 670, 671, 672, 674, 675, 677, 678, 679, 680, 691, 692, 793, 812, 858, 1265, 1277, 1279, 1510, 1523, 1525, 1617], "jax": [203, 204, 233, 236, 237, 238, 247, 248, 622, 623, 652, 653, 657, 658, 662, 663, 664, 666, 670, 671, 672, 675, 677, 680, 692, 1265, 1277, 1279, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1617], "do": [203, 204, 248, 251, 252, 622, 623, 651, 652, 653, 656, 657, 658, 659, 660, 661, 664, 665, 666, 667, 668, 669, 670, 671, 672, 675, 677, 678, 679, 680, 692, 906, 1099, 1101, 1144, 1215, 1265, 1277, 1279, 1302, 1305, 1488, 1489, 1498, 1499, 1500, 1616], "flag": [203, 204, 251, 252, 622, 623, 652, 670, 672, 873, 878, 1265, 1277, 1279], "is_var": [203, 204, 622, 623, 1265, 1277, 1279], "lamb_upd": [203, 204, 622, 623, 1265], "max_trust_ratio": [203, 204, 622, 623, 1265, 1282, 1284], "decay_lambda": [203, 204, 622, 623, 1265, 1282, 1284, 1285, 1287], "trust": [203, 204, 622, 623, 1265, 1282, 1284], "ratio": [203, 204, 622, 623, 1265, 1282, 1284], "decai": [203, 204, 622, 623, 1265, 1282, 1284, 1285, 1287], "lamb": [203, 204, 622, 623, 679, 1265, 1282, 1284], "784": [203, 204, 1265, 1282, 1284], "78": [203, 204, 906, 963, 965, 1039, 1041, 1107, 1109, 1265, 1282, 1284, 1328, 1372, 1374, 1510, 1519, 1521, 1581, 1582, 1584], "05": [203, 204, 215, 216, 622, 623, 634, 635, 662, 664, 1144, 1199, 1210, 1212, 1230, 1265, 1266, 1268, 1282, 1284, 1506, 1507, 1509], "02": [203, 204, 217, 218, 618, 619, 622, 623, 636, 637, 1144, 1238, 1240, 1265, 1266, 1268, 1282, 1284, 1510, 1523, 1525], "01": [203, 204, 215, 216, 622, 623, 636, 637, 651, 680, 906, 1103, 1105, 1107, 1109, 1144, 1238, 1240, 1265, 1266, 1268, 1282, 1284, 1328, 1393, 1397, 1506, 1507, 1509, 1510, 1519, 1521], "5e": [203, 204, 1265, 1282, 1284], "04": [203, 204, 622, 623, 634, 635, 793, 825, 827, 906, 995, 997, 1043, 1045, 1144, 1230, 1265, 1266, 1268, 1282, 1284, 1307, 1327, 1506, 1507, 1509], "0e": [203, 204, 622, 623, 1265, 1282, 1284], "lars_upd": [203, 204, 622, 623, 1265], "lar": [203, 204, 622, 623, 679, 1265, 1285, 1287], "optimizer_upd": [203, 204, 622, 623, 1265], "effective_grad": [203, 204, 622, 623, 1265, 1288, 1290], "effect": [203, 204, 225, 226, 247, 622, 623, 644, 645, 653, 657, 659, 668, 669, 672, 692, 733, 763, 765, 1265, 1266, 1268, 1288, 1290, 1581, 1597, 1599, 1603, 1606], "3e": [203, 204, 622, 623, 1265, 1288, 1290], "preserve_typ": [203, 204, 622, 623, 1265, 1292, 1295], "preserv": [203, 204, 251, 252, 253, 254, 622, 623, 662, 680, 692, 1265, 1292, 1295, 1431, 1447, 1449], "inform": [203, 204, 622, 623, 651, 652, 662, 669, 673, 793, 825, 827, 835, 837, 1144, 1149, 1265, 1292, 1295], "variable_data": [203, 204, 622, 623, 1265], "intern": [203, 204, 251, 252, 622, 623, 659, 662, 668, 669, 671, 672, 1265, 1302, 1305, 1488, 1489, 1498, 1499], "gradient": [204, 623, 656, 678, 679, 691, 692, 873, 896, 1266, 1268, 1269, 1271, 1272, 1273, 1274, 1276, 1277, 1279, 1281, 1282, 1284, 1285, 1287, 1288, 1290, 1291, 1292, 1295, 1296, 1297, 1298, 1301, 1302, 1305, 1306, 1484, 1485, 1486, 1487, 1617], "imag": [206, 207, 208, 625, 626, 627, 651, 654, 656, 675, 676, 678, 680, 691, 1307, 1308, 1310, 1312, 1313, 1314, 1316, 1318, 1320, 1617], "conv1d": [207, 208, 626, 627, 1307], "filter": [207, 208, 626, 627, 654, 662, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1323], "stride": [207, 208, 626, 627, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1323], "pad": [207, 208, 626, 627, 1144, 1186, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1320, 1323, 1431, 1440, 1442, 1481, 1483], "data_format": [207, 208, 626, 627, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320], "nwc": [207, 208, 626, 627, 1307, 1308, 1310, 1312], "dilat": [207, 208, 626, 627, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1320], "batch_siz": [207, 208, 217, 218, 626, 627, 636, 637, 678, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1510, 1511, 1513], "d_in": [207, 208, 626, 627, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320], "convolut": [207, 208, 626, 627, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320], "fw": [207, 208, 626, 627, 662, 664, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320], "d_out": [207, 208, 626, 627, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316], "slide": [207, 208, 626, 627, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320], "window": [207, 208, 626, 627, 652, 654, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320], "valid": [207, 208, 229, 230, 626, 627, 646, 647, 660, 662, 663, 664, 670, 793, 813, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1431, 1472, 1474, 1607, 1608, 1610, 1612, 1614], "algorithm": [207, 208, 249, 250, 626, 627, 692, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320], "per": [207, 208, 626, 627, 652, 662, 678, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320], "ncw": [207, 208, 626, 627, 1307, 1308, 1310, 1312], "wio": [207, 208, 1307, 1308, 1310], "20": [207, 208, 217, 218, 618, 619, 620, 621, 636, 637, 677, 906, 963, 965, 991, 993, 995, 997, 1043, 1045, 1103, 1105, 1119, 1121, 1144, 1214, 1238, 1240, 1328, 1341, 1343, 1372, 1374, 1398, 1401, 1510, 1515, 1517, 1532, 1541, 1544, 1546, 1549, 1581, 1582, 1584], "depthwise_conv2d": [207, 208, 626, 627, 1307, 1617], "nhwc": [207, 208, 626, 627, 1307, 1313, 1314, 1318, 1320], "h": [207, 208, 626, 627, 655, 669, 1307, 1313, 1314, 1315, 1316, 1318, 1320, 1488, 1491, 1504], "d": [207, 208, 247, 248, 626, 627, 650, 651, 655, 669, 678, 1144, 1152, 1307, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1320, 1328, 1341, 1343, 1372, 1374, 1488, 1491, 1504, 1505, 1617, 1623], "fh": [207, 208, 626, 627, 1307, 1313, 1314, 1315, 1316, 1318, 1320], "nchw": [207, 208, 626, 627, 1307, 1313, 1314, 1318, 1320], "randint": [207, 208, 217, 218, 626, 627, 636, 637, 1510, 1617], "255": [207, 208, 626, 627], "128": [207, 208, 626, 627, 793, 835, 837, 1328, 1372, 1374], "random_norm": [207, 208, 217, 218, 626, 627, 636, 637, 662, 1307, 1313, 1316, 1318, 1320, 1328, 1389, 1392, 1510, 1550, 1551, 1554], "std": [207, 208, 217, 218, 225, 226, 626, 627, 636, 637, 644, 645, 660, 1307, 1313, 1316, 1318, 1320, 1510, 1515, 1517, 1519, 1521, 1550, 1551, 1554, 1581], "64": [207, 208, 626, 627, 636, 637, 651, 662, 678, 679, 793, 824, 906, 1119, 1121, 1123, 1125, 1265, 1282, 1284, 1307, 1316, 1318, 1320, 1328, 1372, 1374, 1393, 1397, 1581, 1582, 1584, 1617], "layer": [208, 215, 216, 246, 627, 634, 635, 656, 659, 675, 676, 679, 1308, 1310, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1320, 1322, 1323, 1324, 1325, 1326, 1327, 1506, 1507, 1509, 1617], "linear_algebra": [209, 210, 628, 629, 656, 1328, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1345, 1347, 1348, 1349, 1351, 1353, 1355, 1356, 1358, 1360, 1362, 1364, 1366, 1368, 1370, 1372, 1374, 1376, 1377, 1379, 1381, 1383, 1385, 1387, 1389, 1392, 1393, 1397, 1398, 1401, 1402, 1405, 1406, 1409, 1410, 1413, 1414, 1417], "choleski": [209, 210, 628, 629, 1328], "symmetr": [209, 210, 628, 629, 669, 1328, 1329, 1331, 1345, 1347, 1348, 1414, 1417], "definit": [209, 210, 628, 629, 652, 665, 670, 677, 1328, 1329, 1331], "u": [209, 210, 247, 628, 629, 650, 651, 652, 656, 662, 664, 669, 672, 679, 692, 1328, 1329, 1331, 1389, 1392, 1617], "l": [209, 210, 618, 619, 628, 629, 652, 655, 1328, 1329, 1331, 1345, 1347, 1353, 1355, 1402, 1405], "625": [209, 210, 1328, 1329, 1331], "cross": [209, 210, 211, 212, 628, 629, 630, 631, 1328, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1617], "vif": [209, 210, 628, 629, 1328, 1333, 1335], "last": [209, 210, 211, 212, 213, 214, 223, 224, 229, 230, 233, 244, 248, 251, 252, 628, 629, 630, 631, 632, 633, 642, 643, 646, 647, 652, 660, 662, 664, 666, 673, 675, 692, 705, 722, 724, 873, 878, 1265, 1291, 1296, 1306, 1307, 1325, 1328, 1333, 1335, 1341, 1343, 1356, 1358, 1402, 1405, 1406, 1409, 1418, 1423, 1425, 1427, 1429, 1431, 1447, 1449, 1461, 1463, 1465, 1467, 1472, 1474, 1567, 1568, 1570, 1572, 1575, 1577, 1579, 1607, 1608, 1610, 1612, 1614], "det": [209, 210, 628, 629, 1328], "offset": [209, 210, 215, 216, 628, 629, 634, 635, 1328, 1341, 1343, 1402, 1405, 1506, 1507, 1509], "axis1": [209, 210, 213, 214, 628, 629, 632, 633, 1328, 1341, 1343, 1431, 1475, 1477], "axis2": [209, 210, 628, 629, 1328, 1341, 1343], "eigh": [209, 210, 628, 629, 1328], "namedtupl": [209, 210, 221, 222, 628, 629, 640, 641, 1328, 1345, 1347, 1377, 1379, 1389, 1392, 1550, 1551, 1554, 1555, 1558, 1559, 1562], "eigvalsh": [209, 210, 1328], "inv": [209, 210, 628, 629, 1328, 1617], "matmul": [209, 210, 628, 629, 656, 662, 666, 675, 1328, 1389, 1392, 1617], "matrix_norm": [209, 210, 628, 629, 1328], "ord": [209, 210, 628, 629, 1328, 1356, 1358, 1410, 1413], "fro": [209, 210, 628, 629, 1328, 1356, 1358], "matrix_rank": [209, 210, 628, 629, 1328], "rtol": [209, 210, 628, 629, 664, 1328, 1364, 1366, 1376], "matrix_transpos": [209, 210, 628, 629, 677, 1328], "outer": [209, 210, 628, 629, 1328, 1484, 1485, 1486, 1487], "pinv": [209, 210, 1328, 1617], "qr": [209, 210, 628, 629, 1328], "mode": [209, 210, 251, 252, 628, 629, 651, 652, 660, 669, 692, 730, 731, 873, 896, 906, 919, 921, 1079, 1081, 1144, 1201, 1229, 1232, 1234, 1257, 1258, 1259, 1328, 1377, 1379], "solv": [209, 210, 628, 629, 676, 691, 1328], "svd": [209, 210, 628, 629, 1328, 1393, 1397, 1617], "full_matric": [209, 210, 628, 629, 1328, 1389, 1392], "svdval": [209, 210, 628, 629, 1328], "tensordot": [209, 210, 628, 629, 1328], "trace": [209, 210, 251, 252, 628, 629, 675, 692, 1144, 1217, 1218, 1220, 1328, 1616], "vecdot": [209, 210, 628, 629, 1328], "vector_norm": [209, 210, 628, 629, 1328], "vector_to_skew_symmetric_matrix": [209, 210, 628, 629, 1328, 1617], "binary_cross_entropi": [211, 212, 630, 631, 1418], "pred": [211, 212, 630, 631, 665, 669, 672, 1418, 1419, 1421, 1423, 1425, 1427, 1429], "label": [211, 212, 630, 631, 652, 674, 675, 676, 680, 1418, 1419, 1421, 1423, 1425, 1427, 1429], "predict": [211, 212, 630, 631, 1418, 1419, 1421, 1423, 1425, 1427, 1429], "amount": [211, 212, 630, 631, 671, 873, 902, 1418, 1419, 1421, 1423, 1425, 1427, 1429], "smooth": [211, 212, 630, 631, 1418, 1419, 1421, 1423, 1425, 1427, 1429], "calcul": [211, 212, 225, 226, 247, 251, 252, 253, 254, 630, 631, 644, 645, 659, 675, 906, 907, 909, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 971, 973, 975, 977, 979, 981, 991, 993, 995, 997, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1079, 1081, 1095, 1097, 1111, 1113, 1115, 1117, 1119, 1121, 1127, 1131, 1132, 1135, 1136, 1139, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606], "binari": [211, 212, 630, 631, 906, 943, 945, 955, 957, 963, 965, 1067, 1069, 1418, 1419, 1421], "entropi": [211, 212, 630, 631, 1418, 1419, 1421, 1423, 1425, 1427, 1429], "between": [211, 212, 213, 214, 246, 251, 252, 253, 254, 630, 631, 632, 633, 657, 660, 662, 664, 665, 668, 669, 674, 676, 677, 678, 680, 691, 733, 734, 735, 793, 825, 827, 906, 935, 937, 1095, 1097, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1443, 1445, 1472, 1474, 1488, 1494, 1510, 1515, 1517, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1617], "distribut": [211, 212, 217, 218, 630, 631, 636, 637, 653, 662, 671, 692, 1307, 1322, 1418, 1419, 1421, 1423, 1425, 1427, 1429, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525], "357": [211, 212, 630, 631, 1418, 1419, 1421, 1427, 1429], "223": [211, 212, 630, 631, 1418, 1419, 1421], "cross_entropi": [211, 212, 630, 631, 665, 669, 672, 1418, 1427, 1429], "3862944": [211, 212, 1418, 1423, 1425], "sparse_cross_entropi": [211, 212, 630, 631, 1418], "logit": [211, 212, 630, 631, 1418, 1427, 1429], "spars": [211, 212, 630, 631, 1418, 1427, 1429], "loss": [212, 631, 656, 665, 678, 679, 680, 1419, 1421, 1423, 1425, 1427, 1429, 1617], "clip": [213, 214, 618, 619, 620, 621, 632, 633, 665, 669, 672, 678, 680, 906, 1071, 1073, 1075, 1077, 1144, 1155, 1157, 1159, 1161, 1431, 1617], "x_min": [213, 214, 632, 633, 680, 1431, 1432, 1434], "x_max": [213, 214, 632, 633, 680, 1431, 1432, 1434], "roll": [213, 214, 632, 633, 657, 669, 1431], "replac": [213, 214, 217, 218, 247, 251, 252, 632, 633, 636, 637, 652, 654, 660, 662, 667, 669, 670, 671, 677, 680, 692, 1144, 1227, 1228, 1431, 1432, 1434, 1510, 1511, 1513], "those": [213, 214, 246, 251, 252, 607, 608, 609, 632, 633, 651, 652, 653, 662, 667, 669, 733, 734, 735, 793, 858, 1265, 1302, 1305, 1328, 1377, 1379, 1389, 1392, 1431, 1432, 1434], "concat": [213, 214, 251, 252, 632, 633, 663, 675, 873, 896, 1144, 1186, 1431, 1617], "constant_pad": [213, 214, 632, 633, 1431], "pad_width": [213, 214, 632, 633, 1431, 1440, 1442, 1481, 1483], "expand_dim": [213, 214, 632, 633, 675, 678, 1307, 1318, 1320, 1431, 1617], "expand": [213, 214, 669, 1144, 1186, 1431, 1443, 1445], "ad": [213, 214, 247, 632, 633, 648, 649, 651, 652, 653, 656, 657, 659, 660, 662, 663, 665, 667, 668, 669, 670, 672, 675, 679, 692, 1144, 1238, 1240, 1242, 1328, 1345, 1347, 1431, 1443, 1445], "ha": [213, 214, 221, 222, 225, 226, 233, 236, 237, 246, 247, 248, 251, 252, 614, 615, 620, 621, 632, 633, 640, 641, 644, 645, 652, 658, 659, 660, 662, 663, 664, 665, 666, 667, 670, 671, 673, 675, 677, 679, 680, 691, 692, 733, 763, 765, 873, 878, 906, 907, 909, 1079, 1081, 1095, 1097, 1265, 1291, 1306, 1328, 1353, 1355, 1381, 1383, 1385, 1387, 1389, 1392, 1402, 1405, 1431, 1443, 1445, 1469, 1471, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1581, 1588, 1590, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606], "rank": [213, 214, 229, 230, 628, 629, 632, 633, 646, 647, 733, 763, 765, 1144, 1260, 1263, 1328, 1333, 1335, 1364, 1366, 1377, 1379, 1385, 1387, 1402, 1405, 1406, 1409, 1410, 1413, 1431, 1440, 1442, 1443, 1445, 1472, 1474, 1481, 1483, 1532, 1541, 1544, 1607, 1608, 1610, 1612, 1614], "flip": [213, 214, 632, 633, 663, 677, 678, 680, 906, 947, 949, 1431, 1617], "permute_dim": [213, 214, 632, 633, 1431], "reshap": [213, 214, 251, 252, 632, 633, 662, 672, 675, 677, 680, 1307, 1318, 1320, 1431, 1617], "nativeshap": [213, 214, 217, 218, 632, 633, 636, 637, 733, 740, 752, 771, 772, 786, 788, 1144, 1228, 1236, 1245, 1250, 1307, 1312, 1314, 1316, 1431, 1457, 1459, 1510, 1515, 1517, 1519, 1521, 1523, 1525], "sequenc": [213, 214, 229, 230, 249, 250, 251, 252, 253, 254, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 628, 629, 630, 631, 632, 633, 636, 637, 640, 641, 642, 643, 644, 645, 646, 647, 660, 662, 663, 670, 673, 691, 730, 731, 1144, 1152, 1221, 1431, 1457, 1459, 1461, 1463, 1465, 1467, 1472, 1474, 1488, 1504, 1581, 1585, 1587, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "origin": [213, 214, 248, 251, 252, 253, 254, 628, 629, 632, 633, 652, 663, 666, 667, 670, 675, 906, 935, 937, 1328, 1356, 1358, 1431, 1457, 1459, 1461, 1463], "In": [213, 214, 246, 248, 616, 617, 632, 633, 651, 652, 653, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 677, 678, 679, 680, 691, 692, 873, 891, 897, 901, 902, 905, 906, 919, 921, 1079, 1081, 1099, 1101, 1144, 1149, 1215, 1431, 1457, 1459, 1510, 1523, 1525, 1617], "length": [213, 214, 251, 252, 253, 254, 632, 633, 662, 664, 673, 678, 733, 734, 735, 763, 765, 1328, 1389, 1392, 1393, 1397, 1431, 1457, 1459], "remain": [213, 214, 632, 633, 652, 656, 660, 692, 906, 919, 921, 1079, 1081, 1099, 1101, 1431, 1457, 1459, 1488, 1494], "never": [213, 214, 632, 633, 652, 662, 1431, 1457, 1459], "rais": [213, 214, 217, 218, 229, 230, 247, 251, 252, 632, 633, 636, 637, 646, 647, 652, 658, 672, 673, 675, 677, 793, 804, 806, 906, 991, 993, 1095, 1097, 1144, 1153, 1199, 1215, 1230, 1242, 1256, 1265, 1291, 1296, 1306, 1328, 1353, 1355, 1360, 1362, 1406, 1409, 1431, 1457, 1459, 1469, 1471, 1472, 1474, 1510, 1515, 1517, 1519, 1521, 1523, 1525, 1532, 1541, 1544, 1581, 1585, 1587, 1591, 1593, 1607, 1608, 1610, 1612, 1614], "valueerror": [213, 214, 632, 633, 1431, 1457, 1459, 1469, 1471], "would": [213, 214, 247, 616, 617, 632, 633, 651, 652, 654, 655, 657, 659, 660, 661, 662, 666, 667, 668, 669, 672, 674, 675, 677, 679, 680, 692, 705, 722, 724, 873, 897, 901, 1431, 1457, 1459, 1617], "necessari": [213, 214, 632, 633, 651, 652, 660, 662, 666, 669, 672, 1431, 1457, 1459], "reus": [213, 214, 632, 633, 662, 1431, 1457, 1459], "exist": [213, 214, 246, 247, 251, 252, 632, 633, 651, 653, 654, 658, 659, 660, 661, 662, 663, 665, 666, 667, 672, 675, 692, 1144, 1171, 1431, 1457, 1459, 1616], "memori": [213, 214, 632, 633, 671, 672, 675, 690, 692, 873, 877, 891, 896, 902, 905, 1307, 1325, 1431, 1457, 1459, 1617], "buffer": [213, 214, 632, 633, 692, 1431, 1457, 1459], "possibl": [213, 214, 247, 632, 633, 650, 651, 652, 653, 659, 660, 662, 669, 670, 672, 675, 678, 691, 692, 1144, 1221, 1431, 1457, 1459, 1581, 1585, 1587, 1591, 1593], "shift": [213, 214, 612, 613, 632, 633, 652, 657, 660, 906, 951, 953, 959, 961, 1431, 1461, 1463], "toward": [213, 214, 632, 633, 651, 675, 1431, 1461, 1463, 1617, 1623], "larger": [213, 214, 225, 226, 632, 633, 644, 645, 662, 793, 825, 827, 1431, 1432, 1434, 1461, 1463, 1581, 1597, 1599, 1603, 1606], "smaller": [213, 214, 632, 633, 652, 675, 1431, 1432, 1434, 1461, 1463, 1581, 1594, 1596, 1600, 1602], "flatten": [213, 214, 219, 220, 221, 222, 628, 629, 632, 633, 638, 639, 640, 641, 1144, 1186, 1328, 1372, 1374, 1410, 1413, 1431, 1453, 1455, 1461, 1463, 1532, 1533, 1535, 1537, 1539, 1550, 1551, 1554, 1555, 1558, 1563, 1566], "restor": [213, 214, 632, 633, 1431, 1461, 1463], "split": [213, 214, 251, 252, 632, 633, 650, 652, 674, 675, 692, 873, 894, 895, 896, 1144, 1221, 1431, 1617], "num_or_size_split": [213, 214, 251, 252, 632, 633, 675, 1431, 1465, 1467], "with_remaind": [213, 214, 251, 252, 632, 633, 1431, 1465, 1467], "sub": [213, 214, 251, 252, 607, 610, 611, 618, 619, 632, 633, 652, 653, 655, 662, 663, 669, 677, 678, 679, 1328, 1341, 1343, 1431, 1465, 1467, 1484, 1485, 1486, 1487, 1617], "mani": [213, 214, 246, 247, 248, 251, 252, 632, 633, 651, 652, 653, 657, 659, 660, 662, 664, 665, 667, 668, 669, 670, 671, 672, 673, 675, 677, 678, 692, 1431, 1465, 1467], "dimension": [213, 214, 219, 220, 225, 226, 229, 230, 251, 252, 628, 629, 632, 633, 644, 645, 646, 647, 675, 733, 734, 735, 745, 746, 763, 765, 1328, 1333, 1335, 1337, 1339, 1353, 1355, 1364, 1366, 1372, 1374, 1376, 1406, 1409, 1410, 1413, 1431, 1465, 1467, 1532, 1533, 1535, 1537, 1539, 1541, 1544, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "tensor": [213, 214, 217, 218, 233, 244, 246, 251, 252, 618, 619, 632, 633, 636, 637, 656, 657, 658, 663, 665, 666, 668, 670, 671, 672, 675, 677, 678, 680, 692, 733, 757, 758, 760, 761, 793, 820, 822, 858, 906, 943, 945, 1055, 1057, 1071, 1073, 1075, 1077, 1144, 1224, 1227, 1228, 1307, 1322, 1325, 1328, 1398, 1401, 1431, 1465, 1467, 1510, 1511, 1513, 1532, 1541, 1544, 1616, 1617], "doe": [213, 214, 247, 251, 252, 607, 608, 609, 632, 633, 652, 654, 655, 656, 657, 659, 660, 662, 663, 664, 665, 666, 670, 672, 675, 677, 678, 692, 906, 963, 965, 1144, 1215, 1431, 1465, 1467, 1616], "evenli": [213, 214, 251, 252, 632, 633, 733, 734, 735, 757, 758, 760, 761, 1431, 1465, 1467], "entri": [213, 214, 251, 252, 632, 633, 733, 757, 758, 760, 761, 1431, 1465, 1467, 1488, 1501], "squeez": [213, 214, 632, 633, 1431, 1617], "stack": [213, 214, 251, 252, 628, 629, 632, 633, 675, 733, 778, 781, 782, 785, 1328, 1337, 1339, 1341, 1343, 1345, 1347, 1348, 1349, 1351, 1353, 1355, 1360, 1362, 1364, 1366, 1368, 1370, 1376, 1377, 1379, 1389, 1392, 1393, 1397, 1402, 1405, 1431, 1488, 1489, 1498, 1499, 1617], "swapax": [213, 214, 632, 633, 1431], "axis0": [213, 214, 632, 633, 1431, 1475, 1477], "tile": [213, 214, 632, 633, 1431, 1617], "rep": [213, 214, 632, 633, 1431, 1478, 1480], "zero_pad": [213, 214, 632, 633, 1431, 1617], "manipul": [214, 246, 633, 656, 675, 680, 691, 1432, 1434, 1436, 1438, 1440, 1442, 1443, 1445, 1447, 1449, 1450, 1452, 1453, 1455, 1457, 1459, 1461, 1463, 1465, 1467, 1469, 1471, 1472, 1474, 1475, 1477, 1478, 1480, 1481, 1483], "layer_norm": [215, 216, 634, 635, 1506], "normalized_idx": [215, 216, 634, 635, 1506, 1507, 1509], "scale": [215, 216, 622, 623, 634, 635, 663, 873, 894, 895, 1265, 1285, 1287, 1307, 1322, 1326, 1327, 1506, 1507, 1509], "new_std": [215, 216, 634, 635, 1506, 1507, 1509], "normal": [215, 216, 217, 218, 634, 635, 636, 637, 678, 1431, 1472, 1474, 1506, 1507, 1509, 1510, 1519, 1521], "small": [215, 216, 628, 629, 634, 635, 660, 664, 665, 675, 679, 692, 906, 1079, 1081, 1328, 1364, 1366, 1376, 1506, 1507, 1509], "constant": [215, 216, 634, 635, 656, 665, 679, 680, 692, 1431, 1440, 1442, 1488, 1494, 1506, 1507, 1509], "_min_bas": [215, 216, 634, 635, 1144, 1242, 1506, 1507, 1509], "learnabl": [215, 216, 634, 635, 680, 1506, 1507, 1509], "gamma": [215, 216, 634, 635, 1506, 1507, 1509], "post": [215, 216, 634, 635, 651, 680, 1506, 1507, 1509, 1617, 1623], "multipl": [215, 216, 225, 226, 229, 230, 248, 251, 252, 618, 619, 620, 621, 622, 623, 628, 629, 632, 633, 634, 635, 644, 645, 646, 647, 652, 660, 665, 669, 675, 692, 906, 1071, 1073, 1075, 1077, 1079, 1081, 1144, 1145, 1147, 1221, 1265, 1266, 1268, 1274, 1276, 1277, 1279, 1282, 1284, 1288, 1290, 1292, 1295, 1328, 1329, 1331, 1349, 1351, 1431, 1432, 1434, 1443, 1445, 1461, 1463, 1465, 1467, 1506, 1507, 1509, 1532, 1533, 1535, 1537, 1539, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "beta": [215, 216, 634, 635, 1506, 1507, 1509], "deviat": [215, 216, 217, 218, 248, 634, 635, 636, 637, 662, 1506, 1507, 1509, 1510, 1519, 1521, 1581, 1597, 1599], "0976": [215, 216, 1506, 1507, 1509], "3452": [215, 216, 1506, 1507, 1509], "2740": [215, 216, 1506, 1507, 1509], "1047": [215, 216, 1506, 1507, 1509], "5886": [215, 216, 1506, 1507, 1509], "2732": [215, 216, 1506, 1507, 1509], "7696": [215, 216, 1506, 1507, 1509], "7024": [215, 216, 1506, 1507, 1509], "2518": [215, 216, 1506, 1507, 1509], "576": [215, 216, 1506, 1507, 1509], "292": [215, 216, 1506, 1507, 1509], "581": [215, 216, 1506, 1507, 1509], "891": [215, 216, 705, 718, 720, 1506, 1507, 1509], "579": [215, 216, 1506, 1507, 1509], "931": [215, 216, 1506, 1507, 1509], "multinomi": [217, 218, 636, 637, 1510], "population_s": [217, 218, 636, 637, 1510, 1511, 1513], "num_sampl": [217, 218, 636, 637, 1510, 1511, 1513], "unnorm": [217, 218, 636, 637, 662, 1510, 1511, 1513], "probabl": [217, 218, 248, 636, 637, 662, 1307, 1322, 1510, 1511, 1513], "popul": [217, 218, 225, 226, 251, 252, 636, 637, 644, 645, 662, 670, 671, 675, 1510, 1511, 1513, 1581, 1597, 1599, 1603, 1606], "uniform": [217, 218, 636, 637, 679, 1510, 1511, 1513, 1515, 1517, 1523, 1525], "batch_shap": [217, 218, 636, 637, 675, 677, 733, 745, 746, 1144, 1224, 1307, 1325, 1326, 1327, 1328, 1414, 1417, 1510, 1511, 1513], "draw": [217, 218, 636, 637, 662, 664, 1510, 1511, 1513, 1519, 1521, 1523, 1525], "sampl": [217, 218, 225, 226, 636, 637, 644, 645, 662, 1307, 1322, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1581, 1597, 1599, 1603, 1606], "independ": [217, 218, 636, 637, 660, 661, 667, 675, 680, 1328, 1333, 1335, 1385, 1387, 1510, 1511, 1513], "onc": [217, 218, 248, 636, 637, 651, 652, 660, 662, 669, 670, 671, 675, 678, 692, 873, 896, 1328, 1349, 1351, 1389, 1392, 1510, 1511, 1513], "thei": [217, 218, 251, 252, 636, 637, 651, 652, 653, 655, 656, 660, 662, 665, 667, 669, 670, 671, 672, 673, 677, 678, 679, 680, 692, 793, 857, 1484, 1485, 1486, 1510, 1511, 1513, 1617], "ve": [217, 218, 636, 637, 652, 674, 677, 1510, 1511, 1513, 1616, 1617], "drawn": [217, 218, 636, 637, 662, 1510, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525], "parameter": [217, 218, 636, 637, 1510, 1519, 1521, 1523, 1525], "high": [217, 218, 248, 636, 637, 653, 678, 1510, 1515, 1517, 1523, 1525, 1616], "highest": [217, 218, 636, 637, 1510, 1515, 1517], "g": [217, 218, 248, 607, 608, 609, 636, 637, 655, 662, 669, 675, 692, 793, 795, 859, 861, 873, 875, 1488, 1491, 1504, 1510, 1515, 1517, 1519, 1521, 1523, 1525, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1581, 1585, 1587, 1591, 1593, 1594, 1596, 1600, 1602, 1616], "low": [217, 218, 636, 637, 675, 1510, 1515, 1517, 1523, 1525], "els": [217, 218, 636, 637, 652, 653, 656, 658, 664, 665, 666, 672, 675, 677, 679, 680, 692, 793, 819, 1144, 1153, 1171, 1184, 1488, 1498, 1510, 1515, 1517, 1519, 1521, 1523, 1525], "except": [217, 218, 229, 230, 251, 252, 636, 637, 646, 647, 652, 658, 659, 668, 672, 673, 675, 677, 692, 793, 804, 806, 1144, 1153, 1171, 1215, 1256, 1328, 1376, 1431, 1436, 1438, 1472, 1474, 1510, 1515, 1517, 1519, 1521, 1523, 1525, 1532, 1541, 1544, 1607, 1608, 1610, 1612, 1614], "singl": [217, 218, 248, 251, 252, 636, 637, 652, 656, 657, 660, 662, 665, 667, 669, 672, 675, 678, 679, 680, 692, 1144, 1255, 1264, 1510, 1515, 1517, 1519, 1521, 1523, 1525, 1550, 1551, 1554], "half": [217, 218, 636, 637, 733, 734, 735, 1510, 1515, 1517, 1523, 1525], "open": [217, 218, 246, 247, 248, 636, 637, 650, 651, 652, 654, 659, 691, 733, 734, 735, 1510, 1515, 1517, 1523, 1525, 1617], "interv": [217, 218, 229, 230, 636, 637, 646, 647, 652, 733, 734, 735, 757, 758, 760, 761, 1328, 1406, 1409, 1431, 1432, 1434, 1472, 1474, 1510, 1515, 1517, 1523, 1525, 1607, 1608, 1610, 1612, 1614], "int8": [217, 218, 636, 637, 662, 670, 793, 813, 835, 837, 848, 850, 872], "int16": [217, 218, 636, 637, 662, 670, 675, 793, 808, 810, 835, 837, 848, 850, 1581, 1594, 1596, 1600, 1602], "46": [217, 218, 636, 637, 906, 1043, 1045, 1107, 1109, 1488, 1490], "44": [217, 218, 636, 637, 906, 927, 929, 1103, 1105, 1119, 1121, 1123, 1125, 1328, 1372, 1374, 1532, 1546, 1549, 1581, 1582, 1584], "72": [217, 218, 622, 623, 906, 991, 993, 995, 997, 1265, 1274, 1276, 1328, 1372, 1374, 1581, 1582, 1584], "235": [217, 218], "27": [217, 218, 636, 637, 906, 963, 965, 975, 977, 1115, 1117, 1119, 1121, 1144, 1214, 1307, 1327, 1328, 1353, 1355, 1372, 1374, 1488, 1490, 1581, 1582, 1584], "22": [217, 218, 636, 637, 669, 906, 963, 965, 1144, 1210, 1212, 1214, 1328, 1341, 1343, 1372, 1374, 1488, 1505, 1532, 1546, 1549, 1581, 1582, 1584], "float16": [217, 218, 636, 637, 662, 663, 670, 793, 813, 825, 827, 832, 833, 872], "26": [217, 218, 620, 621, 622, 623, 636, 637, 906, 963, 965, 979, 981, 1115, 1117, 1144, 1210, 1212, 1265, 1266, 1268, 1307, 1318, 1320, 1328, 1341, 1343, 1372, 1374, 1398, 1401, 1488, 1490, 1581, 1582, 1584], "49": [217, 218, 705, 722, 724, 906, 1119, 1121, 1581, 1582, 1584], "807": [217, 218], "21": [217, 218, 618, 619, 636, 637, 793, 835, 837, 906, 935, 937, 963, 965, 1144, 1165, 1167, 1328, 1341, 1343, 1372, 1374, 1418, 1427, 1429, 1488, 1494, 1581, 1582, 1584], "random_uniform": [217, 218, 636, 637, 662, 671, 679, 1510, 1617], "boundari": [217, 218, 636, 637, 1510, 1523, 1525], "86": [217, 218, 636, 637, 1265, 1266, 1268], "89": [217, 218, 636, 637, 662, 793, 835, 837, 906, 963, 965, 1328, 1398, 1401, 1581, 1600, 1602], "06": [217, 218, 618, 619, 622, 623, 662, 678, 793, 825, 827, 1265, 1282, 1284], "53": [217, 218, 618, 619, 873, 902, 1265, 1273, 1281, 1297], "shuffl": [217, 218, 251, 252, 636, 637, 1510, 1617], "object": [217, 218, 233, 251, 252, 253, 254, 607, 610, 611, 616, 617, 618, 619, 636, 637, 662, 663, 667, 669, 677, 680, 733, 748, 750, 793, 812, 825, 827, 858, 873, 897, 901, 1265, 1488, 1491, 1493, 1495, 1496, 1497, 1502, 1503, 1504, 1505, 1510, 1528, 1530], "random": [218, 251, 252, 637, 656, 671, 680, 691, 1511, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1527, 1528, 1530, 1617], "argmax": [219, 220, 638, 639, 1532, 1617], "left": [219, 220, 223, 224, 628, 629, 638, 639, 642, 643, 651, 652, 660, 670, 906, 951, 953, 1328, 1345, 1347, 1356, 1358, 1389, 1392, 1532, 1533, 1535, 1567, 1572, 1575, 1617], "correctli": [219, 220, 628, 629, 638, 639, 651, 653, 657, 660, 662, 664, 669, 670, 672, 673, 679, 692, 1328, 1356, 1358, 1532, 1533, 1535], "insert": [219, 220, 638, 639, 1431, 1443, 1445, 1488, 1493, 1532, 1533, 1535, 1567, 1572, 1575], "appropri": [219, 220, 231, 232, 638, 639, 648, 649, 652, 662, 664, 667, 906, 919, 921, 1079, 1081, 1532, 1533, 1535], "occurr": [219, 220, 1532, 1533, 1535, 1537, 1539, 1550, 1551, 1554], "argmin": [219, 220, 638, 639, 1532, 1617], "singleton": [219, 220, 225, 226, 229, 230, 628, 629, 638, 639, 644, 645, 646, 647, 675, 1328, 1410, 1413, 1431, 1469, 1471, 1532, 1537, 1539, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "accordingli": [219, 220, 225, 226, 229, 230, 628, 629, 638, 639, 644, 645, 646, 647, 663, 673, 675, 733, 763, 765, 906, 995, 997, 1043, 1045, 1328, 1410, 1413, 1532, 1537, 1539, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "across": [219, 220, 251, 252, 638, 639, 653, 657, 660, 662, 665, 669, 670, 873, 894, 895, 1144, 1151, 1152, 1488, 1494, 1532, 1537, 1539], "nonzero": [219, 220, 638, 639, 906, 919, 921, 1079, 1081, 1532], "yield": [219, 220, 673, 1532, 1546, 1549], "choos": [219, 220, 616, 617, 651, 652, 676, 680, 873, 897, 901, 906, 1059, 1061, 1063, 1065, 1532, 1546, 1549, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1581, 1585, 1587, 1588, 1590, 1591, 1593], "condit": [219, 220, 638, 639, 660, 691, 730, 731, 1488, 1498, 1499, 1532, 1546, 1549], "unique_al": [221, 222, 640, 641, 1550], "unique_count": [221, 222, 640, 641, 1550], "uniqu": [221, 222, 246, 640, 641, 662, 663, 664, 665, 669, 692, 1484, 1485, 1486, 1487, 1488, 1494, 1550, 1551, 1554, 1555, 1558, 1559, 1562, 1563, 1566], "count": [221, 222, 229, 230, 640, 641, 646, 647, 660, 678, 873, 890, 1328, 1406, 1409, 1431, 1447, 1449, 1550, 1551, 1554, 1555, 1558, 1607, 1608, 1610, 1612, 1614], "field": [221, 222, 640, 641, 691, 1328, 1345, 1347, 1377, 1379, 1389, 1392, 1550, 1551, 1554, 1555, 1558], "name": [221, 222, 640, 641, 651, 652, 653, 654, 656, 657, 658, 659, 660, 662, 663, 664, 670, 673, 675, 678, 680, 730, 731, 1144, 1149, 1150, 1328, 1345, 1347, 1377, 1379, 1389, 1392, 1550, 1551, 1554, 1555, 1558], "uc": [221, 222], "unique_invers": [221, 222, 640, 641, 1550], "unique_valu": [221, 222, 640, 641, 1550], "argsort": [223, 224, 642, 643, 1567], "descend": [223, 224, 642, 643, 1328, 1389, 1392, 1393, 1397, 1567, 1568, 1570, 1577, 1579], "stabl": [223, 224, 620, 621, 642, 643, 651, 675, 692, 1144, 1199, 1200, 1230, 1231, 1238, 1240, 1242, 1567, 1568, 1570, 1577, 1579], "ascend": [223, 224, 642, 643, 1567, 1568, 1570], "stabil": [223, 224, 642, 643, 1144, 1238, 1240, 1242, 1567, 1568, 1570, 1577, 1579], "maintain": [223, 224, 246, 642, 643, 652, 1567, 1568, 1570, 1577, 1579], "searchsort": [223, 224, 642, 643, 1567], "v": [223, 224, 642, 643, 651, 652, 662, 675, 678, 679, 680, 1307, 1327, 1567, 1572, 1575, 1617], "side": [223, 224, 642, 643, 651, 652, 1567, 1572, 1575], "sorter": [223, 224, 642, 643, 1567, 1572, 1575], "sort": [224, 251, 252, 253, 254, 643, 656, 1328, 1345, 1347, 1389, 1392, 1393, 1397, 1568, 1570, 1572, 1575], "einsum": [225, 226, 644, 645, 1581], "equat": [225, 226, 644, 645, 1328, 1385, 1387, 1581, 1582, 1584], "correct": [225, 226, 644, 645, 652, 653, 655, 657, 665, 669, 670, 671, 673, 793, 867, 1431, 1432, 1434, 1581, 1597, 1599, 1603, 1606, 1617], "var": [225, 226, 644, 645, 648, 649, 660, 675, 1484, 1485, 1486, 1581], "let": [225, 226, 248, 658, 659, 660, 662, 663, 664, 669, 670, 671, 675, 677, 678, 679, 680, 1581, 1588, 1590, 1597, 1599, 1600, 1602, 1603, 1606, 1617], "over": [225, 226, 229, 230, 231, 232, 233, 236, 246, 248, 614, 615, 628, 629, 644, 645, 646, 647, 648, 649, 651, 652, 659, 660, 662, 666, 672, 675, 677, 692, 1328, 1356, 1358, 1398, 1401, 1406, 1409, 1410, 1413, 1506, 1507, 1509, 1510, 1523, 1525, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "varianc": [225, 226, 644, 645, 1581, 1603, 1606], "x_i": [225, 226, 618, 619, 659, 906, 907, 909, 911, 913, 915, 917, 923, 925, 927, 929, 931, 933, 947, 949, 967, 969, 971, 973, 975, 977, 991, 993, 995, 997, 999, 1001, 1015, 1017, 1019, 1021, 1023, 1025, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1059, 1061, 1083, 1085, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1132, 1135, 1136, 1139, 1140, 1143, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1597, 1599, 1600, 1602, 1603, 1606], "propag": [225, 226, 906, 959, 961, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1597, 1599, 1600, 1602, 1603, 1606], "By": [225, 226, 229, 230, 644, 645, 646, 647, 660, 663, 665, 672, 675, 679, 680, 1144, 1165, 1167, 1169, 1328, 1406, 1409, 1431, 1453, 1455, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "entir": [225, 226, 229, 230, 247, 248, 251, 252, 644, 645, 646, 647, 652, 660, 661, 662, 668, 669, 672, 675, 678, 679, 680, 692, 873, 896, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "degre": [225, 226, 644, 645, 1581, 1597, 1599, 1603, 1606], "freedom": [225, 226, 644, 645, 666, 1581, 1597, 1599, 1603, 1606], "adjust": [225, 226, 233, 244, 644, 645, 1581, 1597, 1599, 1603, 1606], "total": [225, 226, 248, 251, 252, 253, 254, 644, 645, 650, 652, 660, 662, 671, 678, 679, 692, 873, 902, 1532, 1541, 1544, 1581, 1597, 1599, 1603, 1606], "choic": [225, 226, 248, 644, 645, 651, 672, 678, 1581, 1597, 1599, 1603, 1606], "constitut": [225, 226, 644, 645, 665, 675, 1581, 1597, 1599, 1603, 1606], "unbias": [225, 226, 644, 645, 1581, 1603, 1606], "commonli": [225, 226, 644, 645, 665, 1581, 1597, 1599, 1603, 1606], "refer": [225, 226, 229, 230, 622, 623, 644, 645, 646, 647, 651, 652, 657, 662, 663, 664, 665, 670, 692, 733, 745, 746, 906, 995, 997, 1043, 1045, 1265, 1266, 1268, 1269, 1271, 1328, 1406, 1409, 1414, 1417, 1581, 1597, 1599, 1603, 1606, 1607, 1608, 1610, 1612, 1614, 1616], "bessel": [225, 226, 644, 645, 1581, 1597, 1599, 1603, 1606], "wa": [225, 226, 229, 230, 233, 244, 247, 249, 250, 251, 252, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 628, 629, 630, 631, 632, 633, 636, 637, 640, 641, 642, 643, 644, 645, 646, 647, 652, 660, 675, 677, 1144, 1256, 1488, 1501, 1581, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606, 1607, 1608, 1610, 1612, 1614], "6666665": [225, 226, 678, 1581, 1603, 1606], "08": [225, 226, 636, 637, 651, 662, 906, 927, 929, 995, 997, 1307, 1327], "667": [225, 226, 620, 621, 906, 979, 981, 1144, 1238, 1240, 1550, 1551, 1554, 1581, 1603, 1606], "statist": [226, 645, 648, 649, 656, 662, 670, 1582, 1584, 1585, 1587, 1588, 1590, 1591, 1593, 1594, 1596, 1597, 1599, 1600, 1602, 1603, 1606], "logic": [229, 230, 646, 647, 662, 667, 668, 670, 671, 677, 873, 888, 906, 1055, 1057, 1059, 1061, 1063, 1065, 1607, 1608, 1610, 1612, 1614, 1617], "AND": [229, 230, 646, 647, 906, 943, 945, 1055, 1057, 1607, 1608, 1610], "backward": [229, 230, 646, 647, 692, 906, 1099, 1101, 1328, 1406, 1409, 1607, 1608, 1610, 1612, 1614], "invalid": [229, 230, 646, 647, 663, 670, 673, 1328, 1406, 1409, 1607, 1608, 1610, 1612, 1614], "OR": [229, 230, 646, 647, 651, 652, 654, 906, 955, 957, 1063, 1065, 1607, 1612, 1614], "util": [230, 647, 656, 671, 873, 883, 1608, 1610, 1612, 1614], "add_ivy_array_instance_method": 231, "cl": [231, 232, 648, 649], "modul": [231, 232, 233, 236, 237, 248, 251, 252, 253, 254, 648, 649, 651, 654, 662, 663, 665, 666, 668, 672, 673, 675, 676, 678, 680, 691, 692, 1144, 1222, 1510, 1511, 1513, 1519, 1521, 1617], "to_ignor": [231, 232, 648, 649, 1488, 1499], "loop": [231, 232, 648, 649, 666, 673, 692, 1484, 1485, 1486, 1487], "_wrap_funct": [231, 232, 648, 649, 665, 667], "we": [231, 232, 233, 237, 238, 244, 245, 246, 247, 248, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 665, 667, 668, 669, 670, 672, 673, 675, 676, 677, 678, 679, 680, 691, 692, 1265, 1272, 1273, 1281, 1297, 1616, 1617, 1623], "want": [231, 232, 233, 237, 247, 648, 649, 650, 651, 652, 661, 662, 667, 678, 679, 680, 692], "don": [231, 232, 248, 648, 649, 651, 652, 653, 662, 670, 679, 692], "As": [231, 232, 246, 648, 649, 651, 652, 657, 658, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 675, 677, 678, 679, 692, 1550, 1551, 1554, 1555, 1558, 1563, 1566], "shown": [231, 232, 251, 252, 648, 649, 652, 653, 657, 658, 660, 662, 663, 673, 675, 677, 692, 906, 935, 937, 943, 945, 963, 965, 975, 977, 1023, 1025, 1136, 1139, 1328, 1333, 1335, 1337, 1339, 1431, 1447, 1449, 1550, 1551, 1554, 1567, 1568, 1570], "our": [231, 232, 246, 247, 648, 649, 650, 651, 652, 653, 656, 660, 661, 662, 663, 664, 669, 670, 673, 674, 677, 678, 679, 680, 692, 1617], "toi": [231, 232, 648, 649], "arrayexampl": [231, 232], "import": [231, 232, 233, 236, 247, 648, 649, 652, 653, 656, 658, 659, 660, 661, 663, 664, 666, 668, 669, 670, 671, 672, 673, 675, 677, 678, 680, 692, 873, 893, 894, 1617, 1623], "pass": [231, 232, 233, 236, 251, 252, 253, 254, 607, 608, 609, 648, 649, 652, 653, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 692, 793, 813, 858, 873, 896, 906, 935, 937, 1144, 1154, 1215, 1265, 1302, 1305, 1484, 1485, 1486], "hasattr": [231, 232, 648, 649, 658], "backend_handl": [233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 675, 1617], "contextmanag": 233, "choose_random_backend": 233, "clear_backend_stack": 233, "current_backend": [233, 656, 663, 665, 675], "current": [233, 236, 237, 244, 248, 251, 252, 253, 254, 651, 652, 653, 654, 664, 665, 667, 669, 671, 675, 680, 691, 692, 793, 819, 829, 830, 832, 833, 839, 871, 872, 873, 883, 884, 885, 886, 890, 892, 1144, 1187, 1188, 1197, 1198, 1201, 1209, 1216, 1223, 1225, 1237, 1265, 1291, 1306, 1488, 1489, 1498, 1499, 1617], "prioriti": [233, 236, 251, 252, 652, 672], "global_backend": [233, 236], "try": [233, 236, 245, 247, 248, 251, 252, 651, 652, 653, 654, 668, 669, 673, 675, 677, 692, 1144, 1256, 1617], "np": [233, 236, 620, 621, 657, 658, 662, 664, 668, 670, 671, 672, 675, 677, 678, 680, 906, 1019, 1021, 1023, 1025, 1144, 1238, 1240, 1488, 1494, 1616, 1617], "py": [233, 236, 237, 651, 652, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 670, 671, 673, 675, 677, 679, 680, 1510, 1511, 1513, 1519, 1521], "set_backend": [233, 236, 237, 244, 661, 665, 666, 667, 670, 675, 677, 680, 793, 829, 830, 832, 833, 873, 893, 894, 1617], "get_backend": [233, 665, 666], "isn": [233, 237, 652, 667, 678, 692], "associ": [233, 237, 628, 629, 652, 662, 664, 665, 667, 692, 906, 919, 921, 1079, 1081, 1328, 1364, 1366, 1376, 1414, 1417], "retriev": [233, 237, 652, 1144, 1149], "torch": [233, 237, 244, 652, 656, 657, 658, 662, 663, 664, 665, 666, 668, 670, 671, 672, 675, 677, 678, 680, 692, 730, 731, 793, 829, 830, 832, 833, 848, 850, 873, 893, 894, 1328, 1393, 1397, 1616, 1617], "tensorflow": [233, 237, 244, 247, 248, 652, 653, 657, 658, 661, 662, 663, 664, 670, 671, 672, 675, 680, 692, 1616, 1617], "mxnet": [233, 237, 247, 653, 670, 671, 672, 1617], "doesn": [233, 237, 651, 654, 660, 662, 670, 675, 692], "matter": [233, 237, 246, 660], "ivy_np": [233, 237, 662, 664], "ivy_jax": [233, 237, 664], "subsequ": [233, 238, 651, 657, 660, 662, 665, 668, 672, 679], "call": [233, 238, 244, 247, 253, 254, 607, 608, 609, 614, 615, 652, 654, 656, 657, 659, 660, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 675, 677, 678, 679, 680, 692, 873, 874, 896, 1144, 1226, 1233, 1256, 1265, 1272, 1273, 1281, 1488, 1489, 1494, 1498, 1499], "Or": [233, 238, 678], "jaxlib": [233, 238, 651, 657, 658, 670, 671, 675, 677], "xla_extens": [233, 238, 657, 658, 670, 671, 675, 677], "devicearrai": [233, 238, 675, 677], "try_import_ivy_jax": 233, "warn": [233, 239, 240, 241, 242, 243], "try_import_ivy_mxnet": 233, "try_import_ivy_numpi": 233, "try_import_ivy_tf": 233, "try_import_ivy_torch": 233, "unset_backend": [233, 666], "unset": [233, 244, 666, 675], "previous": [233, 244, 651, 654, 662, 665, 675, 1144, 1154], "henc": [233, 244, 662, 669, 1550, 1551, 1554, 1555, 1558, 1563, 1566], "here": [233, 244, 651, 652, 653, 656, 657, 658, 660, 662, 663, 664, 669, 675, 676, 677, 678, 679, 680, 691, 692], "howev": [233, 244, 247, 651, 652, 653, 657, 658, 659, 660, 662, 663, 665, 666, 668, 669, 670, 671, 672, 677, 678, 679, 680, 692], "befor": [233, 244, 251, 252, 651, 652, 653, 657, 659, 661, 662, 667, 668, 670, 671, 672, 675, 678, 692, 873, 874, 896, 906, 1140, 1143, 1307, 1326, 1327, 1484, 1485, 1486, 1488, 1500, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1581, 1594, 1596, 1600, 1602], "becom": [233, 244, 246, 248, 652, 660, 669, 692, 1431, 1432, 1434], "swap": [233, 244, 1431, 1475, 1477], "python": [233, 244, 245, 246, 247, 607, 608, 609, 651, 652, 654, 662, 673, 675, 677, 678, 692, 733, 734, 735, 873, 891, 905, 906, 1099, 1101, 1616, 1617, 1623], "op": [233, 244, 656, 675, 692], "eagertensor": [233, 244], "ml": [245, 247, 248, 650, 674, 675, 676, 678, 679, 680, 691, 1617, 1623], "explos": [245, 247, 1617], "huge": [245, 247, 678, 1617], "tool": [245, 248, 652, 660, 676, 680, 691, 692, 1617], "explod": [245, 246, 1617], "onto": [245, 246, 1488, 1494, 1500, 1617], "why": [245, 247, 652, 657, 672, 677, 1617], "unifi": [245, 247, 251, 252, 668, 675, 692, 873, 896, 1617], "them": [245, 246, 247, 248, 653, 655, 662, 664, 666, 667, 668, 669, 675, 677, 678, 679, 692, 1616, 1617], "collabor": [245, 246, 247, 1617], "consortium": [245, 247, 1617, 1623], "project": [246, 247, 248, 651, 652, 654, 656, 662, 666, 679, 691, 692, 1510, 1511, 1513, 1519, 1521], "grown": 246, "consider": [246, 657, 660], "recent": [246, 247, 651, 652, 662], "year": [246, 248, 692, 1617], "especi": [246, 651], "deep": [246, 251, 252, 650, 652, 653, 664, 669, 674, 677, 678, 1617], "seen": [246, 247, 660, 662, 675, 677, 678], "rapidli": 246, "increas": [246, 656, 1431, 1440, 1442, 1481, 1483, 1488, 1500], "github": [246, 652, 653, 659, 660, 662], "repo": [246, 247, 248, 651, 652, 661, 675, 677, 678, 679, 680, 691, 1617, 1623], "term": [246, 652, 669, 675, 1307, 1325, 1616], "These": [246, 247, 248, 652, 653, 657, 659, 660, 662, 663, 664, 665, 669, 670, 672, 675, 676, 678, 679, 680, 692, 1328, 1345, 1347, 1616, 1617, 1623], "written": [246, 651, 656, 657, 659, 662, 663, 668, 672, 675, 677, 680, 692], "while": [246, 247, 251, 252, 253, 254, 651, 652, 660, 662, 666, 672, 673, 677, 679, 680, 692, 793, 858, 906, 1059, 1061, 1063, 1065, 1550, 1551, 1554, 1581, 1588, 1590], "wonder": [246, 248, 677], "thing": [246, 247, 248, 651, 652, 653, 662, 666, 677, 678], "research": [246, 691], "develop": [246, 247, 248, 650, 651, 652, 653, 691, 692, 1616, 1617], "consid": [246, 247, 656, 665, 676, 677, 678, 906, 1059, 1061, 1063, 1065, 1550, 1551, 1554, 1555, 1558, 1563, 1566], "speed": [246, 662], "evolv": 246, "sharabl": 246, "significantli": 246, "hinder": [246, 657], "outdat": 246, "month": 246, "rigor": [246, 662], "newest": 246, "version": [246, 247, 248, 651, 652, 659, 663, 664, 670, 675, 1328, 1345, 1347, 1617], "softwar": [246, 247, 651, 652], "pipelin": [246, 668, 680, 1616], "rapid": [246, 247, 651], "prototyp": 246, "vital": [246, 680], "signific": [246, 247, 692], "bottleneck": 246, "futur": [246, 248, 651, 652, 656, 677, 692, 1328, 1345, 1347], "quickli": [246, 248, 651, 652, 678, 679], "obsolet": [246, 248], "user": [246, 247, 651, 652, 654, 655, 662, 663, 666, 667, 669, 672, 674, 675, 692], "constantli": 246, "invent": 246, "wheel": 246, "simultan": [246, 248], "modern": [246, 247], "simpl": [246, 651, 652, 656, 659, 660, 662, 665, 668, 669, 670, 671, 672, 677, 679, 680, 692, 1144, 1184, 1616], "scalabl": [246, 675], "exactli": [246, 248, 660, 669, 671, 1617, 1623], "common": [246, 251, 252, 653, 658, 660, 665, 667, 669, 670, 671, 673, 692, 793, 858], "ground": [246, 662], "li": 246, "find": [246, 251, 252, 651, 652, 661, 662, 675, 678, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1616, 1617], "essenti": [246, 247, 653, 660, 665, 671], "design": [246, 247, 655, 664, 672, 675, 677, 692], "univers": 246, "abstract": [246, 669, 679, 692, 873, 874], "languag": [246, 248, 675, 1616], "clear": [246, 247, 248, 652, 653, 660, 670, 671, 675, 677, 873, 877], "front": [246, 674, 675, 678, 1617, 1623], "runner": 246, "look": [246, 651, 652, 654, 656, 657, 658, 660, 662, 663, 664, 665, 666, 669, 670, 671, 675, 677, 679, 680, 1617], "littl": [246, 677], "deeper": [246, 652, 655, 674, 1488, 1499, 1500], "core": [246, 651, 653, 671, 680, 873, 888, 1617], "principl": 246, "expos": [246, 675, 679, 1144, 1163], "almost": [246, 652, 664, 669, 676, 678], "ident": [246, 248, 251, 252, 658, 663, 664, 665, 667, 669, 677, 678, 692, 873, 886, 1488, 1501, 1616, 1617], "syntax": [246, 247, 673], "There": [246, 651, 652, 653, 660, 661, 663, 664, 665, 668, 669, 670, 673, 675, 678, 692], "wai": [246, 247, 651, 661, 662, 666, 672, 677, 678, 679, 680, 692], "unsurprisingli": [246, 660], "fundament": [246, 675], "consist": [246, 251, 252, 668, 670, 672, 1328, 1345, 1347, 1581, 1582, 1584], "veri": [246, 247, 651, 652, 656, 657, 660, 662, 665, 669, 671, 672, 676, 678, 679, 680, 692, 1617], "similar": [246, 607, 608, 609, 656, 662, 667, 669, 670, 671, 678, 692, 906, 1099, 1101, 1307, 1326], "convent": [246, 656, 657, 691, 1328, 1353, 1355, 1581, 1582, 1584], "introduc": [246, 669, 678, 1431, 1461, 1463, 1550, 1551, 1554], "2006": 246, "present": [246, 251, 252, 652, 657, 661, 669, 670, 671, 672, 675], "itself": [246, 651, 652, 657, 663, 669, 672, 679, 691, 692, 1144, 1149, 1256, 1488, 1500], "cut": 246, "cloth": 246, "adher": [246, 247, 659, 661, 675, 680], "semant": [246, 675, 680, 906, 1099, 1101], "up": [246, 247, 248, 650, 652, 653, 654, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 675, 676, 677, 678, 679, 680, 691, 692], "hopefulli": [246, 247, 248, 651, 652, 653, 654, 655, 656, 657, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 675, 677, 678, 679, 680, 691], "paint": [246, 675], "pictur": [246, 675], "how": [246, 248, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 674, 676, 677, 678, 679, 680, 691, 692, 1617, 1623], "pleas": [246, 247, 248, 651, 652, 653, 654, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 675, 677, 678, 679, 680, 691, 1617], "discuss": [246, 247, 248, 650, 651, 652, 653, 654, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 675, 676, 677, 678, 679, 680, 691, 692, 1617], "faq": [246, 247, 248, 675, 677, 678, 679, 680, 691], "reach": [246, 247, 248, 651, 652, 653, 654, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 675, 677, 678, 679, 680, 691, 1488, 1500], "discord": [246, 247, 248, 651, 652, 653, 654, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 675, 677, 678, 679, 680, 691, 1617], "you": [246, 247, 248, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 680, 691, 692, 1616, 1617, 1623], "question": [246, 247, 248, 651, 652, 660, 662, 675, 677, 678, 679, 680, 691, 692, 1617], "central": 247, "goal": [247, 653], "being": [247, 248, 251, 252, 651, 652, 657, 660, 662, 667, 668, 669, 670, 671, 672, 673, 675, 678, 691, 692, 733, 734, 735, 1144, 1226, 1233, 1550, 1559, 1562, 1617], "forgiven": 247, "eyebrow": 247, "somehow": 247, "strong": [247, 692], "industri": 247, "back": [247, 652, 667, 668, 674, 692, 1144, 1229, 1257, 1617, 1623], "momentum": 247, "won": [247, 248, 652, 680], "just": [247, 248, 651, 652, 659, 660, 661, 662, 663, 664, 665, 667, 672, 677, 678, 692, 1581, 1582, 1584], "make": [247, 248, 651, 652, 653, 656, 657, 659, 660, 661, 662, 664, 665, 667, 668, 669, 670, 671, 672, 673, 675, 677, 678, 680], "problem": [247, 652, 668, 677], "even": [247, 248, 651, 652, 657, 659, 665, 670, 671, 677, 678, 679, 680, 692, 906, 1095, 1097, 1103, 1105], "wors": 247, "funni": 247, "comic": 247, "strip": 247, "easi": [247, 651, 652, 664, 665, 669], "feasibl": 247, "space": [247, 733, 734, 735, 757, 758, 760, 761, 1144, 1186, 1265, 1291, 1296, 1306], "unlik": [247, 660, 669, 672], "charger": 247, "charact": [247, 673], "encod": [247, 678, 1144, 1186], "instant": [247, 1617], "messag": [247, 652, 660, 673, 675, 677, 1660, 1661], "much": [247, 651, 652, 656, 668, 669, 670, 672, 675, 677, 678], "mandat": [247, 656, 662, 672], "adopt": [247, 652, 668], "continu": [247, 248, 661, 662, 673, 692], "own": [247, 248, 651, 658, 659, 662, 673, 675, 692, 1616], "your": [247, 248, 650, 651, 653, 654, 656, 659, 661, 678, 679, 692, 1617], "100": [247, 248, 662, 678, 679, 680, 692, 906, 1119, 1121, 1144, 1214, 1488, 1494, 1617], "despit": [247, 669, 671], "distinct": [247, 651, 659, 669, 672, 674, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1617], "still": [247, 251, 252, 652, 659, 662, 670, 679, 692, 1617], "believ": [247, 652], "share": [247, 251, 252, 660, 662, 664, 665, 666, 669, 675, 793, 867], "bring": [247, 662, 675, 676, 1616], "benefit": [247, 248, 651, 652, 668, 669, 672, 677, 678, 692], "unrel": [247, 652], "what": [247, 248, 652, 655, 657, 659, 660, 662, 667, 669, 673, 674, 675, 677, 678, 679, 680, 691, 692, 1617], "again": [247, 248, 652, 656, 660, 662, 669, 672, 678, 680, 692], "contrari": 247, "bumpi": 247, "road": 247, "allud": [247, 678], "most": [247, 251, 252, 651, 656, 657, 662, 664, 665, 668, 669, 670, 671, 672, 673, 675, 677, 678, 679, 692, 1328, 1345, 1347], "technologi": 247, "full": [247, 248, 652, 657, 659, 662, 670, 675, 692, 733, 793, 825, 827, 906, 1011, 1013, 1031, 1033, 1307, 1316, 1328, 1364, 1366, 1377, 1379, 1385, 1387, 1389, 1392], "success": 247, "reason": [247, 652, 656, 660, 665, 668, 669, 670, 672, 675, 677, 906, 1099, 1101], "build": [247, 650, 651, 665, 674, 676, 679, 680, 692, 1550, 1551, 1554, 1555, 1558, 1563, 1566, 1616, 1617], "custom": [247, 662, 679], "thank": [247, 678], "interoper": 247, "compon": [247, 675, 1265, 1291, 1296, 1306], "bio": [247, 651], "hardwar": [247, 651], "initi": [247, 251, 252, 253, 254, 652, 662, 666, 670, 671, 675, 1307, 1325], "pcie": 247, "interfac": [247, 677, 680, 692, 1616], "motherboard": 247, "raid": 247, "storag": [247, 678], "virtual": [247, 652, 654], "bluetooth": 247, "wireless": 247, "exchang": 247, "btx": 247, "sata": 247, "connect": [247, 651, 679, 680], "host": [247, 692], "bu": 247, "adapt": [247, 622, 623, 1265, 1285, 1287], "enabl": [247, 251, 252, 253, 254, 651, 652, 662, 663, 665, 667, 668, 669, 672, 674, 676, 678, 680, 692, 1265, 1291, 1306, 1616], "anyon": [247, 650, 692], "websit": 247, "tcp": 247, "ip": 247, "node": [247, 251, 252, 669, 1488, 1489, 1498, 1499], "commun": [247, 650, 652, 653, 692, 1617, 1623], "network": [247, 665, 669, 675, 679, 691, 1307, 1324, 1617], "smtp": 247, "send": 247, "gmail": 247, "outlook": 247, "pop": 247, "email": 247, "ieee": [247, 732, 793, 825, 827, 906, 919, 921, 995, 997, 1043, 1045, 1079, 1081, 1099, 1101, 1119, 1121], "754": [247, 732, 793, 825, 827, 906, 919, 921, 995, 997, 1043, 1045, 1079, 1081, 1099, 1101, 1119, 1121], "allow": [247, 652, 653, 662, 663, 664, 667, 675, 677, 692, 733, 757, 758, 760, 761, 1144, 1221, 1616], "live": [247, 248], "did": [247, 653, 680], "aris": [247, 692], "until": [247, 652, 673, 675, 692, 1617], "substanti": [247, 652, 662, 668], "innov": 247, "growth": 247, "usag": [247, 675, 692, 873, 896], "relev": [247, 651, 652, 653, 660, 669, 670, 678], "necess": 247, "parti": [247, 692], "could": [247, 248, 651, 652, 660, 662, 667, 670, 672, 675, 677, 678, 679, 1550, 1551, 1554, 1555, 1558, 1563, 1566], "easili": [247, 652, 663, 678, 679, 680, 692, 1617], "engag": [247, 650, 651, 652, 653, 654, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672], "regard": [247, 669], "2015": 247, "sinc": [247, 651, 652, 662, 692], "alongsid": 247, "machin": [247, 628, 629, 651, 665, 691, 793, 825, 827, 835, 837, 1328, 1364, 1366, 1376, 1616], "frame": [247, 691], "matur": [247, 692], "state": [247, 657, 659, 662, 674, 675, 676, 678, 691, 793, 871, 906, 1079, 1081, 1144, 1198, 1237, 1257, 1258, 1259, 1307, 1325, 1617], "preced": [247, 679], "mention": [247, 651, 652, 657, 660, 665, 672], "aros": 247, "70": [247, 1328, 1372, 1374, 1581, 1582, 1584], "80": [247, 1328, 1372, 1374, 1488, 1499, 1581, 1582, 1584], "90": [247, 618, 619, 906, 963, 965, 1103, 1105, 1328, 1372, 1374, 1581, 1582, 1584], "effort": [247, 650, 662, 692], "stage": [247, 650, 652, 654, 655, 673, 1617], "complet": [247, 251, 252, 652, 653, 660, 668, 669, 677, 678, 1328, 1377, 1379], "natur": [247, 660, 668, 691, 906, 991, 993, 1035, 1037, 1043, 1045, 1328, 1381, 1383], "certainli": 247, "mission": [247, 1617], "At": [247, 653, 658, 661], "process": [247, 248, 650, 651, 652, 654, 662, 664, 665, 669, 675, 680, 873, 891, 905], "ourselv": 247, "lead": [247, 248, 251, 252, 253, 254, 660, 692, 1328, 1377, 1379, 1389, 1392], "quansight": 247, "compani": 247, "made": [247, 652, 653, 672, 675, 677], "organ": [247, 656, 665, 668, 669, 1616], "panda": 247, "scipi": 247, "conda": [247, 651, 654], "dask": [247, 1550, 1551, 1554, 1555, 1558, 1563, 1566], "apach": 247, "onnx": 247, "scikit": 247, "jupyt": 247, "aw": 247, "cupi": 247, "net": [247, 248, 675, 680], "sympi": 247, "rai": [247, 906, 935, 937], "modin": 247, "spyder": 247, "member": [247, 652], "googl": [247, 1617], "octoml": 247, "further": [247, 248, 652, 654, 660, 662, 668, 674, 678, 679, 1617], "sponsor": 247, "lg": 247, "electron": 247, "microsoft": 247, "shaw": 247, "intel": 247, "togeth": [247, 251, 252, 656, 668, 669, 673, 679, 680, 692], "major": [247, 662, 663, 670, 671, 692, 1532, 1541, 1544], "anoth": [247, 651, 652, 653, 662, 663, 664, 665, 669, 670, 677, 680, 733, 748, 750, 793, 800, 802, 808, 810, 1616], "promis": 247, "pursuit": 247, "unif": [247, 650, 677, 1617, 1623], "clearli": [247, 652, 653, 660, 662], "lot": [247, 248, 667, 670, 692], "thought": [247, 651, 652, 657], "care": [247, 652, 680], "attent": [247, 652, 653, 668, 1307, 1326, 1327], "gone": [247, 674], "simplifi": [247, 675, 676, 679], "excit": [247, 650, 655, 1617], "complianc": 247, "hope": [247, 692], "suit": [247, 651, 655, 661, 662, 678, 691, 1616], "some": [247, 248, 251, 252, 622, 623, 651, 652, 653, 656, 657, 658, 659, 660, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 677, 678, 679, 691, 692, 873, 874, 906, 995, 997, 1043, 1045, 1265, 1266, 1268, 1269, 1271, 1274, 1276, 1282, 1284, 1285, 1287, 1288, 1290, 1302, 1305, 1307, 1322, 1488, 1499, 1616, 1617], "motiv": [247, 677], "great": [247, 248, 652, 662, 675, 677], "convinc": 247, "celebr": 247, "encourag": [247, 691, 692, 1617, 1623], "foundat": 247, "ask": [248, 660, 675, 677, 692, 1617], "perfectli": 248, "happi": [248, 651, 692], "abund": 248, "better": [248, 655, 658, 663, 664, 673, 674, 677, 678, 679], "ll": [248, 650, 652, 660, 672, 678], "give": [248, 651, 652, 655, 657, 659, 660, 666, 793, 858, 1431, 1457, 1459], "streamlin": 248, "workflow": [248, 652, 653, 678, 690, 1616, 1617], "save": [248, 251, 252, 662, 673, 692, 873, 874, 1144, 1235, 1244], "week": [248, 652, 1617], "sai": [248, 651, 667, 677], "deepmind": 248, "releas": [248, 651, 652, 653, 656, 692, 1617], "awesom": 248, "paper": 248, "love": 248, "perceiverio": 248, "happen": [248, 651, 652, 662, 678], "slew": 248, "rush": 248, "f": [248, 607, 608, 609, 652, 654, 655, 662, 669, 673, 675, 678, 1144, 1209, 1216, 1488, 1491, 1504, 1505], "inevit": 248, "often": [248, 662, 665, 673, 692], "erron": 248, "poor": 248, "converg": 248, "issu": [248, 650, 653, 660, 662, 675, 679, 692], "publish": [248, 692], "manag": [248, 650, 672, 692], "get": [248, 251, 252, 650, 651, 653, 655, 662, 664, 665, 667, 670, 671, 672, 675, 676, 677, 678, 679, 793, 820, 822, 824, 825, 827, 835, 837, 873, 878, 879, 881, 883, 886, 891, 895, 902, 905, 1144, 1150, 1197, 1198, 1199, 1200, 1201, 1226, 1237, 1244, 1616, 1617, 1623], "work": [248, 651, 652, 653, 655, 660, 661, 662, 663, 670, 671, 674, 675, 677, 679, 680, 1617, 1623], "repositori": [248, 651, 652, 654, 661, 673], "pull": [248, 650, 651, 653, 654, 656, 660, 692], "request": [248, 650, 653, 656, 660, 873, 888], "confus": [248, 672, 1616], "expect": [248, 652, 662, 692, 793, 858, 1144, 1150, 1617], "codebas": [248, 650, 655, 656, 662, 672, 674, 873, 894, 895, 1617], "hour": 248, "spent": 248, "spin": 248, "off": [248, 651, 674, 1328, 1341, 1343, 1402, 1405], "address": [248, 652, 653, 668, 675, 1144, 1251, 1254], "sake": 248, "line": [248, 651, 660, 661, 662, 668, 673, 676, 677, 678, 679, 690, 1617, 1623], "directli": [248, 652, 656, 657, 658, 659, 662, 663, 665, 667, 668, 669, 670, 671, 672, 675, 677, 679, 680, 691, 692, 1488, 1500], "guarante": [248, 668, 692, 1550, 1551, 1554], "turn": [248, 651, 660, 662, 669], "few": [248, 652, 653, 662, 665, 669, 670, 671, 672, 673, 676, 677, 678, 679, 690, 1617, 1623], "automat": [248, 651, 652, 655, 657, 665, 669, 674, 676, 679, 680, 1616, 1617], "everyon": [248, 650, 652, 692], "regardless": [248, 251, 252, 650, 677, 680, 730, 731], "wouldn": [248, 670], "nice": [248, 662], "know": [248, 652, 662, 1550, 1551, 1554, 1555, 1558, 1563, 1566], "among": [248, 251, 252, 662], "frantic": 248, "port": 248, "lucid": 248, "honk": 248, "improv": [248, 652, 665, 675, 1616], "understand": [248, 651, 652, 653, 654, 655, 657, 659, 660, 661, 663, 664, 673, 674], "hasn": 248, "now": [248, 651, 654, 656, 657, 662, 667, 669, 670, 673, 677, 678, 680, 691, 692, 733, 789, 792], "spend": 248, "torchvis": 248, "sonnet": 248, "about": [248, 651, 652, 656, 657, 661, 662, 674, 675, 677, 678, 679, 680, 692, 793, 825, 827, 835, 837], "next": [248, 651, 652, 653, 654, 659, 660, 666, 667, 673, 676, 677, 678, 793, 825, 827, 1617], "everyth": [248, 652, 653, 660, 662, 664, 676, 692], "said": 248, "level": [248, 650, 652, 653, 665, 674, 675, 678, 679, 680, 692, 1616], "trainer": [248, 690, 692, 1617], "statu": [248, 653], "quo": 248, "kera": 248, "dopamin": 248, "ignit": 248, "catalyst": 248, "lightn": 248, "fastai": 248, "haiku": [248, 680], "flax": [248, 680, 692], "trax": [248, 680], "objax": [248, 680], "idea": [248, 658, 663, 673, 691], "fulli": [248, 657, 668, 672, 675, 676, 677, 678, 679, 680, 692], "offer": [248, 679], "containerwithactiv": [249, 253, 254], "dict_in": [249, 250, 251, 252, 253, 254, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647], "queue": [249, 250, 251, 252, 253, 254, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 678, 1144, 1226, 1233], "queue_load_s": [249, 250, 251, 252, 253, 254, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647], "container_combine_method": [249, 250, 251, 252, 253, 254, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647], "list_join": [249, 250, 251, 252, 253, 254, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647], "queue_timeout": [249, 250, 251, 252, 253, 254, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 1144, 1233], "print_limit": [249, 250, 251, 252, 253, 254, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647], "key_length_limit": [249, 250, 251, 252, 253, 254, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647], "print_ind": [249, 250, 251, 252, 253, 254, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647], "print_line_spac": [249, 250, 251, 252, 253, 254, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647], "ivyh": [249, 250, 251, 252, 253, 254, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647], "default_key_color": [249, 250, 251, 252, 253, 254, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647], "green": [249, 250, 251, 252, 253, 254, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 651, 652, 1660, 1661], "keyword_color_dict": [249, 250, 251, 252, 253, 254, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647], "rebuild_child_contain": [249, 250, 251, 252, 253, 254, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647], "types_to_iteratively_nest": [249, 250, 251, 252, 253, 254, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647], "alphabetical_kei": [249, 250, 251, 252, 253, 254, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647], "containerbas": [249, 250, 251, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 669], "key_chain": [249, 250, 251, 252, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 628, 629, 630, 631, 632, 633, 636, 637, 640, 641, 642, 643, 644, 645, 646, 647, 1488, 1501], "to_appli": [249, 250, 251, 252, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 628, 629, 630, 631, 632, 633, 636, 637, 640, 641, 642, 643, 644, 645, 646, 647, 1488, 1501], "prune_unappli": [249, 250, 251, 252, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 628, 629, 630, 631, 632, 633, 636, 637, 640, 641, 642, 643, 644, 645, 646, 647, 1488, 1501], "map_sequ": [249, 250, 251, 252, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 628, 629, 630, 631, 632, 633, 636, 637, 640, 641, 642, 643, 644, 645, 646, 647], "exact": [249, 250, 251, 252, 652, 660, 675, 1550, 1551, 1554], "formul": [249, 250], "chain": [249, 250, 251, 252, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 628, 629, 630, 631, 632, 633, 636, 637, 640, 641, 642, 643, 644, 645, 646, 647, 668, 669, 679, 680, 692, 1484, 1485, 1486, 1488, 1501], "skip": [249, 250, 251, 252, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 628, 629, 630, 631, 632, 633, 636, 637, 640, 641, 642, 643, 644, 645, 646, 647, 654, 662, 1488, 1501], "prune": [249, 250, 251, 252, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 628, 629, 630, 631, 632, 633, 636, 637, 640, 641, 642, 643, 644, 645, 646, 647, 1488, 1501, 1502, 1503], "map": [249, 250, 251, 252, 253, 254, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 628, 629, 630, 631, 632, 633, 636, 637, 640, 641, 642, 643, 644, 645, 646, 647, 656, 657, 662, 665, 669, 678, 691, 692, 1488, 1495, 1496, 1500, 1501, 1616], "unit": [249, 250, 661, 662, 692, 705, 706, 708, 710, 712, 714, 716], "slope": [249, 250, 705, 710, 712], "leaki": [249, 250, 705, 710, 712], "rectifi": [249, 250, 705, 710, 712, 714, 716], "linear": [249, 250, 659, 675, 678, 679, 680, 705, 706, 708, 710, 712, 714, 716, 1144, 1186, 1307, 1322, 1385, 1387, 1617], "static": [249, 250, 251, 252, 607, 608, 609, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 653, 659, 660, 665, 667, 692, 730, 731, 906, 995, 997, 1063, 1065, 1144, 1164, 1204, 1206], "static_gelu": [249, 250], "static_leaky_relu": [249, 250], "static_relu": [249, 250], "static_sigmoid": [249, 250], "static_softmax": [249, 250], "static_softplu": [249, 250], "__getitem__": [251, 252, 669], "queri": [251, 252, 669, 670, 677, 873, 883, 895, 1307, 1326, 1327], "slice": [251, 252, 1144, 1189, 1191, 1193, 1195, 1488, 1497], "dictionari": [251, 252, 253, 254, 678, 692, 873, 895], "around": [251, 252, 253, 254, 652, 657, 665, 668, 677, 692, 1616], "multiprocess": [251, 252, 253, 254, 678, 692, 1144], "asynchron": [251, 252, 253, 254], "wait": [251, 252, 253, 254, 652, 1144, 1233], "combin": [251, 252, 253, 254, 652, 660, 662, 665, 668, 669, 680, 1144, 1187, 1188, 1328, 1333, 1335, 1353, 1355], "arriv": [251, 252, 253, 254, 1144, 1233], "timeout": [251, 252, 253, 254, 1144, 1226, 1233], "limit": [251, 252, 253, 254, 652, 660, 662, 673, 678, 692, 793, 825, 827, 835, 837, 1144, 1155, 1157, 1159, 1161, 1431, 1432, 1434], "whitespac": [251, 252, 253, 254], "indent": [251, 252, 253, 254, 678], "extra": [251, 252, 253, 254, 660, 662, 663, 664, 667, 668, 670, 675, 1265, 1272], "newlin": [251, 252, 253, 254, 659], "color": [251, 252, 253, 254, 1660, 1661], "termin": [251, 252, 253, 254, 651, 652, 654, 661, 669, 675, 678], "termcolor": [251, 252, 253, 254], "rebuild": [251, 252, 253, 254], "found": [251, 252, 253, 254, 607, 608, 609, 651, 652, 659, 667, 668, 669, 672, 673, 873, 886, 1488, 1499], "constructor": [251, 252, 253, 254, 670, 671, 677, 1144, 1150], "param": [251, 252, 253, 254, 620, 621, 680, 1144, 1149, 1189, 1191, 1193, 1195], "kept": [251, 252, 253, 254, 652, 656, 672, 1484, 1485, 1486], "structur": [251, 252, 253, 254, 652, 654, 656, 665, 668, 669, 678, 679, 1144, 1163, 1488, 1501], "alphabet": [251, 252, 253, 254], "__setitem__": [251, 252, 668, 669, 677], "all_fals": [251, 252], "assert_is_bool": [251, 252], "assert": [251, 252, 658, 662, 673, 677, 678, 1144, 1153], "all_key_chain": [251, 252], "include_empti": [251, 252], "all_tru": [251, 252, 669, 678], "as_bool": [251, 252], "assert_contains_sub_contain": [251, 252], "sub_cont": [251, 252], "partial": [251, 252, 652, 1265, 1281], "diff": [251, 252, 660, 669, 678], "screen": [251, 252, 678], "assert_contains_sub_structur": [251, 252], "check_shap": [251, 252], "assert_ident": [251, 252], "check_typ": [251, 252], "same_arrai": [251, 252, 678], "arrays_equ": [251, 252, 1144], "assert_identical_structur": [251, 252], "at_key_chain": [251, 252], "ignore_key_error": [251, 252], "ignore_non": [251, 252], "at_kei": [251, 252], "ignor": [251, 252, 607, 608, 609, 660, 662, 692, 733, 763, 765, 1488, 1499], "substr": [251, 252], "access": [251, 252, 652, 653, 654, 663, 670], "config": [251, 252, 678, 1488, 1501], "right": [251, 252, 650, 651, 652, 655, 660, 678, 906, 951, 953, 959, 961, 1328, 1389, 1392, 1567, 1572, 1575], "duplic": [251, 252, 659, 666, 667, 673, 679], "configur": [251, 252, 651, 652, 654, 670, 873, 895, 1488, 1501], "container_rightmost": [251, 252], "common_key_chain": [251, 252, 669], "contains_sub_contain": [251, 252], "contains_sub_structur": [251, 252], "create_if_abs": [251, 252], "alreadi": [251, 252, 651, 652, 657, 666, 669, 670, 692, 906, 967, 969, 999, 1001, 1079, 1081, 1103, 1105, 1140, 1143, 1328, 1372, 1374, 1617], "noth": [251, 252, 652], "cutoff_at_depth": [251, 252], "depth_cutoff": [251, 252], "summari": [251, 252, 651, 652, 662, 793, 814, 815, 816, 818, 864, 865, 1144, 1163, 1170, 1203], "cutoff_at_height": [251, 252], "height_cutoff": [251, 252], "deep_copi": [251, 252, 678], "belong": [251, 252, 653, 679], "dev_str": [251, 252], "diff_kei": [251, 252], "detect_key_diff": [251, 252], "detect_value_diff": [251, 252], "detect_shape_diff": [251, 252], "treat": [251, 252, 662, 676, 680, 730, 731], "detect": [251, 252, 651, 657, 662, 669, 673, 678, 679, 1488, 1489, 1499], "without": [251, 252, 652, 656, 657, 658, 660, 662, 663, 665, 668, 669, 670, 671, 673, 677, 678, 679, 691, 692, 1144, 1226, 1233, 1256, 1431, 1457, 1459, 1488, 1490, 1550, 1551, 1554, 1555, 1558, 1563, 1566], "container0": [251, 252], "find_sub_contain": [251, 252], "sub_cont_to_find": [251, 252], "exsit": [251, 252], "find_sub_structur": [251, 252], "sub_struc_to_find": [251, 252], "flatten_key_chain": [251, 252, 678], "__": [251, 252, 660, 678], "above_height": [251, 252, 678], "below_depth": [251, 252, 678], "format_key_chain": [251, 252], "format_fn": [251, 252], "format": [251, 252, 607, 611, 654, 655, 659, 660, 670, 671, 675, 677, 678, 793, 820, 822, 873, 879, 881, 1581, 1582, 1584, 1617], "string": [251, 252, 666, 670, 671, 673, 675, 678, 793, 794, 795, 820, 822, 839, 872, 873, 875, 876, 877, 878, 883, 891, 897, 901, 902, 905, 1144, 1170], "from_disk_as_hdf5": [251, 252, 678], "h5_obj_or_filepath": [251, 252], "slice_obj": [251, 252], "load": [251, 252, 692], "disk": [251, 252, 678], "h5py": [251, 252], "file": [251, 252, 651, 652, 654, 656, 659, 662, 665, 666, 668, 669, 673, 675, 678, 1144, 1235, 1244], "hdf5": [251, 252, 678], "filepath": [251, 252, 652], "h5": [251, 252], "from_disk_as_json": [251, 252, 678], "json_filepath": [251, 252], "json": [251, 252, 678], "were": [251, 252, 614, 615, 652, 656, 662, 673, 675], "abl": [251, 252, 651, 652, 665, 670, 672, 673, 680], "from_disk_as_pickl": [251, 252, 678], "pickle_filepath": [251, 252], "pickl": [251, 252, 669, 678], "from_flat_list": [251, 252], "flat_list": [251, 252], "hierarchi": [251, 252, 678], "flat": [251, 252, 1144, 1227, 1431, 1453, 1455], "h5_file_s": [251, 252], "content": [251, 252, 653, 654, 663, 672, 675, 678], "batch": [251, 252, 628, 629, 665, 669, 678, 873, 894, 895, 1144, 1186, 1307, 1324, 1328, 1410, 1413, 1484, 1485, 1486, 1487, 1506, 1507, 1509], "handle_inplac": [251, 252], "prime": [251, 252], "overwritten": [251, 252, 666, 668], "has_kei": [251, 252], "query_kei": [251, 252], "somewher": [251, 252], "has_key_chain": [251, 252], "leafwis": [251, 252], "well": [251, 252, 652, 662, 663, 672, 679, 680, 691, 1144, 1204, 1206, 1328, 1385, 1387], "identical_array_shap": [251, 252], "identical_config": [251, 252], "identical_structur": [251, 252], "if_exist": [251, 252], "inplace_upd": [251, 252, 672, 1144], "key_chains_contain": [251, 252], "sub_str": [251, 252], "join": [251, 252, 1431, 1436, 1438, 1472, 1474, 1617], "list_stack": [251, 252, 678], "dim": [251, 252, 663, 664, 670, 1144, 1224], "func": [251, 252, 730, 731, 873, 896, 1144, 1154, 1265, 1272, 1273, 1281, 1297, 1488, 1501], "map_cont": [251, 252], "include_self": [251, 252], "possibi": [251, 252], "max_depth": [251, 252, 1144, 1203, 1488, 1500], "multi_map": [251, 252, 669], "map_nest": [251, 252, 628, 629, 632, 633], "leftmost": [251, 252, 1488, 1501], "multi_map_in_static_method": [251, 252, 669], "fn_name": [251, 252, 664], "num_arrai": [251, 252, 662], "overwrite_at_key_chain": [251, 252], "overwrit": [251, 252, 652, 672, 675, 873, 896], "target_dict": [251, 252], "return_dict": [251, 252], "prune_empti": [251, 252], "keep_non": [251, 252], "empti": [251, 252, 668, 670, 671, 733, 734, 735, 1144, 1155, 1157, 1265, 1291, 1296, 1306, 1581, 1597, 1599, 1600, 1602, 1607, 1608, 1610, 1612, 1614], "prune_key_chain": [251, 252], "key1": [251, 252, 679], "key2": [251, 252], "key3": [251, 252], "prune_key_from_key_chain": [251, 252], "certain": [251, 252, 651, 652, 662, 663, 670, 692, 733, 734, 735, 757, 758, 760, 761], "decid": [251, 252, 651, 663, 1488, 1499], "remov": [251, 252, 652, 653, 654, 659, 662, 665, 670, 672, 680, 1265, 1296, 1328, 1341, 1343, 1353, 1355, 1402, 1405, 1431, 1469, 1471, 1484, 1485, 1486], "prune_kei": [251, 252], "prune_keys_from_key_chain": [251, 252], "remove_key_length_limit": [251, 252], "remove_print_limit": [251, 252], "reshape_lik": [251, 252], "leading_shap": [251, 252], "return_cont": [251, 252], "restructur": [251, 252], "keep_orig": [251, 252], "transpos": [251, 252, 677, 680, 1307, 1312, 1314, 1316, 1328, 1368, 1370, 1376, 1617], "old": [251, 252, 651, 672], "start": [251, 252, 612, 613, 650, 651, 652, 653, 654, 655, 659, 660, 663, 670, 674, 675, 677, 678, 679, 691, 692, 733, 734, 735, 757, 758, 760, 761, 873, 874], "restructure_key_chain": [251, 252], "keychain_map": [251, 252], "set_at_key_chain": [251, 252], "set_at_kei": [251, 252], "set_framework": [251, 252], "set_ivy_backend": [251, 252], "ivy_backend": [251, 252], "attribut": [251, 252, 658, 659, 663, 667, 669, 670, 672, 676, 677, 678, 679, 793, 825, 827, 829, 830, 832, 833, 835, 837, 873, 884, 885, 892, 1144, 1187, 1188], "show": [251, 252, 651, 652, 660, 662, 672, 691, 692, 1617], "show_sub_contain": [251, 252], "sub_cont_or_keychain": [251, 252], "shuffle_h5_fil": [251, 252], "seed_valu": [251, 252, 1510, 1527], "dataset": [251, 252, 678, 690, 1617], "align": [251, 252, 651, 652, 675, 677, 1616, 1617, 1623], "seed": [251, 252, 1510, 1617], "size_ordered_arrai": [251, 252], "keychain": [251, 252], "smallest": [251, 252, 793, 825, 827, 835, 837, 906, 967, 969], "largest": [251, 252, 691, 793, 825, 827, 835, 837, 1328, 1389, 1392], "slice_kei": [251, 252], "key_slic": [251, 252], "all_depth": [251, 252], "slice_via_kei": [251, 252], "sort_by_kei": [251, 252], "split_cont": [251, 252], "constitu": [251, 252, 680], "structural_diff": [251, 252], "to_dict": [251, 252], "to_disk_as_hdf5": [251, 252, 678], "starting_index": [251, 252], "max_batch_s": [251, 252], "read": [251, 252, 654, 1617], "r": [251, 252, 651, 652, 655, 1144, 1152, 1260, 1263, 1328, 1377, 1379, 1414, 1417], "later": [251, 252, 653, 662, 1144, 1154], "append": [251, 252, 654, 662, 675, 678, 906, 951, 953, 1328, 1341, 1343, 1353, 1355], "to_disk_as_json": [251, 252, 678], "to_disk_as_pickl": [251, 252, 678], "to_flat_list": [251, 252], "to_iter": [251, 252, 669], "leaf_keys_onli": [251, 252], "to_iterator_kei": [251, 252], "to_iterator_valu": [251, 252], "to_json": [251, 252], "to_nested_list": [251, 252], "to_raw": [251, 252], "raw": [251, 252, 659], "trim_kei": [251, 252], "max_length": [251, 252], "try_kc": [251, 252], "tri": [251, 252], "concatten": [251, 252, 873, 896], "unstack_cont": [251, 252], "dim_siz": [251, 252, 1307, 1317], "update_config": [251, 252], "with_default_key_color": [251, 252], "with_entries_as_list": [251, 252], "with_ivy_backend": [251, 252], "with_key_length_limit": [251, 252, 678], "with_print_ind": [251, 252, 678], "with_print_limit": [251, 252, 678], "with_print_line_spac": [251, 252], "containerwithcr": [253, 254, 612], "containerwithdatatyp": [253, 254, 614], "containerwithdevic": [253, 254, 616], "containerwithelementwis": [253, 254, 618, 669], "containerwithgener": [253, 254, 620], "containerwithgradi": [253, 254, 622], "containerwithimag": [253, 254, 624], "containerwithlay": [253, 254, 626], "containerwithlinearalgebra": [253, 254, 628], "containerwithloss": [253, 254, 630], "containerwithmanipul": [253, 254, 632, 653], "containerwithnorm": [253, 254, 634], "containerwithrandom": [253, 254, 636], "containerwithsearch": [253, 254, 638], "containerwithset": [253, 254, 640], "containerwithsort": [253, 254, 642], "containerwithstatist": [253, 254, 644], "containerwithutil": [253, 254, 646], "static_to_ivi": 607, "staticmethod": [607, 608, 609], "receiv": [607, 608, 609, 652, 662, 670, 671, 1144, 1150, 1221], "implicit": [607, 608, 609, 659, 662, 669, 675], "To": [607, 608, 609, 651, 658, 660, 661, 662, 663, 664, 665, 669, 673, 678, 679, 680, 1144, 1230, 1233, 1617], "declar": [607, 608, 609, 652], "idiom": [607, 608, 609], "def": [607, 608, 609, 653, 656, 657, 658, 660, 662, 663, 664, 665, 669, 670, 671, 672, 673, 675, 677, 678, 679, 680, 1488, 1494, 1617], "arg1": [607, 608, 609], "arg2": [607, 608, 609], "neither": [607, 608, 609, 906, 919, 921, 1079, 1081, 1265, 1291, 1306], "implicitli": [607, 608, 609, 669, 675], "java": [607, 608, 609], "advanc": [607, 608, 609, 651], "concept": [607, 608, 609], "classmethod": [607, 608, 609], "builtin": [607, 608, 609, 651, 654, 677, 679], "static_to_n": 607, "2324": [612, 613, 733, 753, 755], "234": [612, 613, 733, 753, 755], "123": [612, 613, 662, 733, 753, 755, 1144, 1184], "static_arang": [612, 613], "static_asarrai": [612, 613], "static_empty_lik": [612, 613], "static_ey": [612, 613], "n_row": [612, 613, 733, 745, 746], "n_col": [612, 613, 733, 745, 746], "static_from_dlpack": [612, 613], "static_full_lik": [612, 613], "static_linspac": [612, 613], "num": [612, 613, 652, 675, 733, 757, 758, 760, 761], "endpoint": [612, 613, 733, 757, 758], "static_logspac": [612, 613], "static_meshgrid": [612, 613], "static_native_arrai": [612, 613], "static_on": [612, 613], "static_ones_lik": [612, 613], "static_tril": [612, 613], "static_triu": [612, 613], "static_zero": [612, 613], "static_zeros_lik": [612, 613], "718": [614, 615, 618, 619, 793, 796, 798, 906, 1063, 1065], "618": [614, 615, 618, 619, 793, 796, 798, 906, 1063, 1065], "broadcats": [614, 615], "static_astyp": [614, 615], "static_broadcast_arrai": [614, 615], "And": [614, 615], "static_broadcast_to": [614, 615], "static_can_cast": [614, 615], "from_": [614, 615, 793, 808, 810], "static_default_float_dtyp": [614, 615], "float_dtyp": [614, 615, 793, 815, 816, 864], "static_dtyp": [614, 615], "static_finfo": [614, 615], "static_function_supported_dtyp": [614, 615], "fn": [614, 615, 658, 675, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 793, 829, 830, 832, 833, 873, 884, 885, 1144, 1149, 1187, 1188, 1256, 1488, 1489, 1494, 1495, 1496, 1498, 1499, 1500], "static_function_unsupported_dtyp": [614, 615], "static_iinfo": [614, 615], "static_is_bool_dtyp": [614, 615], "dtype_in": [614, 615, 793, 794, 795, 824, 839, 840, 842, 844, 846, 848, 850, 852, 855, 872], "static_is_float_dtyp": [614, 615], "roughli": [614, 615], "static_is_int_dtyp": [614, 615], "static_is_uint_dtyp": [614, 615], "static_result_typ": [614, 615], "static_dev": [616, 617, 873, 879, 881], "static_to_devic": [616, 617], "move": [616, 617, 652, 656, 873, 897, 901], "__dlpack__": [616, 617, 733, 748, 750, 873, 897, 901], "caveat": [616, 617, 873, 897, 901], "portabl": [616, 617, 873, 897, 901, 1617], "524": [618, 619, 906, 923, 925], "644": [618, 619, 679, 906, 923, 925], "305": [618, 619, 906, 923, 925], "61": [618, 619, 622, 623, 630, 631, 636, 637, 906, 1043, 1045, 1123, 1125, 1265, 1266, 1268, 1307, 1318, 1320, 1418, 1419, 1421], "41": [618, 619, 620, 621, 628, 629, 906, 931, 933, 963, 965, 1119, 1121, 1144, 1155, 1157, 1159, 1161, 1328, 1329, 1331, 1510, 1523, 1525, 1581, 1600, 1602], "915": [618, 619, 906, 935, 937], "29": [618, 619, 622, 623, 636, 637, 906, 935, 937, 1265, 1282, 1284], "983": [618, 619, 906, 935, 937], "75": [618, 619, 620, 621, 626, 627, 636, 637, 906, 927, 929, 935, 937, 979, 981, 1144, 1210, 1212, 1328, 1349, 1351, 1372, 1374, 1510, 1523, 1525], "35": [618, 619, 628, 629, 636, 637, 906, 935, 937, 1119, 1121, 1307, 1327, 1328, 1333, 1335, 1532, 1546, 1549, 1581, 1582, 1584], "978": [618, 619, 705, 718, 720, 906, 935, 937], "696": [618, 619, 636, 637, 906, 935, 937], "993": [618, 619, 906, 935, 937], "203": [618, 619], "34": [618, 619, 636, 637, 793, 835, 837, 906, 963, 965, 1119, 1121, 1510, 1523, 1525], "52": [618, 619, 622, 623, 636, 637, 906, 935, 937, 979, 981, 1144, 1214, 1265, 1266, 1268, 1328, 1372, 1374, 1550, 1551, 1554, 1581, 1582, 1584], "333": [618, 619, 906, 979, 981, 1144, 1159, 1161, 1307, 1318, 1320], "thefunct": [618, 619], "649": [618, 619], "220": [618, 619], "959": [618, 619, 906, 1111, 1113], "865": [618, 619], "metho": [618, 619], "999999999999": [618, 619, 906, 1015, 1017], "898": [618, 619, 906, 1039, 1041], "0414": [618, 619, 906, 1039, 1041], "956": [618, 619], "28": [618, 619, 620, 621, 636, 637, 1144, 1210, 1212, 1265, 1266, 1268, 1307, 1313, 1316, 1318, 1320, 1328, 1372, 1374, 1581, 1582, 1584], "84": [618, 619, 636, 637, 793, 835, 837, 873, 883, 1328, 1372, 1374, 1581, 1582, 1584], "j": [618, 619, 652, 655, 1144, 1151, 1152, 1328, 1402, 1405, 1581, 1582, 1584], "threshold": [618, 619, 906, 1071, 1073, 1075, 1077], "300": [618, 619, 662, 906, 1103, 1105], "527": [618, 619, 906, 1103, 1105], "301": [618, 619, 906, 1103, 1105], "757": [618, 619, 906, 1111, 1113], "279": [618, 619, 906, 1111, 1113, 1144, 1155, 1157], "835": [618, 619], "347": [618, 619], "721": [618, 619], "static_ab": [618, 619], "static_aco": [618, 619], "static_acosh": [618, 619], "static_add": [618, 619, 659, 660, 669], "static_asin": [618, 619], "412": [618, 619, 906, 923, 925], "201": [618, 619, 906, 923, 925], "static_asinh": [618, 619], "static_atan": [618, 619], "static_atan2": [618, 619], "static_atanh": [618, 619], "static_bitwise_and": [618, 619], "static_bitwise_invert": [618, 619], "static_bitwise_left_shift": [618, 619], "static_bitwise_or": [618, 619], "static_bitwise_right_shift": [618, 619], "static_bitwise_xor": [618, 619], "static_ceil": [618, 619], "static_co": [618, 619], "static_cosh": [618, 619], "static_divid": [618, 619], "static_equ": [618, 619], "static_erf": [618, 619], "static_exp": [618, 619], "static_expm1": [618, 619, 906, 995, 997], "areal": [618, 619], "static_floor": [618, 619], "static_floor_divid": [618, 619], "static_great": [618, 619], "static_greater_equ": [618, 619], "static_isfinit": [618, 619], "static_isinf": [618, 619, 906, 1019, 1021], "static_isnan": [618, 619, 906, 1023, 1025], "static_less": [618, 619], "static_less_equ": [618, 619], "static_log": [618, 619], "static_log10": [618, 619], "static_log1p": [618, 619, 906, 1043, 1045], "static_log2": [618, 619], "static_logaddexp": [618, 619], "static_logical_and": [618, 619], "static_logical_not": [618, 619], "static_logical_or": [618, 619, 906, 1063, 1065], "static_logical_xor": [618, 619], "static_maximum": [618, 619], "static_minimum": [618, 619], "static_multipli": [618, 619], "static_neg": [618, 619], "static_not_equ": [618, 619], "static_posit": [618, 619], "static_pow": [618, 619], "static_remaind": [618, 619], "static_round": [618, 619], "thevfunct": [618, 619], "static_sign": [618, 619], "static_sin": [618, 619], "static_sinh": [618, 619], "static_sqrt": [618, 619], "static_squar": [618, 619], "static_subtract": [618, 619], "static_tan": [618, 619, 660, 669], "143": [618, 619, 660, 906, 1132, 1135], "38": [618, 619, 636, 637, 660, 793, 825, 827, 906, 1132, 1135], "static_tanh": [618, 619], "995": [618, 619, 906, 1136, 1139], "9999": [618, 619], "static_trunc": [618, 619], "static_all_equ": [620, 621], "833": [620, 621], "static_clip_matrix_norm": [620, 621], "849": [620, 621, 1144, 1155, 1157, 1159, 1161], "static_clip_vector_norm": [620, 621], "static_cumprod": [620, 621], "static_einops_rearrang": [620, 621], "static_einops_reduc": [620, 621], "static_einops_repeat": [620, 621], "static_gath": [620, 621], "static_gather_nd": [620, 621], "static_has_nan": [620, 621, 1144, 1204, 1206], "static_inplace_decr": [620, 621], "30": [620, 621, 636, 637, 906, 1103, 1105, 1144, 1210, 1212, 1214, 1233, 1238, 1240, 1328, 1372, 1374, 1581, 1582, 1584], "50": [620, 621, 677, 906, 1119, 1121, 1144, 1210, 1212, 1214, 1238, 1240, 1328, 1372, 1374, 1488, 1490, 1532, 1541, 1544, 1581, 1582, 1584], "static_stable_divid": [620, 621], "40": [620, 621, 636, 637, 906, 975, 977, 1119, 1121, 1144, 1238, 1240, 1328, 1372, 1374, 1581, 1582, 1584], "22222222": [620, 621], "11111111": [620, 621], "857": [620, 621, 1144, 1238, 1240, 1550, 1551, 1554], "444": [620, 621], "static_to_list": [620, 621], "static_to_numpi": [620, 621], "static_unstack": [620, 621], "87": [622, 623, 906, 1043, 1045, 1265, 1266, 1268], "976": [622, 623, 906, 1136, 1139, 1265, 1266, 1268], "49e": [622, 623, 1265, 1266, 1268], "74e": [622, 623, 1265, 1266, 1268], "95e": [622, 623, 1265, 1266, 1268], "09": [622, 623, 636, 637, 906, 1043, 1045, 1123, 1125, 1265, 1266, 1268, 1307, 1327], "024": [622, 623, 1265, 1266, 1268], "096": [622, 623, 1265, 1266, 1268], "216": [622, 623, 1265, 1266, 1268], "384": [622, 623, 1265, 1266, 1268], "626": [622, 623, 1265, 1266, 1268], "65": [622, 623, 636, 637, 1144, 1210, 1212, 1265, 1266, 1268, 1328, 1372, 1374, 1581, 1582, 1584], "en": [622, 623, 1265, 1266, 1268, 1269, 1271], "wikipedia": [622, 623, 1265, 1266, 1268, 1269, 1271], "wiki": [622, 623, 1265, 1266, 1268, 1269, 1271], "stochastic_gradient_desc": [622, 623, 1265, 1266, 1268, 1269, 1271], "w_new": [622, 623, 1265, 1274, 1276], "66": [622, 623, 906, 963, 965, 1265, 1274, 1276, 1328, 1372, 1374, 1581, 1582, 1584], "88": [622, 623, 636, 637, 705, 710, 712, 906, 963, 965, 1265, 1274, 1276, 1328, 1372, 1374, 1393, 1397, 1510, 1523, 1525, 1581, 1582, 1584], "708": [622, 623, 1265, 1282, 1284], "445": [622, 623, 1265, 1282, 1284], "6e": [622, 623, 1265, 1282, 1284], "00036": [622, 623, 1265, 1282, 1284], "00016": [622, 623, 1265, 1282, 1284], "00049": [622, 623, 1265, 1282, 1284], "layerwis": [622, 623, 1265, 1285, 1287], "static_is_vari": [622, 623], "static_stop_gradi": [622, 623], "static_vari": [622, 623], "static_variable_data": [622, 623], "inp": [626, 627, 1307, 1318, 1320], "static_conv1d": [626, 627], "static_depthwise_conv2d": [626, 627], "73": [628, 629, 662, 906, 1119, 1121, 1328, 1329, 1331, 1506, 1507, 1509, 1510, 1519, 1521], "577": [628, 629, 1328, 1329, 1331], "707": [628, 629, 1328, 1329, 1331], "liter": [628, 629, 673, 1328, 1410, 1413], "nuc": [628, 629], "matrix_pow": [628, 629, 1328], "singular": [628, 629, 1328, 1364, 1366, 1376, 1389, 1392, 1393, 1397], "toler": [628, 629, 664, 1328, 1364, 1366, 1376], "largest_singular_valu": [628, 629, 1328, 1364, 1366, 1376], "equival": [628, 629, 672, 678, 680, 733, 734, 735, 906, 959, 961, 1059, 1061, 1063, 1065, 1099, 1101, 1328, 1364, 1366, 1376, 1385, 1387, 1410, 1413], "ep": [628, 629, 793, 825, 827, 1328, 1364, 1366, 1376], "slogdet": [628, 629, 1328], "static_choleski": [628, 629], "static_rol": [628, 629, 632, 633, 660, 669], "static_cross": [628, 629], "static_det": [628, 629], "static_diagon": [628, 629], "static_inv": [628, 629], "static_matrix_norm": [628, 629], "static_matrix_pow": [628, 629], "static_matrix_rank": [628, 629], "ref": [628, 629, 659, 906, 959, 961, 1027, 1029, 1079, 1081, 1087, 1089, 1099, 1101, 1127, 1131, 1431, 1472, 1474], "static_matrix_transpos": [628, 629], "static_out": [628, 629], "static_qr": [628, 629], "static_slogdet": [628, 629], "static_solv": [628, 629], "static_svd": [628, 629], "static_svdv": [628, 629], "static_tensordot": [628, 629], "static_trac": [628, 629], "static_vecdot": [628, 629], "static_vector_norm": [628, 629], "mathemat": [628, 629, 663, 732, 906, 919, 921, 935, 937, 995, 997, 1043, 1045, 1079, 1081, 1328, 1410, 1413], "l1": [628, 629, 678, 1328, 1410, 1413], "manhattan": [628, 629, 1328, 1410, 1413], "l2": [628, 629, 1328, 1410, 1413], "euclidean": [628, 629, 1328, 1410, 1413], "static_vector_to_skew_symmetric_matrix": [628, 629], "511": [630, 631, 1418, 1419, 1421], "5108256": [630, 631], "609438": [630, 631], "static_binary_cross_entropi": [630, 631], "static_cross_entropi": [630, 631], "20397282": [630, 631], "83258148": [630, 631], "60943794": [630, 631], "static_sparse_cross_entropi": [630, 631], "static_clip": [632, 633], "static_concat": [632, 633], "static_expand_dim": [632, 633], "container_axi": [632, 633, 1431, 1443, 1445], "static_repeat": [632, 633], "static_reshap": [632, 633], "static_split": [632, 633], "658": [634, 635, 1506, 1507, 1509], "759": [634, 635, 1506, 1507, 1509], "403": [634, 635], "62": [634, 635, 636, 637, 906, 1115, 1117, 1510, 1523, 1525], "102": [636, 637], "60": [636, 637, 1144, 1165, 1167, 1214, 1238, 1240, 1328, 1372, 1374, 1581, 1582, 1584], "431": [636, 637], "55": [636, 637, 1144, 1210, 1212, 1328, 1372, 1374, 1393, 1397, 1510, 1519, 1521, 1581, 1582, 1584], "31": [636, 637, 678, 906, 1119, 1121, 1144, 1155, 1157, 1328, 1393, 1397], "68": [636, 637, 733, 752, 906, 927, 929, 935, 937, 1506, 1507, 1509], "93": [636, 637, 873, 883, 906, 1119, 1121], "83": [636, 637, 906, 1119, 1121], "274": [636, 637], "92": [636, 637, 1265, 1288, 1290, 1328, 1337, 1339], "91": [636, 637, 906, 963, 965, 1328, 1372, 1374, 1510, 1519, 1521, 1581, 1582, 1584], "43": [636, 637, 1510, 1519, 1521, 1523, 1525, 1532, 1546, 1549], "static_multinomi": [636, 637], "prob": [636, 637, 1307, 1322, 1510, 1511, 1513], "static_randint": [636, 637], "static_random_norm": [636, 637], "651": [636, 637], "static_random_uniform": [636, 637], "481": [636, 637], "74": [636, 637, 906, 963, 965], "0999": [636, 637], "static_shuffl": [636, 637], "static_argmax": [638, 639], "static_argmin": [638, 639], "static_nonzero": [638, 639], "static_wher": [638, 639], "static_unique_al": [640, 641], "static_unique_count": [640, 641], "classivi": [640, 641, 1431, 1465, 1467, 1550, 1555, 1558], "static_unique_invers": [640, 641], "static_unique_valu": [640, 641], "static_argsort": [642, 643], "static_searchsort": [642, 643], "static_sort": [642, 643], "static_var": [644, 645, 1581, 1603, 1606], "12666667": [644, 645, 1581, 1603, 1606], "11555555": [644, 645, 1581, 1603, 1606], "contian": [644, 645], "6666667": [644, 645, 1581, 1603, 1606], "static_al": [646, 647], "static_ani": [646, 647], "add_ivy_container_instance_method": 648, "containerexampl": [648, 649], "strongli": [650, 651, 1617, 1623], "welcom": [650, 651, 652, 1617, 1623], "skill": 650, "veteran": 650, "beginn": 650, "aspect": [650, 678, 1617], "guid": [650, 651, 652, 653, 673, 1617], "through": [650, 652, 653, 655, 660, 662, 663, 664, 665, 666, 667, 669, 673, 674, 675, 678, 679, 680, 691, 906, 935, 937, 1488, 1491], "journei": [650, 1617, 1623], "inclusvi": 650, "big": [650, 692], "team": [650, 651, 652], "board": 650, "contributor": [650, 651, 652, 674, 1617], "section": [650, 652, 653, 655, 656, 657, 659, 662, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 678, 679, 1550, 1551, 1554, 1555, 1558, 1563, 1566], "best": [650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 1144, 1221], "go": [650, 651, 652, 653, 655, 656, 660, 663, 664, 674, 678, 692, 1488, 1499], "finish": [650, 651, 655, 1617], "dive": [650, 652, 653, 664, 669, 674, 677, 678, 692, 1617], "environ": [650, 652, 654, 691], "basic": [650, 653, 654, 660], "fork": [650, 651, 1144, 1222], "doc": [650, 653, 657, 659, 660, 675, 678, 679, 1617], "document": [650, 652, 660, 662, 663, 664, 678, 680], "local": [650, 651, 654, 661, 665], "task": [650, 652, 691, 1484, 1485, 1486, 1487, 1617], "help": [650, 651, 653, 660, 662, 663, 666, 668, 669, 677, 678, 679, 690, 1144, 1149, 1581, 1600, 1602, 1616, 1617], "video": [650, 652, 656, 657, 659, 660, 662, 663, 665, 666, 667, 668, 669, 670, 671], "realli": [651, 669, 692], "contribut": [651, 652, 653, 675, 1623], "page": [651, 652, 676, 677, 680, 690, 1617, 1623], "explain": [651, 652, 653, 656, 657, 659, 660, 662, 663, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 1617, 1623], "prefer": [651, 661, 663, 667, 669], "git": [651, 652, 662], "submodul": [651, 652, 653, 654, 655, 661, 662, 665, 667, 671, 674, 675, 679, 1616, 1617], "com": 651, "unifyai": [651, 652, 654], "gh": 651, "your_fold": 651, "id": [651, 668, 669, 673, 873, 878], "cours": [651, 652, 660, 678, 692], "whatev": [651, 669, 692], "familiar": [651, 653], "sure": [651, 652, 653, 661, 662], "elig": 651, "free": [651, 652, 653, 654, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 674, 691, 1617], "student": 651, "licenc": 651, "peopl": [651, 652, 655], "seem": [651, 679, 680, 692], "miss": [651, 660, 662, 668, 669, 673], "explicit": [651, 654, 669, 670, 672, 675, 692], "remind": 651, "channel": [651, 652, 653, 654, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 1144, 1186], "pace": 651, "suggest": [651, 652, 656, 662], "packag": [651, 654, 663, 673, 692], "ensur": [651, 652, 653, 656, 657, 658, 660, 662, 663, 664, 667, 668, 670, 672, 673, 1144, 1215], "pypi": [651, 653, 692], "person": [651, 652], "experi": [651, 676, 678, 692], "avoid": [651, 652, 658, 662, 666, 667, 669, 673, 906, 995, 997, 1043, 1045], "pip": [651, 691, 1617], "instal": [651, 652, 654, 673, 691, 1617], "abil": [651, 676, 692], "perhap": [651, 677, 678, 679, 692], "track": [651, 652, 1488, 1500], "command": [651, 654, 661, 1617], "ivy_dev": [651, 652, 654], "setup": [651, 652], "click": [651, 652, 659, 676, 1617], "icon": [651, 652], "panel": 651, "select": [651, 652, 653, 662, 672, 675, 677, 680, 692], "drop": [651, 692], "down": [651, 662, 1616], "path": [651, 654, 664, 1144, 1244], "manual": [651, 652, 662, 679, 1488, 1489, 1498, 1499], "requir": [651, 653, 654, 656, 657, 658, 659, 660, 662, 663, 664, 667, 668, 670, 671, 675, 677, 692, 730, 731, 906, 1119, 1121, 1328, 1345, 1347, 1431, 1472, 1474], "cmd": [651, 654], "directori": [651, 652, 654, 662, 663, 873, 874, 1144, 1235, 1244], "folder": [651, 652, 654, 656, 661, 662, 665], "python3": [651, 652, 654], "script": [651, 652, 654, 660, 675, 692], "bat": [651, 652, 654], "bin": [651, 652, 654, 661], "mac": [651, 652, 654], "linux": [651, 652, 654], "virtualenv": 651, "o": [651, 655, 675, 1144, 1152], "note": [651, 652, 653, 656, 659, 660, 662, 663, 664, 670, 793, 858, 906, 1043, 1045, 1099, 1101, 1328, 1345, 1347, 1389, 1392, 1431, 1472, 1474, 1550, 1555, 1558, 1581, 1588, 1590], "tick": [651, 652], "ivy_test": [651, 652, 664], "test_array_api": [651, 652, 661, 662], "cd": [651, 652, 654], "txt": 651, "visual": [651, 673, 692], "jetbrain": 651, "remot": 651, "mitig": 651, "potenti": [651, 652, 674, 906, 995, 997, 1043, 1045], "conflict": [651, 652, 678], "yet": [651, 692], "particular": [651, 652, 656, 658, 660, 662, 663, 664, 667, 670, 672, 906, 907, 909, 1059, 1061], "system": [651, 652, 692, 1328, 1385, 1387], "instruct": [651, 653], "desktop": 651, "wsl": 651, "powershel": 651, "admin": 651, "visit": [651, 652], "link": [651, 663], "profession": 651, "execut": [651, 652, 654, 660, 669, 672, 675, 677, 680, 692, 873, 874, 1144, 1256, 1616], "deploy": 651, "top": [651, 652, 662, 663, 678, 679, 1617], "press": [651, 652, 678, 1617], "ok": 651, "caus": [651, 652, 660, 662, 669, 672, 673, 692], "earlier": [651, 652], "might": [651, 652, 653, 656, 660, 662, 667, 670, 672, 675, 677, 678, 793, 858, 1144, 1171, 1616], "virtualis": 651, "sudo": 651, "apt": 651, "ca": 651, "certif": 651, "curl": 651, "gnupg": 651, "lsb": 651, "mkdir": 651, "keyr": 651, "fssl": 651, "download": [651, 662], "gpg": 651, "dearmor": 651, "echo": 651, "deb": 651, "arch": 651, "dpkg": 651, "architectur": [651, 680, 692], "lsb_releas": 651, "tee": 651, "null": 651, "ce": 651, "cli": 651, "containerd": 651, "io": 651, "compos": [651, 662, 669, 692], "plugin": 651, "systemctl": 651, "permiss": 651, "relat": [651, 652, 658, 662, 673, 691, 873], "simplest": [651, 660, 662], "becaus": [651, 652, 657, 659, 662, 663, 664, 665, 666, 667, 668, 670, 671, 672, 675, 679, 680, 692], "header": [651, 652], "recommend": [651, 652, 666, 906, 1059, 1061, 1063, 1065, 1099, 1101, 1581, 1588, 1590], "bar": 651, "pytest": [651, 652, 662, 664], "checkbox": [651, 653], "q": [651, 652, 655, 692, 1307, 1327, 1328, 1345, 1347, 1377, 1379], "fail": [651, 652, 653, 660, 661, 662, 673], "headach": 651, "arm": [651, 652], "m1": 651, "instead": [651, 652, 653, 657, 659, 660, 662, 664, 665, 667, 669, 672, 675, 677, 678, 692], "featur": [651, 652, 656, 657, 663, 678, 692, 1617], "vm": 651, "azur": 651, "cloud": [651, 691], "dockerfil": [651, 654], "longer": [651, 662, 670, 672], "worri": 651, "platform": 651, "agnost": [651, 657, 668, 675, 677, 680, 692, 1617], "usual": [651, 662, 663], "studio": 651, "favourit": 651, "theme": 651, "too": [651, 652, 653, 673, 692, 906, 919, 921, 1079, 1081], "done": [651, 652, 660, 662, 673, 678], "unsupport": [651, 663, 673, 793, 832, 833, 873, 885, 1144, 1187, 1188], "slow": 651, "ipad": 651, "long": [651, 652, 660, 675, 1307, 1325], "browser": 651, "cool": [651, 656], "requisit": 651, "head": [651, 1307, 1326, 1617], "pane": [651, 652], "readi": 651, "begin": [651, 661, 1488, 1489, 1499], "outlin": [651, 652, 653, 655, 659, 662, 665, 669, 672], "dropdown": 651, "tab": [651, 678, 1617], "master": [651, 652], "view": [651, 652, 733, 748, 750, 1307, 1313], "built": [651, 652, 662, 676, 733, 734, 735, 1616], "bottom": 651, "box": 651, "patient": [651, 653], "upto": [651, 652], "minut": 651, "launch": 651, "That": [651, 652, 662, 677, 678, 679, 906, 1099, 1101], "approach": [651, 652, 662, 665, 669, 670, 677, 678, 692], "colour": 651, "applic": [651, 667, 670, 671, 679, 1307, 1326, 1327, 1488, 1494, 1500], "good": [651, 652, 653, 654, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 668, 669, 670, 671, 672, 675, 679], "chanc": 651, "vscode": 651, "explor": [651, 652, 676, 680, 691], "troubleshoot": 651, "sometim": [651, 652, 662, 663], "ever": [651, 652, 653, 654, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672], "bit": [651, 660, 662, 665, 669, 675, 677, 793, 824, 825, 827, 835, 837, 906, 947, 949, 951, 953, 959, 961, 1581, 1594, 1596, 1600, 1602], "usr": 651, "under": [651, 652, 655, 659, 660, 661, 662, 663, 665, 669, 674, 675, 678, 680, 692], "flask": 651, "toolbar": [651, 652], "_array_modul": [651, 661], "array_api_test": [651, 652, 661], "2022": 651, "conftest": 651, "comment": [651, 652, 653, 661, 673], "via": [651, 652, 656, 669, 670, 671, 672, 675, 677, 678, 691, 1488, 1489, 1498, 1499], "refresh": 651, "nutshel": [651, 657], "hook": 651, "lint": 651, "fix": [651, 652], "attempt": [651, 673, 692], "succe": 651, "problemat": 651, "proce": [651, 652, 653, 654, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672], "modifi": [651, 652, 653, 656, 659, 665, 670, 671, 673, 675], "properli": [651, 655], "enter": [651, 652, 657, 667, 668, 670, 671, 873, 1265, 1291, 1296, 1306], "unsur": [651, 652, 653, 654, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672], "feel": [651, 652, 653, 654, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 674, 1617], "server": [652, 1617], "context": [652, 660, 662, 670, 671, 873, 1144, 1222, 1307, 1326], "suitabl": [652, 656, 669, 1567, 1572, 1575], "quick": [652, 655, 679], "tendenc": 652, "land": 652, "end": [652, 656, 672, 674, 691, 692, 733, 734, 735, 906, 935, 937, 1617, 1623], "world": 652, "come": [652, 662, 663, 679, 690, 1616, 1617, 1623], "fly": 652, "hard": [652, 677], "respons": [652, 654], "internship": 652, "trigger": [652, 653], "unansw": 652, "respond": 652, "someon": [652, 692], "strive": [652, 662, 692], "repli": 652, "bug": [652, 662], "serv": [652, 657, 662, 665, 668, 669, 674, 1616, 1617], "suspect": 652, "behaviour": [652, 656, 657, 659, 662, 663, 668, 669, 672, 677], "observ": 652, "confid": 652, "wrong": 652, "someth": [652, 656, 678, 679, 692], "bet": 652, "act": [652, 660, 663, 692], "placehold": [652, 657, 668, 673, 1488, 1500, 1616], "mark": [652, 653, 662], "ii": [652, 1581, 1582, 1584], "iii": 652, "titl": [652, 1617], "issue_numb": 652, "delet": [652, 654, 1265, 1296], "No": [652, 1265, 1296], "progress": [652, 680], "pr": [652, 653, 661], "soon": [652, 690, 692, 1617, 1623], "solut": [652, 662, 669, 1328, 1385, 1387], "review": [652, 653, 656, 660], "merg": 652, "dai": 652, "close": [652, 659, 662, 906, 995, 997, 1043, 1045, 1103, 1105, 1328, 1389, 1392], "likewis": [652, 657, 659, 665, 669, 670, 678], "freed": 652, "purpos": [652, 654, 657, 658, 660, 662, 665, 667, 668, 669, 674, 677, 906, 995, 997, 1043, 1045, 1616, 1617], "short": [652, 675, 679, 1307, 1325], "basi": [652, 661, 678], "situat": [652, 680], "upon": [652, 660, 662, 672, 692], "period": 652, "unabl": 652, "obvious": 652, "reflect": [652, 662, 668], "qualiti": 652, "hypothet": 652, "frustrat": 652, "delai": 652, "busi": 652, "fine": [652, 660, 677, 680], "inact": 652, "me": 652, "unfairli": 652, "investig": 652, "primarili": [652, 906, 1099, 1101], "invit": 652, "roadmap": 652, "mainli": [652, 655, 676, 678, 1616], "fall": [652, 670, 674, 1617], "extend": [652, 656, 657, 659, 666, 692], "ideal": [652, 672, 678], "Such": [652, 662], "describ": [652, 662, 675, 680, 1581, 1582, 1584, 1594, 1596, 1597, 1599, 1600, 1602], "easier": [652, 656, 668, 670, 1616], "regular": 652, "forth": 652, "rare": [652, 671, 692], "scenario": [652, 662], "unfortun": 652, "redund": 652, "Then": [652, 654, 658, 663, 667, 692], "practic": 652, "separ": [652, 662, 664, 668, 669, 673, 675, 677, 678], "branch": [652, 692, 730, 731, 906, 935, 937], "role": [652, 663, 676], "date": 652, "upstream": [652, 661], "complic": [652, 664, 675], "merge_with_upstream": 652, "sh": [652, 661], "name_of_your_branch": 652, "resolv": [652, 675, 1581, 1594, 1596, 1600, 1602], "clone": [652, 654], "push": [652, 661, 673], "abort": 652, "tediou": [652, 660], "resolut": [652, 793, 825, 827], "stash": 652, "reinstat": 652, "fetch": 652, "uncommit": 652, "unstag": 652, "untrack": 652, "comprehens": 652, "explan": [652, 657, 659, 663, 669, 677], "atlassian": 652, "tutori": [652, 663], "wrote": 652, "piec": [652, 665, 667, 668, 675], "tag": 652, "navig": [652, 655], "blame": 652, "revis": 652, "author": [652, 653, 1617], "eg": [652, 662], "past": 652, "grep": 652, "commit_id": 652, "handi": [652, 662], "histori": 652, "toggl": 652, "vertic": 652, "highlight": [652, 660], "whenev": [652, 662, 664, 667, 678], "think": [652, 660], "gain": [652, 674, 679], "quit": [652, 659, 660, 662, 665, 667, 668], "yourself": [652, 653, 662, 691], "simpler": 652, "cannot": [652, 658, 663, 666, 670, 680], "least": [652, 660, 662, 665, 668, 1328, 1353, 1355], "approv": 652, "hash": [652, 678], "detail": [652, 653, 656, 657, 661, 662, 664, 665, 666, 667, 669, 677, 678, 679, 733, 748, 750, 1550, 1551, 1554, 1555, 1558, 1563, 1566], "cancel": 652, "speedup": 652, "button": 652, "unavail": 652, "final": [652, 659, 660, 665, 668, 670, 672, 673, 674, 678, 733, 757, 758, 760, 761, 1144, 1186], "tickbox": 652, "corner": 652, "span": 652, "intent": [652, 672], "larg": [652, 678, 906, 919, 921, 1079, 1081], "discourag": 652, "philosophi": 652, "increment": [652, 1144, 1214], "frequent": [652, 653], "valuabl": 652, "infrequ": 652, "earli": [652, 1617], "wast": 652, "spot": [652, 660, 665], "mistak": [652, 673], "propos": 652, "mountain": 652, "advoc": [652, 692], "individu": [652, 653, 665, 672], "style": [652, 1532, 1541, 1544], "actual": [652, 655, 665, 672, 674, 679, 692], "aim": [652, 662, 674], "subsect": 652, "session": [652, 1617], "block": [652, 662, 665, 673, 674, 676, 680, 692, 873, 1265, 1291, 1306, 1616, 1617], "edit": [652, 653], "beauti": 652, "particularli": [652, 662, 678, 692], "concern": [652, 655, 660, 669, 672, 674], "effici": [652, 657, 662, 665, 667, 669, 672, 673, 675, 678, 692], "difficult": [652, 662, 692, 1550, 1551, 1554, 1555, 1558, 1563, 1566], "undo": 652, "stress": 652, "frequenc": [652, 1144, 1186], "advantag": 652, "nifti": 652, "reassur": 652, "isol": 652, "bash": [652, 654], "shell": 652, "rm": 652, "fact": [652, 662, 678], "mount": 652, "local_path_to_ivi": 652, "subfold": [652, 656, 662, 664], "insid": [652, 654, 656, 662, 669, 670], "wide": [652, 662], "dep": 652, "fresh": 652, "arsen": 652, "exec": 652, "rf": 652, "cp": 652, "ivy_contain": 652, "test_ivi": [652, 662, 664], "test_funct": [652, 662], "test_cor": 652, "test_imag": 652, "test_random_crop": 652, "test_creation_funct": 652, "test_arang": 652, "variou": [652, 657, 659, 662, 667, 691, 1616], "gpu": [652, 671, 677, 873, 878, 883, 887, 889, 891, 893, 894, 895, 902, 904], "hypothesi": [652, 653, 664], "text": [652, 653, 659, 660], "ctrl": 652, "prompt": [652, 1617], "whole": 652, "cursor": 652, "alt": 652, "locat": [652, 656, 662, 664, 666, 671, 1510, 1511, 1513, 1567, 1572, 1575], "blog": 652, "debug": [652, 662, 669, 678], "breakpoint": 652, "gutter": 652, "caret": 652, "f8": 652, "f9": 652, "Into": 652, "f7": 652, "smart": 652, "sever": [652, 656, 692, 1328, 1349, 1351], "interest": 652, "consol": [652, 677], "fragment": 652, "pychram": 652, "depth": [652, 678, 679, 680, 691, 1144, 1203, 1224, 1488, 1500], "dummi": 652, "wherein": [652, 662], "failur": [652, 661], "wherebi": [653, 1488, 1500], "broad": 653, "todo": 653, "commit": [653, 660, 661, 662], "NOT": [653, 906, 1059, 1061], "resourc": 653, "cover": [653, 659, 660, 662, 665, 667, 674], "lambda": [653, 675, 678, 1265, 1273, 1281, 1297], "direct": [653, 663, 679, 680, 691, 1567, 1577, 1579], "bind": [653, 669], "aforement": 653, "categori": [653, 656, 663, 668, 669, 670, 674, 1617], "parent": [653, 677, 1265, 1291, 1306], "thorough": [653, 657, 659, 662, 664], "produc": [653, 656, 662, 1307, 1327], "add_reformatting_checklist_": 653, "category_nam": [653, 657, 659, 665, 670, 671], "autom": [653, 662, 1616, 1617], "bot": 653, "proper": 653, "markdown": 653, "symbol": 653, "emoji": 653, "legend": 653, "stuck": 653, "elabor": 653, "struggl": 653, "assigne": 653, "pai": 653, "face": [653, 675], "refrain": 653, "transpil": [653, 663, 674, 676, 1616, 1617, 1623], "verifi": [653, 658, 662, 670, 671, 1617, 1623], "chosen": [653, 733, 734, 735, 906, 935, 937, 1532, 1546, 1549], "thu": [653, 663, 906, 959, 961, 1095, 1097, 1099, 1101, 1328, 1345, 1347], "meanwhil": 653, "complex": [653, 660, 663, 678, 679, 680, 692, 1144, 1238, 1240, 1328, 1345, 1347, 1389, 1392, 1616], "composit": [653, 655, 662, 664, 666, 668, 669, 672, 675, 679, 680, 692, 1616], "reselect": 653, "builder": [654, 690, 692, 1616, 1617], "maco": 654, "ubuntu": 654, "uid": 654, "make_docs_without_dock": 654, "synchron": 654, "rest": [654, 680], "remove_doc": 654, "privat": [654, 662], "fulfil": [654, 674, 1617], "autogenerated_sourc": 654, "png": [654, 678], "_imag": 654, "lastli": 654, "rst": 654, "partial_sourc": 654, "conf": 654, "create_rst_fil": 654, "overal": [654, 659, 669, 670, 671, 680], "markup": 654, "extract": [654, 656, 658], "get_functions_and_class": 654, "doctr": 654, "readm": [654, 692], "module_nam": 654, "copy_readme_to_rst": 654, "tabl": 654, "toc": 654, "tree": 654, "append_toctree_to_rst": 654, "create_index_rst": 654, "\u03c0": [654, 732, 906, 911, 913, 923, 925, 931, 933, 935, 937], "namespac": [654, 656, 664, 667, 670, 675, 680], "who": [655, 674, 692], "target": [655, 674, 678, 679, 680, 873, 877, 1617], "hood": [655, 660, 662, 665, 669, 674, 675, 678, 680], "weed": [655, 674], "tour": 655, "primari": [655, 662, 666, 672, 692, 1616], "dynam": [655, 670, 671, 672, 675, 730, 731], "runtim": [655, 662, 873], "helper": [655, 664, 678, 793, 812, 1616], "borrow": 655, "frontend": [655, 670, 674, 676, 1616], "taken": [656, 673, 680, 1328, 1341, 1343], "compil": [656, 669, 674, 676, 692, 1616, 1617], "meta": [656, 668, 1485, 1486, 1487], "overlap": 656, "judgement": 656, "some_namespac": 656, "some_backend": 656, "another_backend": 656, "break": [656, 657, 673, 692, 1617], "anyth": [656, 662, 1617], "refactor": 656, "ongo": 656, "file_nam": [656, 662], "my_func": [656, 660], "my": 656, "cooler": 656, "extern": [656, 657, 662], "usabl": [656, 657], "sole": [656, 657], "flexibl": [656, 657], "forward": [656, 659, 662, 680, 691, 692], "something_cool": 656, "backend_nam": [657, 659, 665, 666, 667, 670, 671], "adress": 657, "conveni": [657, 664, 670, 671, 676, 678, 679, 1616], "revisit": 657, "dedic": [657, 677, 679, 1265, 1302, 1305], "four": [657, 660, 662, 665, 670, 678], "to_native_arrays_and_back": [657, 667, 675, 693], "handle_out_argu": [657, 667, 670, 671, 672, 675, 693], "tf": [657, 658, 663, 668, 670, 671, 672, 675, 680, 692, 1616, 1617], "outputs_to_ivy_arrai": [657, 667, 668, 670, 671, 693], "infer_dtyp": [657, 667, 670, 671, 693], "infer_devic": [657, 667, 670, 671, 693], "jnp": [657, 658, 670, 671, 672, 675, 680, 1617], "jaxarrai": [657, 658, 670, 671, 672, 675], "wherea": [657, 660, 662, 665, 668, 670, 671, 680], "__sub__": [657, 660, 668, 669, 677], "__mul__": [657, 660, 668, 669, 677], "__div__": 657, "permit": [657, 662, 668], "dicat": 657, "addition": [657, 669, 672], "omit": [657, 672, 1550, 1551, 1554, 1555, 1558, 1563, 1566], "wrapper": [657, 667, 668, 669, 670, 672, 677, 1616], "contrast": [657, 659], "futher": 657, "absenc": [657, 669], "pep": 657, "484": 657, "annot": [657, 673], "dictat": [657, 660, 668, 672], "brittl": 657, "intend": [657, 1581, 1600, 1602], "subset": [657, 659, 662, 675], "freeli": 657, "consum": [657, 662, 664, 669], "inde": [657, 692], "technic": [657, 672, 692], "original_typ": 657, "cumbersom": 657, "readabl": [657, 658, 668, 669, 677, 678], "clean": [658, 673, 675, 676, 678], "_assert_fill_value_and_dtype_are_compat": 658, "isinst": [658, 679, 680, 1144, 1246, 1249], "_to_devic": 658, "experiment": [658, 675], "_is_valid_dtypes_attribut": 658, "supported_dtyp": 658, "unsupported_dtyp": [658, 663, 670], "fn_supported_dtyp": 658, "fn_unsupported_dtyp": 658, "backend_str": 658, "current_backend_str": [658, 675, 677, 1144], "function_supported_dtyp": [658, 793], "function_unsupported_dtyp": [658, 793], "invalid_dtyp": [658, 670, 793], "account": 659, "instanti": 659, "firstli": [659, 660, 665, 667, 668, 670, 672, 678], "templat": [659, 662, 1617], "spec": [659, 660], "array_api": 659, "preview": 659, "render": 659, "incorrectli": [659, 673], "onlin": [659, 660, 1617], "domain": [659, 906, 911, 913, 915, 917, 923, 925, 927, 929, 931, 933, 935, 937, 971, 973, 975, 977, 991, 993, 995, 997, 1035, 1037, 1039, 1041, 1047, 1049, 1111, 1113, 1115, 1117, 1119, 1121, 1132, 1135, 1136, 1139], "codomain": [659, 906, 911, 913, 915, 917, 923, 925, 927, 929, 931, 933, 935, 937, 971, 973, 975, 977, 991, 993, 995, 997, 1035, 1037, 1039, 1041, 1047, 1049, 1111, 1113, 1115, 1117, 1119, 1121, 1132, 1135, 1136, 1139], "operand": [659, 663, 669, 906, 911, 913, 915, 917, 919, 921, 923, 925, 927, 929, 931, 933, 935, 937, 963, 965, 967, 969, 971, 973, 975, 977, 991, 993, 995, 997, 999, 1001, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1079, 1081, 1095, 1097, 1099, 1101, 1103, 1105, 1111, 1113, 1115, 1117, 1119, 1121, 1132, 1135, 1136, 1139, 1140, 1143, 1581, 1582, 1584, 1585, 1587, 1591, 1593, 1600, 1602], "But": [659, 667, 669, 672, 680], "needless": 659, "info": [659, 1617], "renam": 659, "judgment": 659, "beyond": [659, 1431, 1461, 1463], "func_nam": [659, 660, 665], "pure": [659, 677, 680, 692], "themselv": [659, 665, 669, 670, 671, 679, 1488, 1489], "operator_nam": 659, "succinct": 659, "contstructor": 659, "though": [659, 665, 670, 678, 692], "_forward": [659, 675, 678, 679, 1617], "former": 659, "explicitli": [659, 661, 665, 666, 667, 668, 669, 672, 675, 692, 1328, 1345, 1347], "latter": [659, 666], "docst": 659, "eight": [660, 674], "static_": 660, "op_nam": 660, "__r": 660, "__truediv__": [660, 668, 669], "recap": [660, 669, 679], "combinatorili": 660, "variat": [660, 662], "grid": [660, 662, 691, 733, 763, 765], "vari": [660, 662, 669, 677, 1550, 1551, 1554, 1555, 1558, 1563, 1566], "unus": [660, 672, 673, 730, 731], "excess": [660, 666], "okai": [660, 675], "showcas": [660, 691], "demonstr": [660, 677], "replic": [660, 670], "meant": 660, "imaginari": 660, "some_flag": 660, "another_flag": 660, "jointli": 660, "three": [660, 662, 663, 669, 674, 733, 763, 765, 1617], "x0": [660, 1144, 1151], "procedur": 660, "sens": [660, 677], "5574077": 660, "1850398": 660, "5463025": 660, "8422884": 660, "91601413": 660, "9647598": 660, "3738229": 660, "1597457": 660, "0963247": 660, "9955841": 660, "3278579": 660, "multi": [660, 674, 692, 1307, 1326, 1328, 1333, 1335, 1617, 1623], "seper": [660, 1144, 1186], "pars": [660, 692], "satisfi": [660, 1328, 1414, 1417], "far": [660, 671, 676, 1488, 1489, 1499], "asid": [660, 691], "irrelev": [660, 670], "increasingli": 660, "14254655": 660, "1578213": 660, "380515": 660, "trivial": 660, "exlud": 660, "action": [660, 662], "failing_fn_nam": 660, "minutest": 660, "suffici": 660, "segment": 660, "fault": 660, "thoroughli": 661, "ci": [661, 662, 692], "insert_chosen_backend": 661, "array_modul": 661, "typic": [661, 665], "On": [662, 663, 673, 676, 680], "fixtur": 662, "hit": [662, 675], "eleg": 662, "intellig": 662, "rang": [662, 675, 678, 679, 680, 733, 734, 735, 757, 758, 760, 761, 1265, 1296, 1550, 1551, 1554, 1581, 1594, 1596, 1600, 1602, 1617], "cach": [662, 665, 873, 877, 1144, 1154], "unexplor": 662, "known": 662, "repeatedli": [662, 1488, 1497], "upload": 662, "artifact": 662, "parametr": 662, "statement": [662, 673, 692], "plai": [662, 663, 680], "kind": [662, 675, 692, 793, 825, 827, 835, 837, 906, 1095, 1097, 1581, 1594, 1596, 1600, 1602], "exhaust": 662, "impli": [662, 1550, 1551, 1554, 1555, 1558, 1563, 1566], "bespok": 662, "_array_or_typ": 662, "standalon": [662, 1616], "test_default_int_dtyp": 662, "clariti": 662, "varieti": [662, 670, 671], "valid_int_dtyp": [662, 664], "uint8": [662, 670, 793, 808, 810, 819, 852, 855, 859, 861, 863, 866, 871, 872], "uint16": [662, 670, 675, 793, 813, 819, 824, 832, 833, 835, 837, 852, 855, 1581, 1594, 1596, 1600, 1602], "uint32": [662, 670, 675, 793, 819, 832, 833, 835, 837, 871, 1581, 1594, 1596, 1600, 1602], "uint64": [662, 670, 675, 793, 819, 832, 833, 835, 837, 839, 859, 861, 863, 866, 1581, 1594, 1596, 1600, 1602], "custom_strategi": 662, "st": [662, 664], "sampled_from": [662, 664], "min_siz": 662, "max_siz": 662, "referenc": 662, "print_hypothesis_exampl": 662, "searchstrategi": 662, "randomis": 662, "simplist": 662, "intricaci": 662, "briefli": [662, 665, 678], "bound": [662, 675], "mechan": [662, 690, 692, 1617], "power": [662, 677, 678, 679, 906, 959, 961, 991, 993, 1095, 1097, 1144, 1199, 1230, 1242, 1328, 1360, 1362, 1488, 1494], "math": [662, 663, 672, 680, 906, 1019, 1021, 1023, 1025, 1617], "inclus": [662, 672, 733, 734, 735, 1510, 1515, 1517], "width": 662, "losslessli": 662, "mostli": 662, "one_of": 662, "datum": 662, "pipe": 662, "overload": 662, "shorthand": 662, "min_valu": [662, 664], "max_valu": [662, 664], "input_dtyp": [662, 664], "as_vari": [662, 664], "reject": 662, "flatmap": 662, "suppos": 662, "interact": [662, 1617], "dataobject": 662, "test_argsort": 662, "decor": [662, 664, 665, 667, 669, 670, 671, 672], "initialis": [662, 873], "snippet": 662, "dtype_and_x": [662, 664], "dtype_and_valu": [662, 664], "valid_float_dtyp": [662, 664], "list_of_length": [662, 664], "num_positional_arg": [662, 664], "instance_method": 662, "test_leaky_relu": 662, "num_posit": 662, "indirectli": 662, "advis": 662, "seri": [662, 663], "9433925": 662, "401298464324817e": 662, "574352379": 662, "99999": 662, "2250738585072014e": 662, "308": [662, 793, 825, 827], "103515625e": 662, "seamlessli": 662, "edg": [662, 1431, 1432, 1434, 1440, 1442, 1481, 1483, 1617], "encount": 662, "criterion": 662, "straight": [662, 677, 1617], "array_valu": 662, "valid_ax": 662, "hand": [662, 665, 673, 692], "craft": 662, "polici": [662, 691], "hoc": 662, "overview": [662, 674, 691], "array_dtyp": 662, "array_bool": [662, 664], "na": 662, "test_concat": 662, "test_devic": 662, "array_shap": 662, "test_manipul": 662, "common_shap": 662, "test_lay": 662, "size_bound": 662, "precis": [662, 793, 825, 827, 906, 1079, 1081, 1119, 1121], "283405296074752": 662, "564049465049088": 662, "0417876997507982e": 662, "allow_inf": 662, "min_num_dim": [662, 664], "wherev": 662, "reshape_shap": 662, "stand": 662, "alon": [662, 873, 891, 905], "fashion": 662, "some_sequ": 662, "allow_subnorm": 662, "exclude_min": 662, "960464477539063e": 662, "coverag": 662, "allow_nan": 662, "get_shap": [662, 664], "allow_non": [662, 664], "max_num_dim": [662, 664], "min_dim_s": [662, 664], "none_or_list_of_float": 662, "200": [662, 678], "199": [662, 906, 927, 929], "99999999999997": 662, "000000000000002": 662, "125": 662, "43759670925832": 662, "get_mean_std": 662, "probabilist": 662, "811428143185347e": 662, "none_or_list_float": 662, "get_bound": 662, "arrays_valu": 662, "put": [662, 692], "36418": 662, "213": 662, "21716926": 662, "get_prob": 662, "099609375": 662, "get_axi": 662, "number_positional_argu": 662, "mind": [662, 668, 669], "bodi": 662, "possibli": [662, 692, 1144, 1246, 1249], "test_valu": [662, 664], "enough": [662, 677, 678, 679], "justifi": 662, "unduli": 662, "labori": 662, "straightforward": [662, 678], "report": 662, "test_demo": 662, "falsifi": 662, "failing_test": 662, "traceback": 662, "assertionerror": [662, 1265, 1291, 1306], "shrink": 662, "prescrib": 662, "behavior": [662, 669, 670, 675, 692, 906, 1095, 1097, 1099, 1101, 1550, 1551, 1554, 1555, 1558, 1563, 1566], "identifi": 662, "closest": [662, 793, 813, 906, 967, 969, 999, 1001, 1003, 1005, 1103, 1105, 1140, 1143], "checkout": 662, "scratch": 662, "databas": 662, "therebi": 662, "event": [662, 1617], "test_gelu": 662, "test_fil": 662, "brief": 662, "phase": [662, 692], "notabl": 662, "displai": [662, 669, 678], "verbos": [662, 675, 1617, 1661], "newer": 662, "max_exampl": 662, "impact": [662, 679], "deadlin": 662, "weird": 662, "truth": [662, 906, 983, 985, 1007, 1009, 1011, 1013, 1027, 1029, 1031, 1033, 1087, 1089], "opt": [662, 666, 672], "defer": [662, 665, 667, 668, 669, 670, 671, 672], "suffic": [662, 667], "catch": [662, 1144, 1171], "systemat": 662, "safeguard": 662, "inabl": 662, "num_gpu": [662, 671, 873], "lax": [663, 664, 680, 692], "bfloat16": [663, 670], "categoris": 663, "notic": [663, 664], "mathematical_funct": 663, "arithmetic_oper": 663, "same_kind": [663, 664], "subok": [663, 664], "as_ivy_dtyp": [663, 793], "is_arrai": [663, 1144], "slightli": [663, 669, 675, 679], "recov": 663, "obtain": 663, "trigonometric_funct": 663, "pointwise_op": 663, "meet": 663, "criteria": 663, "incorpor": [663, 678], "resembl": 663, "concaten": [663, 675, 678, 1144, 1186, 1431, 1436, 1438, 1617], "manipulation_routin": 663, "joining_arrai": 663, "indexing_slicing_joining_mutating_op": 663, "cat": [663, 675, 680], "grasp": 663, "youtub": 663, "jump": 664, "knowledg": 664, "strategi": 664, "test_frontend_funct": 664, "heavi": 664, "lift": 664, "np_frontend_help": 664, "behav": [664, 672, 677], "valid_numeric_dtyp": 664, "pick": 664, "fn_tree": 664, "nn": [664, 680, 733, 763, 765, 1617], "test_frontend": 664, "test_jax": 664, "test_jax_lax_oper": 664, "available_dtyp": 664, "test_jax_lax_tan": 664, "as_variable_flag": 664, "with_out": 664, "native_array_flag": 664, "test_numpi": 664, "test_mathematical_funct": 664, "test_np_trigonometric_funct": 664, "test_numpy_tan": 664, "handle_where_and_array_bool": 664, "test_tensorflow": 664, "test_tf_funct": 664, "ivy_tf": 664, "test_tensorflow_tan": 664, "test_torch": 664, "test_pointwise_op": 664, "intersect": [664, 691], "ivy_torch": 664, "test_torch_tan": 664, "_dtype": [664, 677], "_fill_valu": 664, "elif": [664, 672], "max_dim_s": 664, "test_jax_lax_ful": 664, "uint": [664, 793, 819, 852, 855, 866, 871], "creation_routin": 664, "test_from_shape_or_valu": 664, "test_numpy_ful": 664, "test_tensorflow_ful": 664, "discrep": 664, "test_creation_op": 664, "_requires_grad": 664, "requires_grad": 664, "test_torch_ful": 664, "accommod": 664, "unsign": [664, 675, 1581, 1594, 1596, 1600, 1602], "categor": [665, 671], "mutual": [665, 669], "venn": 665, "diagram": 665, "light": [665, 692, 1616], "log_pr": [665, 669, 672], "array_arg": 665, "whatsoev": [665, 669, 1616], "outsid": [665, 671, 673, 677, 1431, 1432, 1434, 1472, 1474], "cache_fn": [665, 1144], "deal": [665, 692], "concurr": [665, 669], "modif": 665, "handle_nest": [665, 667, 669, 675, 693], "group": [665, 669], "set_default_dtyp": [665, 670, 793], "default_dtyp": [665, 670, 793], "get_all_arrays_on_dev": 665, "nested_map": [665, 1488], "index_nest": [665, 1488], "implicit_backend": [666, 675], "unless": [666, 671, 672, 692, 906, 1079, 1081, 1144, 1224, 1328, 1364, 1366], "__dict__": [666, 675], "ivy_original_dict": [666, 675], "unmodifi": [666, 670], "fallback": 666, "achiev": [667, 673, 678, 680, 1616], "inputs_to_native_arrai": [667, 668, 693], "counterpart": [667, 669], "inputs_to_ivy_arrai": [667, 693], "heavili": [667, 692], "nearli": 667, "anywai": [667, 668], "facilit": 667, "integer_array_to_float": [667, 693], "topic": [667, 677], "_data": [668, 677], "organiz": [668, 669], "inherit": [668, 669, 677, 692, 1616], "bear": [668, 669, 670], "necessarili": [668, 669], "although": [668, 669], "underpin": [668, 669, 675], "programmat": [668, 669], "backup": [668, 669], "accident": [668, 669], "absent": [668, 669], "perk": [668, 669], "auto": [668, 669, 678], "throw": [668, 677], "imposs": 668, "coupl": [668, 677, 679], "secondli": [668, 670], "five": [669, 678], "decis": [669, 675, 677], "arbitrarili": [669, 678], "__repr__": 669, "control": [669, 670, 672, 677, 678, 691, 1616], "__getattr__": 669, "underli": [669, 906, 943, 945, 955, 957, 963, 965, 1067, 1069], "__setattr__": 669, "__contains__": 669, "__getstate__": 669, "__setstate__": 669, "unpickl": 669, "lefthand": 669, "righthand": 669, "presenc": [669, 672], "intuit": [669, 678, 679], "chronolog": 669, "had": [669, 672], "sequenti": [669, 679], "flow": [669, 691], "implic": 669, "eager": [669, 692], "children": 669, "shallowest": 669, "deepest": 669, "all_dtyp": 670, "all_numeric_dtyp": 670, "all_int_dtyp": 670, "all_float_dtyp": 670, "thirdli": 670, "native_float32": [670, 793, 839, 872], "importantli": [670, 677, 680, 691], "arguabl": [670, 671], "compound": 670, "overflow": [670, 906, 919, 921, 1581, 1600, 1602], "default_int_dtyp": [670, 793], "default_float_dtyp": [670, 793], "settabl": [670, 671], "set_default_int_dtyp": [670, 793], "set_default_float_dtyp": [670, 793], "arang": [670, 733, 757, 758, 760, 761, 1581, 1582, 1584, 1617], "mx": [670, 671, 672, 1617], "nd": [670, 671, 672, 1617], "deleg": 670, "shape_to_tupl": 670, "donot": 670, "superset": [670, 692], "idx": [671, 677, 1144, 1149], "tpu": [671, 873, 894, 903], "get_all_ivy_arrays_on_dev": [671, 873], "aliv": [671, 873, 886, 890, 892, 1144, 1197, 1223, 1225], "total_mem_on_dev": [671, 873], "dev_util": [671, 873], "num_cpu_cor": [671, 873], "default_devic": [671, 873, 890, 893, 894, 904], "dual": 671, "thrown": [671, 692, 1144, 1215], "set_default_devic": [671, 873, 904], "program": 672, "strictli": 672, "ration": 672, "speak": 672, "subtli": 672, "ensure_in_backend": [672, 1144, 1215], "x_nativ": 672, "val_n": 672, "is_ivy_arrai": [672, 677, 1144], "assign": [672, 673, 677], "unspecifi": [672, 906, 1095, 1097, 1099, 1101, 1328, 1345, 1347, 1431, 1472, 1474], "predominantli": [672, 691], "altern": [672, 678], "_wrap_fn": 672, "maxim": [672, 675], "inner": [672, 1328, 1345, 1347, 1353, 1355, 1484, 1485, 1486, 1487], "third": [672, 692, 1328, 1389, 1392, 1550, 1551, 1554], "leverag": 672, "multi_head_attent": [672, 1307], "to_out_fn": [672, 1307, 1326], "support_native_out": 672, "composition": 672, "lack": 672, "capabl": 672, "input_arrai": 672, "flake8": 673, "undefin": 673, "handler": [673, 674, 676, 680, 1616, 1617], "carri": 673, "star": 673, "byte": 673, "notimpl": 673, "notimplementederror": 673, "unsuccess": 673, "exce": [673, 906, 1075, 1077], "indices_wher": [673, 1144, 1617], "black": 673, "disobei": 673, "successfulli": 673, "comparison": 673, "sound": 674, "fledg": [675, 676], "syntact": [675, 680], "minor": [675, 692], "fit": [675, 1431, 1453, 1455], "logspac": [675, 733], "construct": [675, 679, 680, 1431, 1478, 1480], "power_seq": 675, "linspac": [675, 733, 734, 735, 1617], "resid": [675, 679], "backend_stack": 675, "cprint": [675, 1660], "_determine_backend_from_arg": 675, "importlib": 675, "import_modul": 675, "_backend_dict": 675, "illustr": [675, 691], "un": [675, 793, 839], "lstm_updat": [675, 1307], "init_h": [675, 1307, 1325], "init_c": [675, 1307, 1325], "kernel": [675, 692, 1307, 1325], "recurrent_kernel": [675, 1307, 1325], "bia": [675, 679, 1307, 1324, 1325], "recurrent_bia": [675, 1307, 1325], "unrol": [675, 678, 1307, 1325], "lstm": [675, 1307, 1325], "cell": [675, 1307, 1325], "hidden": [675, 679, 1307, 1325], "recurr": [675, 1307, 1325], "timestep": [675, 1307, 1325], "x_shape": 675, "input_channel": [675, 679], "x_flat": 675, "wi": 675, "wi_x": 675, "wii_x": 675, "wif_x": 675, "wig_x": 675, "wio_x": 675, "wh": 675, "ht": 675, "ct": 675, "hts_list": 675, "wii_xt": 675, "wif_xt": 675, "wig_xt": 675, "wio_xt": 675, "zip": 675, "htm1": 675, "ctm1": 675, "wh_htm1": 675, "whi_htm1": 675, "whf_htm1": 675, "whg_htm1": 675, "who_htm1": 675, "ft": 675, "gt": 675, "ot": 675, "offici": 675, "reliabl": 675, "sacrific": 675, "hear": 675, "virtu": 675, "pure_ivi": 675, "compile_graph": [675, 680], "pure_torch": 675, "backbon": [675, 678], "_layer": 675, "super": [675, 678, 679, 680], "random_unifrom": 675, "unclean": 675, "wx": 675, "temp": 675, "torchscript": [675, 1616], "example_input": [675, 730, 731], "static_argnum": [675, 730, 731], "static_argnam": [675, 730, 731], "jit": [675, 692], "primit": [676, 692], "upcom": 676, "hierarch": [676, 678, 679], "_init": 677, "is_native_arrai": [677, 1144], "_shape": 677, "_size": 677, "functool": 677, "mul": 677, "len": [677, 680, 733, 763, 765], "_devic": 677, "_dev_str": 677, "as_ivy_dev": [677, 873], "_pre_repr": 677, "_post_repr": 677, "framework_str": 677, "_is_vari": 677, "noinspect": 677, "pypep8nam": 677, "answer": [677, 692], "typeerror": 677, "immut": 677, "claim": 677, "truli": 677, "_native_wrapp": 677, "attributeerror": 677, "scatter_nd": [677, 1144, 1617], "genuin": 677, "some_method": 677, "similarli": [677, 733, 763, 765], "rewritten": 677, "__pow__": 677, "strang": 677, "enforc": 677, "compartment": 677, "public": [677, 1144, 1163], "newshap": 677, "new_shap": 677, "tidi": 677, "shorter": 677, "crystal": 677, "ton": 678, "ado": [678, 679], "incredibli": [678, 692], "soup": 678, "walk": [678, 679], "dct": 678, "cnt": 678, "combo": [678, 1617, 1623], "hold": [678, 1144, 1227, 1228], "1000": [678, 906, 1119, 1121], "3333335": 678, "grad": [678, 679, 680, 1265, 1266, 1268, 1617], "delimit": 678, "autocomplet": 678, "midwai": 678, "agent": 678, "total_spe": 678, "total_height": 678, "total_width": 678, "ag": 678, "tot": 678, "total_": 678, "total_h": 678, "dir": 678, "dropout": [678, 1307], "cnt0": 678, "cnt1": 678, "diff_0": 678, "diff_1": 678, "config0": 678, "config1": 678, "Not": [678, 679, 692, 732], "decod": 678, "l0": 678, "clearer": 678, "truncat": 678, "decoder__l0": 678, "decoder__l1": 678, "encoder__l0": 678, "encoder__l1": 678, "height": 678, "l0__b": 678, "l0__w": 678, "l1__b": 678, "l1__w": 678, "printabl": 678, "obviou": 678, "foresight": 678, "untidili": 678, "update_ag": 678, "normalize_img": 678, "img": 678, "img_max": 678, "reduce_max": [678, 1617], "img_min": 678, "reduce_min": [678, 1617], "img_rang": 678, "agent_posit": 678, "agent_veloc": 678, "agent_cam_front_rgb": 678, "agent_cam_front_depth": 678, "agent_cam_rear_rgb": 678, "agent_cam_rear_depth": 678, "agent_cam_lidar": 678, "cleaner": 678, "camera": 678, "front_rgb": 678, "front_depth": 678, "rear_rgb": 678, "rear_depth": 678, "lidar": 678, "rgb": 678, "rear": 678, "veloc": 678, "cam": 678, "cam_max": 678, "cam_min": 678, "cam_rang": 678, "Of": 678, "perman": 678, "afterward": 678, "thread": 678, "pretti": 678, "dataload": [678, 690, 1617], "_cnt": 678, "img_": 678, "_dataset_s": 678, "_batch_siz": 678, "_count": [678, 679], "__next__": 678, "filenam": 678, "img_fnam": 678, "fname": 678, "loaded_img": 678, "cv2": 678, "imread": 678, "from_numpi": 678, "loader": [678, 692], "batch_slic": 678, "mymodel": [678, 1617], "linear0": [678, 679, 1617], "linear1": [678, 679, 1617], "x_in": [678, 679, 680, 1617], "loss_fn": [678, 679, 680, 1617], "reduce_mean": [678, 679, 680, 1617], "execute_with_gradi": [678, 679, 680, 692, 1265, 1617], "0145": 678, "grad_fn": [678, 1265, 1273, 1297], "addbackward0": 678, "_create_vari": 679, "output_channel": 679, "with_bia": 679, "_input_channel": 679, "_output_channel": 679, "_w_shape": 679, "_b_shape": 679, "_with_bia": 679, "729": 679, "396": 679, "764": 679, "872": 679, "211": 679, "439": 679, "nightmar": 679, "overcom": 679, "fc": 679, "v0": 679, "v1": 679, "key0": 679, "linear3": 679, "v2": 679, "counter": 679, "fed": [679, 873, 896], "decoupl": 679, "scheme": 679, "weight_initi": 679, "glorotuniform": 679, "bias_initi": 679, "_w_init": 679, "_b_init": 679, "create_vari": 679, "var_shap": 679, "fan_out": 679, "fan_in": 679, "fan_mod": 679, "fan_sum": 679, "slight": 679, "misnom": 679, "saw": 679, "vanilla": [679, 1484, 1486], "compile_on_next_step": [679, 1144, 1150], "_beta1": 679, "_beta2": 679, "_epsilon": 679, "_mw": 679, "_vw": 679, "_first_pass": 679, "_should_compil": 679, "_step": 679, "new_v": 679, "_lr": 679, "_inplac": 679, "_stop_gradi": 679, "set_stat": 679, "clamp": 680, "clip_by_valu": 680, "pre": [680, 692], "captur": 680, "one_hot": [680, 1144, 1617], "sparse_funct": 680, "num_class": 680, "ey": [680, 733, 1307, 1313, 1318, 1320], "num_dim": 680, "new_axi": 680, "_linear": 680, "to_backend": 680, "jax_graph": 680, "to_ivy_modul": 680, "thinli": 680, "whilst": [680, 1616], "to_haiku_modul": 680, "hk": 680, "loss_fn_t": 680, "transform": [680, 691, 1307, 1322, 1324, 1616], "without_apply_rng": 680, "rng": 680, "prngkei": 680, "init": 680, "update_rul": 680, "tree_multimap": 680, "vision": [690, 1617], "robot": [690, 1617], "focus": 691, "perfect": 691, "3d": 691, "differenti": 691, "demo": [691, 1617], "orient": 691, "pose": 691, "euler": [691, 732], "quaternion": 691, "rotat": 691, "ivy_mech": 691, "target_facing_rotation_matrix": 691, "polar_to_cartesian_coord": 691, "ordin": [691, 1328, 1385, 1387], "warp": 691, "optic": 691, "voxel": 691, "ivy_vis": 691, "coords_to_voxel_grid": 691, "render_pixel_coord": 691, "neural": [691, 1307, 1617], "radianc": 691, "nerf": 691, "trajectori": 691, "motion": 691, "plan": [691, 1617], "mobil": 691, "ivy_robot": 691, "sample_spline_path": 691, "rigidmobil": 691, "sample_bodi": 691, "drone": 691, "sample_link": 691, "openai": 691, "swimmer": 691, "reward": 691, "supervis": 691, "reinforc": 691, "door": [691, 692], "cartpol": 691, "mountain_car": 691, "pendulum": 691, "reacher": 691, "learnt": 691, "ture": 691, "ntm": 691, "egospher": 691, "spatial": 691, "esm": 691, "ivy_memori": 691, "egocentr": 691, "room": 691, "inspir": 691, "doubt": 692, "grate": 692, "probe": 692, "undergo": 692, "remark": 692, "surpris": 692, "lock": 692, "xla": [692, 1616], "gold": 692, "dex": 692, "ye": 692, "scan": 692, "tricki": [692, 1616], "predictor": 692, "tight": 692, "driver": 692, "schedul": 692, "dispatch": 692, "Will": 692, "ast": 692, "cond": 692, "jacobian": [692, 1265, 1281], "checkpoint": 692, "autodiff": 692, "shine": 692, "merci": 692, "autograd": 692, "cluster": 692, "compet": 692, "paradigm": 692, "parallelis": 692, "spmd": 692, "mixtur": 692, "expert": 692, "sophist": 692, "depart": 692, "routin": 692, "hundr": 692, "thousand": 692, "deepli": [692, 1488, 1490], "broadli": 692, "supplementari": 692, "reusabl": 692, "fanci": 692, "fusion": 692, "lose": 692, "vmap": 692, "pmap": 692, "overhead": 692, "ineffici": 692, "eventu": 692, "supplement": 692, "backdoor": 692, "callback": 692, "record": 692, "metric": 692, "somewhat": 692, "outsourc": 692, "func_wrapp": [693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703], "from_zero_dim_arrays_to_float": 693, "gaussian": [705, 706, 708], "214": [705, 718, 720], "0768": [705, 722, 724], "231": [705, 722, 724], "363": [705, 722, 724], "faster": [730, 731, 1616], "invoc": [730, 731], "718281828459045": 732, "newaxi": 732, "alia": 732, "pi": 732, "141592653589793": 732, "ml_framework": [733, 734, 735], "distanc": [733, 734, 735], "adjac": [733, 734, 735], "creation_funct": [733, 734, 735, 737, 738, 740, 741, 743, 745, 746, 748, 750, 752, 753, 755, 757, 758, 771, 772, 774, 776, 778, 781, 782, 785, 786, 788, 789, 792], "elsewher": [733, 745, 746, 1532, 1546, 1549], "row": [733, 745, 746, 1328, 1385, 1387, 1389, 1392, 1510, 1511, 1513, 1532, 1541, 1544], "column": [733, 745, 746, 1328, 1345, 1347, 1377, 1379, 1385, 1387, 1389, 1392], "interchang": [733, 748, 750, 1431, 1475, 1477], "cartesian": [733, 763, 765], "ij": [733, 763, 765, 1581, 1582, 1584], "ni": [733, 763, 765], "xi": [733, 763, 765], "n1": [733, 763, 765], "n2": [733, 763, 765], "n3": [733, 763, 765], "xv": [733, 763, 765], "yv": [733, 763, 765], "y1": [733, 789, 792], "y2": [733, 789, 792], "y3": [733, 789, 792], "intdtyp": [733, 789, 792, 793, 818, 852, 855], "defaultdtyp": 793, "defaultfloatdtyp": 793, "defaultintdtyp": 793, "defaultuintdtyp": 793, "uint_dtyp": [793, 819, 866], "as_native_dtyp": 793, "incompat": [793, 804, 806], "data_type_funct": [793, 808, 810, 825, 827, 835, 837, 859, 861], "check_float": 793, "closest_valid_dtyp": 793, "xtype": [793, 813], "ytype": [793, 813], "native_dtyp": [793, 813], "native_uint16": [793, 813], "floatdtyp": [793, 815, 816], "int_dtyp": [793, 818, 865], "default_uint_dtyp": [793, 866, 871], "uintdtyp": [793, 819, 852, 855, 866, 871], "defualt": [793, 819], "set_default_uint_dtyp": [793, 819, 871], "4294967346": [793, 819], "dtype_bit": 793, "native_int8": [793, 824, 839, 872], "native_bool": [793, 824, 839, 863, 872], "followng": [793, 825, 827], "occupi": [793, 825, 827, 835, 837, 1144, 1227, 1228], "smallest_norm": [793, 825, 827], "4028235e": [793, 825, 827], "7976931348623157e": [793, 825, 827], "55040e": [793, 825, 827], "encapsul": [793, 835, 837], "2147483648": [793, 835, 837], "2147483647": [793, 835, 837], "18446744073709551615": [793, 835, 837], "9223372036854775808": [793, 835, 837], "9223372036854775807": [793, 835, 837], "127": [793, 835, 837], "314": [793, 835, 837], "32768": [793, 835, 837], "32767": [793, 835, 837], "1800": [793, 835, 837], "65535": [793, 835, 837], "4294967295": [793, 835, 837], "109": [793, 835, 837], "8400": [793, 835, 837], "119": [793, 835, 837], "122": [793, 835, 837, 906, 975, 977], "native_uint8": [793, 839, 872], "native_float64": [793, 839, 863, 872], "native_int16": [793, 839, 872], "native_int32": [793, 839, 863, 872], "native_float16": [793, 839, 872], "native_int64": [793, 839, 872], "native_uint64": [793, 839, 863, 872], "promote_typ": 793, "type1": [793, 857], "type2": [793, 857], "promote_types_of_input": 793, "unexpect": [793, 858], "default_dtype_stack": [793, 863], "unset_default_dtyp": [793, 863], "type_promote_arrai": 793, "ret1": [793, 867], "ret2": [793, 867], "unset_default_float_dtyp": 793, "unset_default_int_dtyp": 793, "unset_default_uint_dtyp": 793, "reset": [793, 871, 873, 904, 1144, 1257, 1258, 1259], "valid_dtyp": 793, "defaultdevic": 873, "__enter__": 873, "_dev": 873, "__exit__": 873, "exc_typ": 873, "exc_val": 873, "exc_tb": 873, "exit": 873, "profil": 873, "save_dir": [873, 874], "as_native_dev": [873, 891], "clear_mem_on_dev": 873, "function_supported_devic": 873, "function_unsupported_devic": 873, "139740789224448": [873, 886], "gpu_is_avail": 873, "physic": [873, 888], "num_ivy_arrays_on_dev": 873, "x4": [873, 890], "percent_used_mem_on_dev": 873, "process_specif": [873, 891, 905], "percentag": [873, 891], "ram": [873, 891, 902, 905], "036902561555": [873, 891], "7024003467681645": [873, 891], "7095597456708771": [873, 891], "print_all_ivy_arrays_on_dev": 873, "attr_onli": [873, 892], "set_split_factor": 873, "chunk": [873, 894, 895, 896], "split_factor": [873, 894], "split_func_cal": 873, "max_chunk_s": [873, 896], "chunk_siz": [873, 896], "input_ax": [873, 896], "output_ax": [873, 896], "feed": [873, 896], "fist": [873, 896], "gb": [873, 902, 905], "66700032": [873, 902], "589934592": [873, 902], "tpu_is_avail": 873, "unset_default_devic": 873, "used_mem_on_dev": 873, "magnitud": [906, 907, 909, 919, 921, 1079, 1081, 1328, 1389, 1392, 1393, 1397], "princip": [906, 911, 913, 923, 925, 931, 933], "x1_i": [906, 919, 921, 935, 937, 943, 945, 951, 953, 955, 957, 959, 961, 963, 965, 979, 981, 983, 985, 1003, 1005, 1007, 1009, 1011, 1013, 1027, 1029, 1031, 1033, 1051, 1053, 1055, 1057, 1063, 1065, 1067, 1069, 1079, 1081, 1087, 1089, 1095, 1097, 1099, 1101, 1127, 1131], "nor": [906, 919, 921, 1079, 1081, 1265, 1291, 1306], "nearest": [906, 919, 921, 1079, 1081, 1103, 1105], "2019": [906, 919, 921, 995, 997, 1043, 1045, 1079, 1081], "commut": [906, 919, 921], "809": [906, 927, 929], "569": [906, 927, 929], "733": [906, 927, 929], "notat": [906, 935, 937, 1581, 1582, 1584], "denot": [906, 935, 937, 1265, 1291, 1306], "pair": [906, 935, 937, 1307, 1327, 1328, 1333, 1335], "quadrant": [906, 935, 937], "3\u03c0": [906, 935, 937], "588": [906, 935, 937], "719": [906, 935, 937], "197": [906, 935, 937], "bitwis": [906, 943, 945, 955, 957, 963, 965, 1067, 1069], "invert": [906, 947, 949], "arithmet": [906, 959, 961, 1581, 1588, 1590], "lh": [906, 959, 961], "rh": [906, 959, 961], "xor": [906, 963, 965, 1067, 1069], "77": [906, 963, 965, 1328, 1372, 1374, 1581, 1582, 1584], "59": [906, 963, 965], "654": [906, 971, 973], "368": [906, 975, 977], "670": [906, 975, 977], "202": [906, 975, 977], "548": [906, 975, 977, 1115, 1117], "1490": [906, 975, 977], "698": [906, 979, 981], "accur": [906, 995, 997, 1043, 1045], "fdlibm": [906, 995, 997, 1043, 1045], "compliant": [906, 995, 997, 1043, 1045, 1059, 1061, 1063, 1065, 1581, 1585, 1587, 1588, 1590, 1591, 1593], "85e": [906, 995, 997], "632": [906, 995, 997], "20e": [906, 995, 997], "72e": [906, 995, 997], "00": [906, 995, 997, 1328, 1393, 1397], "22000": [906, 995, 997], "442000": [906, 995, 997], "greatest": [906, 999, 1001, 1003, 1005], "742": [906, 1043, 1045], "y_i": [906, 1083, 1085], "versu": [906, 1095, 1097], "odd": [906, 1095, 1097], "modulu": [906, 1099, 1101], "5654": [906, 1103, 1105], "034": [906, 1103, 1105], "433": [906, 1103, 1105, 1265, 1273, 1281, 1297], "343": [906, 1103, 1105], "124": [906, 1107, 1109], "932": [906, 1111, 1113], "746": [906, 1111, 1113], "443": [906, 1111, 1113], "657": [906, 1111, 1113, 1144, 1159, 1161], "253": [906, 1115, 1117], "indistinguish": [906, 1119, 1121], "infinit": [906, 1119, 1121], "32455532": [906, 1119, 1121], "89897949": [906, 1119, 1121], "169": [906, 1119, 1121], "546": [906, 1132, 1135], "842": [906, 1132, 1135], "916": [906, 1132, 1135, 1418, 1419, 1421], "996": [906, 1132, 1135], "328": [906, 1132, 1135], "462": [906, 1136, 1139], "604": [906, 1136, 1139], "984": [906, 1136, 1139], "997": [906, 1136, 1139], "decim": [906, 1140, 1143], "arg_info": 1144, "inspect": [1144, 1149], "arg_nam": 1144, "array_equ": 1144, "assert_supports_inplac": 1144, "0353": [1144, 1155, 1157], "424": [1144, 1155, 1157], "58": [1144, 1155, 1157, 1550, 1551, 1554], "176": [1144, 1155, 1157, 1550, 1551, 1554], "339": [1144, 1155, 1157], "271": [1144, 1155, 1157], "135": [1144, 1155, 1157], "406": [1144, 1155, 1157], "168": [1144, 1155, 1157], "391": [1144, 1155, 1157], "417": [1144, 1159, 1161], "583": [1144, 1159, 1161], "0667": [1144, 1159, 1161], "133": [1144, 1159, 1161], "267": [1144, 1159, 1161], "131": [1144, 1159, 1161], "263": [1144, 1159, 1161], "394": [1144, 1159, 1161], "526": [1144, 1159, 1161], "788": [1144, 1159, 1161], "container_typ": 1144, "copy_arrai": 1144, "static_copy_arrai": [1144, 1164], "cumsum": [1144, 1617], "default_v": [1144, 1171], "catch_except": [1144, 1171], "rev": [1144, 1171], "with_cal": [1144, 1171], "floormod": [1144, 1617], "mod": [1144, 1185], "fourier_encod": 1144, "max_freq": [1144, 1186], "num_band": [1144, 1186], "fourier": [1144, 1186], "band": [1144, 1186], "linearli": [1144, 1186, 1328, 1385, 1387], "oppos": [1144, 1186], "geometr": [1144, 1186], "function_supported_devices_and_dtyp": 1144, "function_unsupported_devices_and_dtyp": 1144, "get_all_arrays_in_memori": 1144, "get_array_mod": [1144, 1229, 1257], "array_mod": [1144, 1198], "set_array_mod": [1144, 1198, 1257], "get_min_bas": [1144, 1230], "get_min_denomin": 1144, "get_nestable_mod": [1144, 1232, 1258], "set_nestable_mod": [1144, 1201, 1258], "get_num_dim": [1144, 1617], "as_arrai": [1144, 1202, 1236], "get_referrers_recurs": 1144, "seen_set": [1144, 1203], "local_set": [1144, 1203], "inplace_arrays_support": 1144, "inplace_incr": 1144, "inplace_variables_support": 1144, "is_ivy_contain": 1144, "match_kwarg": 1144, "allow_dupl": [1144, 1221], "forkserv": [1144, 1222], "spawn": [1144, 1222], "num_arrays_in_memori": 1144, "hot": [1144, 1224], "scatter": [1144, 1224, 1227, 1228], "overrid": [1144, 1224], "print_all_arrays_in_memori": 1144, "scatter_flat": 1144, "set_min_bas": 1144, "set_min_denomin": 1144, "set_queue_timeout": 1144, "set_shape_array_mod": [1144, 1237, 1259], "shape_array_mod": [1144, 1234, 1259], "set_tmp_dir": 1144, "tmp_dr": [1144, 1235], "temporari": [1144, 1235, 1244], "49999999999975": [1144, 1238, 1240], "5015015015010504": [1144, 1238, 1240], "1j": [1144, 1238, 1240], "000444502911705e": [1144, 1238, 1240], "9999999999995j": [1144, 1238, 1240], "stable_pow": 1144, "min_bas": [1144, 1242], "supports_inplac": 1144, "tmp_dir": 1144, "to_ivy_shap": 1144, "100000023841858": [1144, 1246, 1249], "200000047683716": [1144, 1246, 1249], "299999952316284": [1144, 1246, 1249], "400000095367432": [1144, 1246, 1249], "599999904632568": [1144, 1246, 1249], "to_native_shap": 1144, "to_scalar": 1144, "try_else_non": 1144, "dictionai": [1144, 1256], "__name__": [1144, 1256], "hemant": [1144, 1256], "unset_array_mod": 1144, "unset_shape_array_mod": [1144, 1257], "unset_nestable_mod": 1144, "value_is_nan": 1144, "gradienttrack": 1265, "with_grad": [1265, 1291, 1296], "0125": [1265, 1266, 1268], "171": [1265, 1266, 1268], "retain_grad": [1265, 1272], "dy": [1265, 1272], "dx": [1265, 1272], "retain": [1265, 1272, 1616], "933": [1265, 1273, 1281, 1297], "jac": 1265, "jac_fn": [1265, 1281], "639": [1265, 1282, 1284], "361": [1265, 1282, 1284, 1510, 1519, 1521], "set_with_grad": [1265, 1296, 1306], "with_grads_stack": [1265, 1291, 1296, 1306], "unset_with_grad": 1265, "paramt": [1265, 1296], "void": [1265, 1296], "indexerror": [1265, 1296], "value_and_grad": 1265, "value_grad": [1265, 1297], "423332": [1265, 1297], "conv1d_transpos": 1307, "output_shap": [1307, 1312, 1314, 1316], "conv2d": [1307, 1617], "hwio": [1307, 1313], "unequ": [1307, 1313], "unsqueez": [1307, 1313], "conv2d_transpos": 1307, "conv3d": 1307, "ndhwc": [1307, 1315, 1316], "volum": [1307, 1315], "fd": [1307, 1315, 1316], "ncdhw": [1307, 1315, 1316], "dhwio": [1307, 1315], "conv3d_transpos": 1307, "258": [1307, 1316], "deconv_length": 1307, "stride_s": [1307, 1317], "kernel_s": [1307, 1317], "depthwis": [1307, 1318, 1320], "hwi": [1307, 1318, 1320], "randomli": [1307, 1322], "bernoulli": [1307, 1322], "out_featur": [1307, 1322, 1324], "handle_pad": 1307, "incom": [1307, 1324], "outer_batch_shap": [1307, 1324], "inner_batch_shap": [1307, 1324], "in_featur": [1307, 1324], "num_head": [1307, 1326], "mask": [1307, 1326, 1327], "to_q_fn": [1307, 1326], "to_kv_fn": [1307, 1326], "to_q_v": [1307, 1326], "to_kv_v": [1307, 1326], "to_out_v": [1307, 1326], "num_queri": [1307, 1326, 1327], "x_feat_dim": [1307, 1326], "measur": [1307, 1326], "num_kei": [1307, 1326, 1327], "cont_feat_dim": [1307, 1326], "numhead": [1307, 1326], "feat_dim": [1307, 1326, 1327], "dot": [1307, 1326, 1327, 1328, 1398, 1401, 1406, 1409], "out_feat_dim": [1307, 1326], "scaled_dot_product_attent": 1307, "score": [1307, 1327], "decomposit": [1328, 1329, 1331, 1377, 1379, 1389, 1392], "linalg": [1328, 1333, 1335, 1617], "293": [1328, 1337, 1339], "46997": [1328, 1337, 1339], "eigendecomposit": [1328, 1345, 1347], "qlq\u1d40": [1328, 1345, 1347], "orthogon": [1328, 1345, 1347], "eig": [1328, 1345, 1347], "eigenvalu": [1328, 1345, 1347, 1348], "eigenvector": [1328, 1345, 1347], "prepend": [1328, 1353, 1355], "array_object": [1328, 1353, 1355], "__matmul__": [1328, 1353, 1355], "defici": [1328, 1364, 1366], "array_lik": [1328, 1372, 1374], "105": [1328, 1372, 1374, 1418, 1419, 1421], "112": [1328, 1372, 1374, 1581, 1582, 1584], "104": [1328, 1372, 1374, 1581, 1582, 1584], "moor": [1328, 1376], "penros": [1328, 1376], "pseudo": [1328, 1376], "orthonorm": [1328, 1377, 1379, 1389, 1392], "2d": [1328, 1381, 1383], "logdet": [1328, 1381, 1383], "coeffici": [1328, 1385, 1387], "usvh": [1328, 1389, 1392], "vh": [1328, 1389, 1392], "hermitian": [1328, 1389, 1392], "et": [1328, 1389, 1392], "cetera": [1328, 1389, 1392], "adjoint": [1328, 1389, 1392], "reconstruct": [1328, 1389, 1392, 1550, 1551, 1554, 1559, 1562], "reconstructed_x": [1328, 1389, 1392], "ss": [1328, 1393, 1397], "615": [1328, 1393, 1397, 1550, 1551, 1554], "00e": [1328, 1393, 1397], "38e": [1328, 1393, 1397], "866": [1328, 1393, 1397], "864": [1328, 1393, 1397], "contract": [1328, 1398, 1401, 1581, 1582, 1584], "doubl": [1328, 1398, 1401], "mathbf": [1328, 1414, 1417], "mathbb": [1328, 1414, 1417], "skew": [1328, 1414, 1417], "discret": [1418, 1423, 1425], "35667497": [1418, 1423, 1425], "793291": [1418, 1427, 1429], "512926": [1418, 1427, 1429], "before_1": [1431, 1440, 1442, 1481, 1483], "after_1": [1431, 1440, 1442, 1481, 1483], "before_n": [1431, 1440, 1442, 1481, 1483], "after_n": [1431, 1440, 1442, 1481, 1483], "reorder": [1431, 1447, 1449], "permut": [1431, 1450, 1452, 1475, 1477], "repetit": [1431, 1453, 1455, 1478, 1480], "famili": [1431, 1472, 1474], "intxx": [1431, 1472, 1474], "floatxx": [1431, 1472, 1474], "fomaml_step": 1484, "inner_cost_fn": [1484, 1485, 1486], "outer_cost_fn": [1484, 1485, 1486], "inner_grad_step": [1484, 1485, 1486, 1487], "inner_learning_r": [1484, 1485, 1486, 1487], "inner_optimization_step": [1484, 1485, 1486, 1487], "inner_batch_fn": [1484, 1485, 1486], "outer_batch_fn": [1484, 1485, 1486], "average_across_step": [1484, 1485, 1486], "inner_v": [1484, 1485, 1486], "keep_inner_v": [1484, 1485, 1486], "outer_v": [1484, 1485, 1486], "keep_outer_v": [1484, 1485, 1486], "return_inner_v": [1484, 1485, 1486, 1487], "num_task": [1484, 1485, 1486, 1487], "maml": [1484, 1485, 1486], "recev": [1484, 1485, 1486], "0x7ff424652ca0": [1484, 1485, 1486, 1487], "maml_step": 1484, "rece": [1484, 1486], "reptile_step": 1484, "cost_fn": [1484, 1487], "reptil": [1484, 1487], "receivng": [1484, 1487], "all_nested_indic": 1488, "include_nest": [1488, 1489], "_index": [1488, 1489, 1499], "_base": [1488, 1489, 1498, 1499], "copy_nest": 1488, "to_mut": [1488, 1490, 1500], "mutabl": [1488, 1490, 1500], "copied_nest": [1488, 1490], "1337": [1488, 1490], "insert_into_nest_at_index": 1488, "insert_into_nest_at_indic": 1488, "special_squar": [1488, 1494], "6666666666666667": [1488, 1494], "special_pow": [1488, 1494], "linear_model": [1488, 1494], "101": [1488, 1494], "map_nest_at_index": 1488, "map_nest_at_indic": 1488, "multi_index_nest": 1488, "nested_ani": 1488, "check_nest": [1488, 1498, 1499], "conditon": [1488, 1498, 1499], "nested_indices_wher": 1488, "stop_after_n_found": [1488, 1499], "fun": [1488, 1499], "nested_indic": [1488, 1499], "_depth": [1488, 1500], "_tuple_check_fn": [1488, 1500], "_list_check_fn": [1488, 1500], "_dict_check_fn": [1488, 1500], "nested_multi_map": 1488, "nest0": [1488, 1501], "ivy_arrai": [1488, 1501], "funciton": [1488, 1501], "prune_nest_at_index": 1488, "prune_nest_at_indic": 1488, "set_nest_at_index": 1488, "set_nest_at_indic": 1488, "111": [1488, 1505], "xyz": [1488, 1505], "pqr": [1488, 1505], "mini": [1506, 1507, 1509], "772": [1506, 1507, 1509], "796": [1506, 1507, 1509], "home": [1510, 1511, 1513, 1519, 1521], "uniformli": [1510, 1515, 1517, 1523, 1525], "22346112": [1510, 1519, 1521], "0922": [1510, 1519, 1521], "515": [1510, 1519, 1521], "596": [1510, 1519, 1521], "247": [1510, 1519, 1521], "0426": [1510, 1519, 1521], "627": [1510, 1519, 1521], "9213753": [1510, 1519, 1521], "12818667": [1510, 1519, 1521], "799": [1510, 1519, 1521], "469": [1510, 1519, 1521], "287": [1510, 1519, 1521], "0366": [1510, 1519, 1521], "26431865": [1510, 1523, 1525], "475": [1510, 1523, 1525], "878": [1510, 1523, 1525], "861": [1510, 1523, 1525], "929": [1510, 1523, 1525], "545": [1510, 1523, 1525], "789": [1510, 1523, 1525], "519": [1510, 1523, 1525], "0435": [1510, 1523, 1525], "381": [1510, 1523, 1525, 1550, 1551, 1554], "4608004": [1510, 1523, 1525], "8458502": [1510, 1523, 1525], "x_j": [1550, 1551, 1554, 1555, 1558, 1563, 1566], "inverse_indic": [1550, 1551, 1554, 1559, 1562], "aggreg": [1550, 1551, 1554], "fourth": [1550, 1551, 1554], "607": [1550, 1551, 1554], "735": [1550, 1551, 1554], "0396": [1550, 1551, 1554], "166": [1550, 1551, 1554], "828": [1550, 1551, 1554], "144": [1550, 1551, 1554], "40501155": [1550, 1551, 1554], "77361575": [1550, 1551, 1554], "97776199": [1550, 1551, 1554], "36831157": [1550, 1551, 1554], "89148434": [1550, 1551, 1554], "9512272": [1550, 1551, 1554], "67542176": [1550, 1551, 1554], "41985657": [1550, 1551, 1554], "23478023": [1550, 1551, 1554], "1141": [1550, 1551, 1554], "8101": [1550, 1551, 1554], "9298": [1550, 1551, 1554], "8460": [1550, 1551, 1554], "2119": [1550, 1551, 1554], "3519": [1550, 1551, 1554], "6252": [1550, 1551, 1554], "4033": [1550, 1551, 1554], "7443": [1550, 1551, 1554], "2577": [1550, 1551, 1554], "3707": [1550, 1551, 1554], "0545": [1550, 1551, 1554], "3238": [1550, 1551, 1554], "5944": [1550, 1551, 1554], "0775": [1550, 1551, 1554], "4327": [1550, 1551, 1554], "889": [1550, 1551, 1554], "175": [1550, 1551, 1554], "763": [1550, 1551, 1554], "071": [1550, 1551, 1554], "262": [1550, 1551, 1554], "456": [1550, 1551, 1554], "114": [1550, 1551, 1554], "349": [1550, 1551, 1554], "594": [1550, 1551, 1554], "335": [1550, 1551, 1554], "212": [1550, 1551, 1554], "457": [1550, 1551, 1554], "827": [1550, 1551, 1554], "209": [1550, 1551, 1554], "set_funct": [1550, 1555, 1558], "einstein": [1581, 1582, 1584], "summat": [1581, 1582, 1584], "seq": [1581, 1582, 1584], "jk": [1581, 1582, 1584], "ik": [1581, 1582, 1584], "126": [1581, 1582, 1584], "510": [1581, 1582, 1584], "108": [1581, 1582, 1584], "117": [1581, 1582, 1584], "sentinel": [1581, 1585, 1587, 1591, 1593], "8164966": [1581, 1597, 1599], "07472222": [1581, 1603, 1606], "simplicit": [1607, 1608, 1610], "nail": 1616, "funtion": 1616, "asset": 1616, "functiona": 1616, "scientist": 1616, "deploi": 1616, "correl": 1616, "analyz": 1616, "grow": 1617, "ai": 1617, "got": 1617, "colab": 1617, "sharp": 1617, "weekli": 1617, "immedi": 1617, "favorit": 1617, "jax_concat": 1617, "tf_concat": 1617, "np_concat": 1617, "mx_concat": 1617, "torch_concat": 1617, "get_devic": 1617, "reduce_prod": 1617, "reduce_sum": 1617, "gradient_imag": 1617, "bilinear_resampl": 1617, "stack_imag": 1617, "neural_net": 1617, "ecosystem": [1617, 1623], "popular": [1617, 1623], "acceler": 1617, "articl": 1617, "lenton2021ivi": 1617, "inter": 1617, "lenton": 1617, "daniel": 1617, "pardo": 1617, "fabio": 1617, "falck": 1617, "fabian": 1617, "jame": 1617, "stephen": 1617, "clark": 1617, "ronald": 1617, "journal": 1617, "arxiv": 1617, "preprint": 1617, "2102": 1617, "02886": 1617, "2021": 1617}, "objects": {"ivy.array": [[0, 0, 0, "-", "activations"], [2, 0, 0, "-", "array"], [188, 0, 0, "-", "conversions"], [193, 0, 0, "-", "creation"], [195, 0, 0, "-", "data_type"], [197, 0, 0, "-", "device"], [199, 0, 0, "-", "elementwise"], [201, 0, 0, "-", "general"], [203, 0, 0, "-", "gradients"], [205, 0, 0, "-", "image"], [207, 0, 0, "-", "layers"], [209, 0, 0, "-", "linear_algebra"], [211, 0, 0, "-", "losses"], [213, 0, 0, "-", "manipulation"], [215, 0, 0, "-", "norms"], [217, 0, 0, "-", "random"], [219, 0, 0, "-", "searching"], [221, 0, 0, "-", "set"], [223, 0, 0, "-", "sorting"], [225, 0, 0, "-", "statistical"], [229, 0, 0, "-", "utility"], [231, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[1, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[1, 2, 1, "", "gelu"], [1, 2, 1, "", "leaky_relu"], [1, 2, 1, "", "relu"], [1, 2, 1, "", "sigmoid"], [1, 2, 1, "", "softmax"], [1, 2, 1, "", "softplus"]], "ivy.array.array": [[3, 1, 1, "", "Array"], [4, 1, 1, "", "Variable"]], "ivy.array.array.Array": [[3, 3, 1, "", "T"], [3, 2, 1, "", "__add__"], [3, 2, 1, "", "__init__"], [3, 2, 1, "", "__le__"], [3, 2, 1, "", "__radd__"], [3, 3, 1, "", "data"], [3, 3, 1, "", "device"], [3, 3, 1, "", "dtype"], [3, 3, 1, "", "is_variable"], [3, 3, 1, "", "mT"], [3, 3, 1, "", "ndim"], [3, 3, 1, "", "shape"], [3, 3, 1, "", "size"]], "ivy.array.array.Variable": [[4, 2, 1, "", "__init__"]], "ivy.array.conversions": [[189, 4, 1, "", "args_to_ivy"], [190, 4, 1, "", "args_to_native"], [191, 4, 1, "", "to_ivy"], [192, 4, 1, "", "to_native"]], "ivy.array.creation": [[194, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[194, 2, 1, "", "asarray"], [194, 2, 1, "", "empty_like"], [194, 2, 1, "", "from_dlpack"], [194, 2, 1, "", "full_like"], [194, 2, 1, "", "meshgrid"], [194, 2, 1, "", "native_array"], [194, 2, 1, "", "ones_like"], [194, 2, 1, "", "tril"], [194, 2, 1, "", "triu"], [194, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[196, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[196, 2, 1, "", "astype"], [196, 2, 1, "", "broadcast_arrays"], [196, 2, 1, "", "broadcast_to"], [196, 2, 1, "", "can_cast"], [196, 2, 1, "", "dtype"], [196, 2, 1, "", "finfo"], [196, 2, 1, "", "iinfo"], [196, 2, 1, "", "is_bool_dtype"], [196, 2, 1, "", "is_float_dtype"], [196, 2, 1, "", "is_int_dtype"], [196, 2, 1, "", "is_uint_dtype"], [196, 2, 1, "", "result_type"]], "ivy.array.device": [[198, 1, 1, "", "ArrayWithDevice"]], "ivy.array.device.ArrayWithDevice": [[198, 2, 1, "", "dev"], [198, 2, 1, "", "to_device"]], "ivy.array.elementwise": [[200, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[200, 2, 1, "", "abs"], [200, 2, 1, "", "acos"], [200, 2, 1, "", "acosh"], [200, 2, 1, "", "add"], [200, 2, 1, "", "asin"], [200, 2, 1, "", "asinh"], [200, 2, 1, "", "atan"], [200, 2, 1, "", "atan2"], [200, 2, 1, "", "atanh"], [200, 2, 1, "", "bitwise_and"], [200, 2, 1, "", "bitwise_invert"], [200, 2, 1, "", "bitwise_left_shift"], [200, 2, 1, "", "bitwise_or"], [200, 2, 1, "", "bitwise_right_shift"], [200, 2, 1, "", "bitwise_xor"], [200, 2, 1, "", "ceil"], [200, 2, 1, "", "cos"], [200, 2, 1, "", "cosh"], [200, 2, 1, "", "divide"], [200, 2, 1, "", "equal"], [200, 2, 1, "", "erf"], [200, 2, 1, "", "exp"], [200, 2, 1, "", "expm1"], [200, 2, 1, "", "floor"], [200, 2, 1, "", "floor_divide"], [200, 2, 1, "", "greater"], [200, 2, 1, "", "greater_equal"], [200, 2, 1, "", "isfinite"], [200, 2, 1, "", "isinf"], [200, 2, 1, "", "isnan"], [200, 2, 1, "", "less"], [200, 2, 1, "", "less_equal"], [200, 2, 1, "", "log"], [200, 2, 1, "", "log10"], [200, 2, 1, "", "log1p"], [200, 2, 1, "", "log2"], [200, 2, 1, "", "logaddexp"], [200, 2, 1, "", "logical_and"], [200, 2, 1, "", "logical_not"], [200, 2, 1, "", "logical_or"], [200, 2, 1, "", "logical_xor"], [200, 2, 1, "", "multiply"], [200, 2, 1, "", "negative"], [200, 2, 1, "", "not_equal"], [200, 2, 1, "", "positive"], [200, 2, 1, "", "pow"], [200, 2, 1, "", "remainder"], [200, 2, 1, "", "round"], [200, 2, 1, "", "sign"], [200, 2, 1, "", "sin"], [200, 2, 1, "", "sinh"], [200, 2, 1, "", "sqrt"], [200, 2, 1, "", "square"], [200, 2, 1, "", "subtract"], [200, 2, 1, "", "tan"], [200, 2, 1, "", "tanh"], [200, 2, 1, "", "trunc"]], "ivy.array.general": [[202, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[202, 2, 1, "", "all_equal"], [202, 2, 1, "", "clip_matrix_norm"], [202, 2, 1, "", "clip_vector_norm"], [202, 2, 1, "", "cumprod"], [202, 2, 1, "", "einops_rearrange"], [202, 2, 1, "", "einops_reduce"], [202, 2, 1, "", "einops_repeat"], [202, 2, 1, "", "gather"], [202, 2, 1, "", "gather_nd"], [202, 2, 1, "", "has_nans"], [202, 2, 1, "", "inplace_decrement"], [202, 2, 1, "", "stable_divide"], [202, 2, 1, "", "to_list"], [202, 2, 1, "", "to_numpy"], [202, 2, 1, "", "unstack"]], "ivy.array.gradients": [[204, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[204, 2, 1, "", "adam_step"], [204, 2, 1, "", "adam_update"], [204, 2, 1, "", "gradient_descent_update"], [204, 2, 1, "", "is_variable"], [204, 2, 1, "", "lamb_update"], [204, 2, 1, "", "lars_update"], [204, 2, 1, "", "optimizer_update"], [204, 2, 1, "", "stop_gradient"], [204, 2, 1, "", "variable"], [204, 2, 1, "", "variable_data"]], "ivy.array.image": [[206, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[208, 1, 1, "", "ArrayWithLayers"]], "ivy.array.layers.ArrayWithLayers": [[208, 2, 1, "", "conv1d"], [208, 2, 1, "", "depthwise_conv2d"]], "ivy.array.linear_algebra": [[210, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[210, 2, 1, "", "cholesky"], [210, 2, 1, "", "cross"], [210, 2, 1, "", "det"], [210, 2, 1, "", "diagonal"], [210, 2, 1, "", "eigh"], [210, 2, 1, "", "eigvalsh"], [210, 2, 1, "", "inv"], [210, 2, 1, "", "matmul"], [210, 2, 1, "", "matrix_norm"], [210, 2, 1, "", "matrix_rank"], [210, 2, 1, "", "matrix_transpose"], [210, 2, 1, "", "outer"], [210, 2, 1, "", "pinv"], [210, 2, 1, "", "qr"], [210, 2, 1, "", "solve"], [210, 2, 1, "", "svd"], [210, 2, 1, "", "svdvals"], [210, 2, 1, "", "tensordot"], [210, 2, 1, "", "trace"], [210, 2, 1, "", "vecdot"], [210, 2, 1, "", "vector_norm"], [210, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[212, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[212, 2, 1, "", "binary_cross_entropy"], [212, 2, 1, "", "cross_entropy"], [212, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[214, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[214, 2, 1, "", "clip"], [214, 2, 1, "", "concat"], [214, 2, 1, "", "constant_pad"], [214, 2, 1, "", "expand_dims"], [214, 2, 1, "", "flip"], [214, 2, 1, "", "permute_dims"], [214, 2, 1, "", "repeat"], [214, 2, 1, "", "reshape"], [214, 2, 1, "", "roll"], [214, 2, 1, "", "split"], [214, 2, 1, "", "squeeze"], [214, 2, 1, "", "stack"], [214, 2, 1, "", "swapaxes"], [214, 2, 1, "", "tile"], [214, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[216, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[216, 2, 1, "", "layer_norm"]], "ivy.array.random": [[218, 1, 1, "", "ArrayWithRandom"]], "ivy.array.random.ArrayWithRandom": [[218, 2, 1, "", "multinomial"], [218, 2, 1, "", "randint"], [218, 2, 1, "", "random_normal"], [218, 2, 1, "", "random_uniform"], [218, 2, 1, "", "shuffle"]], "ivy.array.searching": [[220, 1, 1, "", "ArrayWithSearching"]], "ivy.array.searching.ArrayWithSearching": [[220, 2, 1, "", "argmax"], [220, 2, 1, "", "argmin"], [220, 2, 1, "", "nonzero"], [220, 2, 1, "", "where"]], "ivy.array.set": [[222, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[222, 2, 1, "", "unique_all"], [222, 2, 1, "", "unique_counts"], [222, 2, 1, "", "unique_inverse"], [222, 2, 1, "", "unique_values"]], "ivy.array.sorting": [[224, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[224, 2, 1, "", "argsort"], [224, 2, 1, "", "searchsorted"], [224, 2, 1, "", "sort"]], "ivy.array.statistical": [[226, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[226, 2, 1, "", "einsum"], [226, 2, 1, "", "max"], [226, 2, 1, "", "mean"], [226, 2, 1, "", "min"], [226, 2, 1, "", "prod"], [226, 2, 1, "", "std"], [226, 2, 1, "", "sum"], [226, 2, 1, "", "var"]], "ivy.array.utility": [[230, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[230, 2, 1, "", "all"], [230, 2, 1, "", "any"]], "ivy.array.wrapping": [[232, 4, 1, "", "add_ivy_array_instance_methods"]], "ivy": [[233, 0, 0, "-", "backend_handler"], [693, 0, 0, "-", "func_wrapper"], [1660, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[233, 1, 1, "", "ContextManager"], [234, 4, 1, "", "choose_random_backend"], [235, 4, 1, "", "clear_backend_stack"], [236, 4, 1, "", "current_backend"], [237, 4, 1, "", "get_backend"], [238, 4, 1, "", "set_backend"], [239, 4, 1, "", "try_import_ivy_jax"], [240, 4, 1, "", "try_import_ivy_mxnet"], [241, 4, 1, "", "try_import_ivy_numpy"], [242, 4, 1, "", "try_import_ivy_tf"], [243, 4, 1, "", "try_import_ivy_torch"], [244, 4, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[233, 2, 1, "", "__init__"]], "ivy.container": [[249, 0, 0, "-", "activations"], [251, 0, 0, "-", "base"], [253, 0, 0, "-", "container"], [607, 0, 0, "-", "conversions"], [612, 0, 0, "-", "creation"], [614, 0, 0, "-", "data_type"], [616, 0, 0, "-", "device"], [618, 0, 0, "-", "elementwise"], [620, 0, 0, "-", "general"], [622, 0, 0, "-", "gradients"], [624, 0, 0, "-", "image"], [626, 0, 0, "-", "layers"], [628, 0, 0, "-", "linear_algebra"], [630, 0, 0, "-", "losses"], [632, 0, 0, "-", "manipulation"], [634, 0, 0, "-", "norms"], [636, 0, 0, "-", "random"], [638, 0, 0, "-", "searching"], [640, 0, 0, "-", "set"], [642, 0, 0, "-", "sorting"], [644, 0, 0, "-", "statistical"], [646, 0, 0, "-", "utility"], [648, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[250, 1, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[250, 2, 1, "", "gelu"], [250, 2, 1, "", "leaky_relu"], [250, 2, 1, "", "relu"], [250, 2, 1, "", "sigmoid"], [250, 2, 1, "", "softmax"], [250, 2, 1, "", "softplus"], [250, 2, 1, "", "static_gelu"], [250, 2, 1, "", "static_leaky_relu"], [250, 2, 1, "", "static_relu"], [250, 2, 1, "", "static_sigmoid"], [250, 2, 1, "", "static_softmax"], [250, 2, 1, "", "static_softplus"]], "ivy.container.base": [[252, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[252, 2, 1, "", "__getitem__"], [252, 2, 1, "", "__init__"], [252, 2, 1, "", "__setitem__"], [252, 2, 1, "", "all_false"], [252, 2, 1, "", "all_key_chains"], [252, 2, 1, "", "all_true"], [252, 2, 1, "", "as_bools"], [252, 2, 1, "", "assert_contains_sub_container"], [252, 2, 1, "", "assert_contains_sub_structure"], [252, 2, 1, "", "assert_identical"], [252, 2, 1, "", "assert_identical_structure"], [252, 2, 1, "", "at_key_chain"], [252, 2, 1, "", "at_key_chains"], [252, 2, 1, "", "at_keys"], [252, 2, 1, "", "combine"], [252, 2, 1, "", "common_key_chains"], [252, 3, 1, "", "config"], [252, 2, 1, "", "contains_sub_container"], [252, 2, 1, "", "contains_sub_structure"], [252, 2, 1, "", "copy"], [252, 2, 1, "", "create_if_absent"], [252, 2, 1, "", "cutoff_at_depth"], [252, 2, 1, "", "cutoff_at_height"], [252, 2, 1, "", "deep_copy"], [252, 3, 1, "", "dev"], [252, 3, 1, "", "dev_str"], [252, 2, 1, "", "diff"], [252, 2, 1, "", "find_sub_container"], [252, 2, 1, "", "find_sub_structure"], [252, 2, 1, "", "flatten_key_chain"], [252, 2, 1, "", "flatten_key_chains"], [252, 2, 1, "", "format_key_chains"], [252, 2, 1, "", "from_disk_as_hdf5"], [252, 2, 1, "", "from_disk_as_json"], [252, 2, 1, "", "from_disk_as_pickled"], [252, 2, 1, "", "from_flat_list"], [252, 2, 1, "", "h5_file_size"], [252, 2, 1, "", "handle_inplace"], [252, 2, 1, "", "has_key"], [252, 2, 1, "", "has_key_chain"], [252, 2, 1, "", "has_nans"], [252, 2, 1, "", "identical"], [252, 2, 1, "", "identical_array_shapes"], [252, 2, 1, "", "identical_configs"], [252, 2, 1, "", "identical_structure"], [252, 2, 1, "", "if_exists"], [252, 2, 1, "", "inplace_update"], [252, 3, 1, "", "ivy"], [252, 2, 1, "", "key_chains_containing"], [252, 2, 1, "", "list_join"], [252, 2, 1, "", "list_stack"], [252, 2, 1, "", "map"], [252, 2, 1, "", "map_conts"], [252, 3, 1, "", "max_depth"], [252, 2, 1, "", "multi_map"], [252, 2, 1, "", "multi_map_in_static_method"], [252, 2, 1, "", "num_arrays"], [252, 2, 1, "", "overwrite_at_key_chain"], [252, 2, 1, "", "overwrite_at_key_chains"], [252, 2, 1, "", "prune_empty"], [252, 2, 1, "", "prune_key_chain"], [252, 2, 1, "", "prune_key_chains"], [252, 2, 1, "", "prune_key_from_key_chains"], [252, 2, 1, "", "prune_keys"], [252, 2, 1, "", "prune_keys_from_key_chains"], [252, 2, 1, "", "reduce"], [252, 2, 1, "", "remove_key_length_limit"], [252, 2, 1, "", "remove_print_limit"], [252, 2, 1, "", "reshape_like"], [252, 2, 1, "", "restructure"], [252, 2, 1, "", "restructure_key_chains"], [252, 2, 1, "", "set_at_key_chain"], [252, 2, 1, "", "set_at_key_chains"], [252, 2, 1, "", "set_at_keys"], [252, 2, 1, "", "set_framework"], [252, 2, 1, "", "set_ivy_backend"], [252, 3, 1, "", "shape"], [252, 3, 1, "", "shapes"], [252, 2, 1, "", "show"], [252, 2, 1, "", "show_sub_container"], [252, 2, 1, "", "shuffle_h5_file"], [252, 2, 1, "", "size_ordered_arrays"], [252, 2, 1, "", "slice_keys"], [252, 2, 1, "", "slice_via_key"], [252, 2, 1, "", "sort_by_key"], [252, 2, 1, "", "split_conts"], [252, 2, 1, "", "structural_diff"], [252, 2, 1, "", "to_dict"], [252, 2, 1, "", "to_disk_as_hdf5"], [252, 2, 1, "", "to_disk_as_json"], [252, 2, 1, "", "to_disk_as_pickled"], [252, 2, 1, "", "to_flat_list"], [252, 2, 1, "", "to_iterator"], [252, 2, 1, "", "to_iterator_keys"], [252, 2, 1, "", "to_iterator_values"], [252, 2, 1, "", "to_jsonable"], [252, 2, 1, "", "to_nested_list"], [252, 2, 1, "", "to_raw"], [252, 2, 1, "", "trim_key"], [252, 2, 1, "", "try_kc"], [252, 2, 1, "", "unify"], [252, 2, 1, "", "unstack_conts"], [252, 2, 1, "", "update_config"], [252, 2, 1, "", "with_default_key_color"], [252, 2, 1, "", "with_entries_as_lists"], [252, 2, 1, "", "with_ivy_backend"], [252, 2, 1, "", "with_key_length_limit"], [252, 2, 1, "", "with_print_indent"], [252, 2, 1, "", "with_print_limit"], [252, 2, 1, "", "with_print_line_spacing"]], "ivy.container.container": [[254, 1, 1, "", "Container"]], "ivy.container.container.Container": [[254, 2, 1, "", "__add__"], [254, 2, 1, "", "__init__"], [254, 2, 1, "", "__radd__"]], "ivy.container.conversions": [[608, 4, 1, "", "static_to_ivy"], [609, 4, 1, "", "static_to_native"], [610, 4, 1, "", "to_ivy"], [611, 4, 1, "", "to_native"]], "ivy.container.creation": [[613, 1, 1, "", "ContainerWithCreation"]], "ivy.container.creation.ContainerWithCreation": [[613, 2, 1, "", "empty_like"], [613, 2, 1, "", "from_dlpack"], [613, 2, 1, "", "full_like"], [613, 2, 1, "", "meshgrid"], [613, 2, 1, "", "native_array"], [613, 2, 1, "", "ones_like"], [613, 2, 1, "", "static_arange"], [613, 2, 1, "", "static_asarray"], [613, 2, 1, "", "static_empty_like"], [613, 2, 1, "", "static_eye"], [613, 2, 1, "", "static_from_dlpack"], [613, 2, 1, "", "static_full_like"], [613, 2, 1, "", "static_linspace"], [613, 2, 1, "", "static_logspace"], [613, 2, 1, "", "static_meshgrid"], [613, 2, 1, "", "static_native_array"], [613, 2, 1, "", "static_ones"], [613, 2, 1, "", "static_ones_like"], [613, 2, 1, "", "static_tril"], [613, 2, 1, "", "static_triu"], [613, 2, 1, "", "static_zeros"], [613, 2, 1, "", "static_zeros_like"], [613, 2, 1, "", "tril"], [613, 2, 1, "", "triu"], [613, 2, 1, "", "zeros_like"]], "ivy.container.data_type": [[615, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[615, 2, 1, "", "astype"], [615, 2, 1, "", "broadcast_arrays"], [615, 2, 1, "", "broadcast_to"], [615, 2, 1, "", "can_cast"], [615, 2, 1, "", "dtype"], [615, 2, 1, "", "finfo"], [615, 2, 1, "", "iinfo"], [615, 2, 1, "", "is_bool_dtype"], [615, 2, 1, "", "is_float_dtype"], [615, 2, 1, "", "is_int_dtype"], [615, 2, 1, "", "is_uint_dtype"], [615, 2, 1, "", "result_type"], [615, 2, 1, "", "static_astype"], [615, 2, 1, "", "static_broadcast_arrays"], [615, 2, 1, "", "static_broadcast_to"], [615, 2, 1, "", "static_can_cast"], [615, 2, 1, "", "static_default_float_dtype"], [615, 2, 1, "", "static_dtype"], [615, 2, 1, "", "static_finfo"], [615, 2, 1, "", "static_function_supported_dtypes"], [615, 2, 1, "", "static_function_unsupported_dtypes"], [615, 2, 1, "", "static_iinfo"], [615, 2, 1, "", "static_is_bool_dtype"], [615, 2, 1, "", "static_is_float_dtype"], [615, 2, 1, "", "static_is_int_dtype"], [615, 2, 1, "", "static_is_uint_dtype"], [615, 2, 1, "", "static_result_type"]], "ivy.container.device": [[617, 1, 1, "", "ContainerWithDevice"]], "ivy.container.device.ContainerWithDevice": [[617, 2, 1, "", "dev"], [617, 2, 1, "", "static_dev"], [617, 2, 1, "", "static_to_device"], [617, 2, 1, "", "to_device"]], "ivy.container.elementwise": [[619, 1, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[619, 2, 1, "", "abs"], [619, 2, 1, "", "acos"], [619, 2, 1, "", "acosh"], [619, 2, 1, "", "add"], [619, 2, 1, "", "asin"], [619, 2, 1, "", "asinh"], [619, 2, 1, "", "atan"], [619, 2, 1, "", "atan2"], [619, 2, 1, "", "atanh"], [619, 2, 1, "", "bitwise_and"], [619, 2, 1, "", "bitwise_invert"], [619, 2, 1, "", "bitwise_left_shift"], [619, 2, 1, "", "bitwise_or"], [619, 2, 1, "", "bitwise_right_shift"], [619, 2, 1, "", "bitwise_xor"], [619, 2, 1, "", "ceil"], [619, 2, 1, "", "cos"], [619, 2, 1, "", "cosh"], [619, 2, 1, "", "divide"], [619, 2, 1, "", "equal"], [619, 2, 1, "", "erf"], [619, 2, 1, "", "exp"], [619, 2, 1, "", "expm1"], [619, 2, 1, "", "floor"], [619, 2, 1, "", "floor_divide"], [619, 2, 1, "", "greater"], [619, 2, 1, "", "greater_equal"], [619, 2, 1, "", "isfinite"], [619, 2, 1, "", "isinf"], [619, 2, 1, "", "isnan"], [619, 2, 1, "", "less"], [619, 2, 1, "", "less_equal"], [619, 2, 1, "", "log"], [619, 2, 1, "", "log10"], [619, 2, 1, "", "log1p"], [619, 2, 1, "", "log2"], [619, 2, 1, "", "logaddexp"], [619, 2, 1, "", "logical_and"], [619, 2, 1, "", "logical_not"], [619, 2, 1, "", "logical_or"], [619, 2, 1, "", "logical_xor"], [619, 2, 1, "", "maximum"], [619, 2, 1, "", "minimum"], [619, 2, 1, "", "multiply"], [619, 2, 1, "", "negative"], [619, 2, 1, "", "not_equal"], [619, 2, 1, "", "positive"], [619, 2, 1, "", "pow"], [619, 2, 1, "", "remainder"], [619, 2, 1, "", "round"], [619, 2, 1, "", "sign"], [619, 2, 1, "", "sin"], [619, 2, 1, "", "sinh"], [619, 2, 1, "", "sqrt"], [619, 2, 1, "", "square"], [619, 2, 1, "", "static_abs"], [619, 2, 1, "", "static_acos"], [619, 2, 1, "", "static_acosh"], [619, 2, 1, "", "static_add"], [619, 2, 1, "", "static_asin"], [619, 2, 1, "", "static_asinh"], [619, 2, 1, "", "static_atan"], [619, 2, 1, "", "static_atan2"], [619, 2, 1, "", "static_atanh"], [619, 2, 1, "", "static_bitwise_and"], [619, 2, 1, "", "static_bitwise_invert"], [619, 2, 1, "", "static_bitwise_left_shift"], [619, 2, 1, "", "static_bitwise_or"], [619, 2, 1, "", "static_bitwise_right_shift"], [619, 2, 1, "", "static_bitwise_xor"], [619, 2, 1, "", "static_ceil"], [619, 2, 1, "", "static_cos"], [619, 2, 1, "", "static_cosh"], [619, 2, 1, "", "static_divide"], [619, 2, 1, "", "static_equal"], [619, 2, 1, "", "static_erf"], [619, 2, 1, "", "static_exp"], [619, 2, 1, "", "static_expm1"], [619, 2, 1, "", "static_floor"], [619, 2, 1, "", "static_floor_divide"], [619, 2, 1, "", "static_greater"], [619, 2, 1, "", "static_greater_equal"], [619, 2, 1, "", "static_isfinite"], [619, 2, 1, "", "static_isinf"], [619, 2, 1, "", "static_isnan"], [619, 2, 1, "", "static_less"], [619, 2, 1, "", "static_less_equal"], [619, 2, 1, "", "static_log"], [619, 2, 1, "", "static_log10"], [619, 2, 1, "", "static_log1p"], [619, 2, 1, "", "static_log2"], [619, 2, 1, "", "static_logaddexp"], [619, 2, 1, "", "static_logical_and"], [619, 2, 1, "", "static_logical_not"], [619, 2, 1, "", "static_logical_or"], [619, 2, 1, "", "static_logical_xor"], [619, 2, 1, "", "static_maximum"], [619, 2, 1, "", "static_minimum"], [619, 2, 1, "", "static_multiply"], [619, 2, 1, "", "static_negative"], [619, 2, 1, "", "static_not_equal"], [619, 2, 1, "", "static_positive"], [619, 2, 1, "", "static_pow"], [619, 2, 1, "", "static_remainder"], [619, 2, 1, "", "static_round"], [619, 2, 1, "", "static_sign"], [619, 2, 1, "", "static_sin"], [619, 2, 1, "", "static_sinh"], [619, 2, 1, "", "static_sqrt"], [619, 2, 1, "", "static_square"], [619, 2, 1, "", "static_subtract"], [619, 2, 1, "", "static_tan"], [619, 2, 1, "", "static_tanh"], [619, 2, 1, "", "static_trunc"], [619, 2, 1, "", "subtract"], [619, 2, 1, "", "tan"], [619, 2, 1, "", "tanh"], [619, 2, 1, "", "trunc"]], "ivy.container.general": [[621, 1, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[621, 2, 1, "", "all_equal"], [621, 2, 1, "", "clip_matrix_norm"], [621, 2, 1, "", "clip_vector_norm"], [621, 2, 1, "", "cumprod"], [621, 2, 1, "", "einops_rearrange"], [621, 2, 1, "", "einops_reduce"], [621, 2, 1, "", "einops_repeat"], [621, 2, 1, "", "gather"], [621, 2, 1, "", "gather_nd"], [621, 2, 1, "", "has_nans"], [621, 2, 1, "", "inplace_decrement"], [621, 2, 1, "", "stable_divide"], [621, 2, 1, "", "static_all_equal"], [621, 2, 1, "", "static_clip_matrix_norm"], [621, 2, 1, "", "static_clip_vector_norm"], [621, 2, 1, "", "static_cumprod"], [621, 2, 1, "", "static_einops_rearrange"], [621, 2, 1, "", "static_einops_reduce"], [621, 2, 1, "", "static_einops_repeat"], [621, 2, 1, "", "static_gather"], [621, 2, 1, "", "static_gather_nd"], [621, 2, 1, "", "static_has_nans"], [621, 2, 1, "", "static_inplace_decrement"], [621, 2, 1, "", "static_stable_divide"], [621, 2, 1, "", "static_to_list"], [621, 2, 1, "", "static_to_numpy"], [621, 2, 1, "", "static_unstack"], [621, 2, 1, "", "to_list"], [621, 2, 1, "", "to_numpy"], [621, 2, 1, "", "unstack"]], "ivy.container.gradients": [[623, 1, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[623, 2, 1, "", "adam_step"], [623, 2, 1, "", "adam_update"], [623, 2, 1, "", "gradient_descent_update"], [623, 2, 1, "", "is_variable"], [623, 2, 1, "", "lamb_update"], [623, 2, 1, "", "lars_update"], [623, 2, 1, "", "optimizer_update"], [623, 2, 1, "", "static_is_variable"], [623, 2, 1, "", "static_stop_gradient"], [623, 2, 1, "", "static_variable"], [623, 2, 1, "", "static_variable_data"], [623, 2, 1, "", "stop_gradient"], [623, 2, 1, "", "variable"], [623, 2, 1, "", "variable_data"]], "ivy.container.image": [[625, 1, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[627, 1, 1, "", "ContainerWithLayers"]], "ivy.container.layers.ContainerWithLayers": [[627, 2, 1, "", "conv1d"], [627, 2, 1, "", "depthwise_conv2d"], [627, 2, 1, "", "static_conv1d"], [627, 2, 1, "", "static_depthwise_conv2d"]], "ivy.container.linear_algebra": [[629, 1, 1, "", "ContainerWithLinearAlgebra"]], "ivy.container.linear_algebra.ContainerWithLinearAlgebra": [[629, 2, 1, "", "cholesky"], [629, 2, 1, "", "cross"], [629, 2, 1, "", "det"], [629, 2, 1, "", "diagonal"], [629, 2, 1, "", "eigh"], [629, 2, 1, "", "inv"], [629, 2, 1, "", "matmul"], [629, 2, 1, "", "matrix_norm"], [629, 2, 1, "", "matrix_power"], [629, 2, 1, "", "matrix_rank"], [629, 2, 1, "", "matrix_transpose"], [629, 2, 1, "", "outer"], [629, 2, 1, "", "qr"], [629, 2, 1, "", "slogdet"], [629, 2, 1, "", "solve"], [629, 2, 1, "", "static_cholesky"], [629, 2, 1, "", "static_cross"], [629, 2, 1, "", "static_det"], [629, 2, 1, "", "static_diagonal"], [629, 2, 1, "", "static_inv"], [629, 2, 1, "", "static_matrix_norm"], [629, 2, 1, "", "static_matrix_power"], [629, 2, 1, "", "static_matrix_rank"], [629, 2, 1, "", "static_matrix_transpose"], [629, 2, 1, "", "static_outer"], [629, 2, 1, "", "static_qr"], [629, 2, 1, "", "static_slogdet"], [629, 2, 1, "", "static_solve"], [629, 2, 1, "", "static_svd"], [629, 2, 1, "", "static_svdvals"], [629, 2, 1, "", "static_tensordot"], [629, 2, 1, "", "static_trace"], [629, 2, 1, "", "static_vecdot"], [629, 2, 1, "", "static_vector_norm"], [629, 2, 1, "", "static_vector_to_skew_symmetric_matrix"], [629, 2, 1, "", "svd"], [629, 2, 1, "", "svdvals"], [629, 2, 1, "", "tensordot"], [629, 2, 1, "", "trace"], [629, 2, 1, "", "vecdot"], [629, 2, 1, "", "vector_norm"], [629, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.container.losses": [[631, 1, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[631, 2, 1, "", "binary_cross_entropy"], [631, 2, 1, "", "cross_entropy"], [631, 2, 1, "", "sparse_cross_entropy"], [631, 2, 1, "", "static_binary_cross_entropy"], [631, 2, 1, "", "static_cross_entropy"], [631, 2, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[633, 1, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[633, 2, 1, "", "clip"], [633, 2, 1, "", "concat"], [633, 2, 1, "", "constant_pad"], [633, 2, 1, "", "expand_dims"], [633, 2, 1, "", "flip"], [633, 2, 1, "", "permute_dims"], [633, 2, 1, "", "repeat"], [633, 2, 1, "", "reshape"], [633, 2, 1, "", "roll"], [633, 2, 1, "", "split"], [633, 2, 1, "", "squeeze"], [633, 2, 1, "", "stack"], [633, 2, 1, "", "static_clip"], [633, 2, 1, "", "static_concat"], [633, 2, 1, "", "static_expand_dims"], [633, 2, 1, "", "static_repeat"], [633, 2, 1, "", "static_reshape"], [633, 2, 1, "", "static_roll"], [633, 2, 1, "", "static_split"], [633, 2, 1, "", "swapaxes"], [633, 2, 1, "", "tile"], [633, 2, 1, "", "zero_pad"]], "ivy.container.norms": [[635, 1, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[635, 2, 1, "", "layer_norm"]], "ivy.container.random": [[637, 1, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[637, 2, 1, "", "multinomial"], [637, 2, 1, "", "randint"], [637, 2, 1, "", "random_normal"], [637, 2, 1, "", "random_uniform"], [637, 2, 1, "", "shuffle"], [637, 2, 1, "", "static_multinomial"], [637, 2, 1, "", "static_randint"], [637, 2, 1, "", "static_random_normal"], [637, 2, 1, "", "static_random_uniform"], [637, 2, 1, "", "static_shuffle"]], "ivy.container.searching": [[639, 1, 1, "", "ContainerWithSearching"]], "ivy.container.searching.ContainerWithSearching": [[639, 2, 1, "", "argmax"], [639, 2, 1, "", "argmin"], [639, 2, 1, "", "nonzero"], [639, 2, 1, "", "static_argmax"], [639, 2, 1, "", "static_argmin"], [639, 2, 1, "", "static_nonzero"], [639, 2, 1, "", "static_where"], [639, 2, 1, "", "where"]], "ivy.container.set": [[641, 1, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[641, 2, 1, "", "static_unique_all"], [641, 2, 1, "", "static_unique_counts"], [641, 2, 1, "", "static_unique_inverse"], [641, 2, 1, "", "static_unique_values"], [641, 2, 1, "", "unique_all"], [641, 2, 1, "", "unique_counts"], [641, 2, 1, "", "unique_inverse"], [641, 2, 1, "", "unique_values"]], "ivy.container.sorting": [[643, 1, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[643, 2, 1, "", "argsort"], [643, 2, 1, "", "searchsorted"], [643, 2, 1, "", "sort"], [643, 2, 1, "", "static_argsort"], [643, 2, 1, "", "static_searchsorted"], [643, 2, 1, "", "static_sort"]], "ivy.container.statistical": [[645, 1, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[645, 2, 1, "", "einsum"], [645, 2, 1, "", "max"], [645, 2, 1, "", "mean"], [645, 2, 1, "", "min"], [645, 2, 1, "", "prod"], [645, 2, 1, "", "static_var"], [645, 2, 1, "", "std"], [645, 2, 1, "", "sum"], [645, 2, 1, "", "var"]], "ivy.container.utility": [[647, 1, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[647, 2, 1, "", "all"], [647, 2, 1, "", "any"], [647, 2, 1, "", "static_all"], [647, 2, 1, "", "static_any"]], "ivy.container.wrapping": [[649, 4, 1, "", "add_ivy_container_instance_methods"]], "ivy.func_wrapper": [[694, 4, 1, "", "from_zero_dim_arrays_to_float"], [695, 4, 1, "", "handle_nestable"], [696, 4, 1, "", "handle_out_argument"], [697, 4, 1, "", "infer_device"], [698, 4, 1, "", "infer_dtype"], [699, 4, 1, "", "inputs_to_ivy_arrays"], [700, 4, 1, "", "inputs_to_native_arrays"], [701, 4, 1, "", "integer_array_to_float"], [702, 4, 1, "", "outputs_to_ivy_arrays"], [703, 4, 1, "", "to_native_arrays_and_back"]], "ivy.functional.ivy": [[705, 0, 0, "-", "activations"], [730, 0, 0, "-", "compilation"], [732, 0, 0, "-", "constants"], [733, 0, 0, "-", "creation"], [793, 0, 0, "-", "data_type"], [873, 0, 0, "-", "device"], [906, 0, 0, "-", "elementwise"], [1144, 0, 0, "-", "general"], [1265, 0, 0, "-", "gradients"], [1307, 0, 0, "-", "layers"], [1328, 0, 0, "-", "linear_algebra"], [1418, 0, 0, "-", "losses"], [1431, 0, 0, "-", "manipulation"], [1484, 0, 0, "-", "meta"], [1488, 0, 0, "-", "nest"], [1506, 0, 0, "-", "norms"], [1510, 0, 0, "-", "random"], [1532, 0, 0, "-", "searching"], [1550, 0, 0, "-", "set"], [1567, 0, 0, "-", "sorting"], [1581, 0, 0, "-", "statistical"], [1607, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[708, 4, 1, "", "gelu"], [712, 4, 1, "", "leaky_relu"], [716, 4, 1, "", "relu"], [720, 4, 1, "", "sigmoid"], [724, 4, 1, "", "softmax"], [728, 4, 1, "", "softplus"]], "ivy.functional.ivy.compilation": [[731, 4, 1, "", "compile"]], "ivy.functional.ivy.constants": [[732, 5, 1, "", "e"], [732, 5, 1, "", "inf"], [732, 5, 1, "", "nan"], [732, 5, 1, "", "newaxis"], [732, 5, 1, "", "pi"]], "ivy.functional.ivy.creation": [[735, 4, 1, "", "arange"], [733, 4, 1, "", "array"], [738, 4, 1, "", "asarray"], [740, 4, 1, "", "empty"], [743, 4, 1, "", "empty_like"], [746, 4, 1, "", "eye"], [750, 4, 1, "", "from_dlpack"], [752, 4, 1, "", "full"], [755, 4, 1, "", "full_like"], [758, 4, 1, "", "linspace"], [761, 4, 1, "", "logspace"], [765, 4, 1, "", "meshgrid"], [769, 4, 1, "", "native_array"], [772, 4, 1, "", "ones"], [776, 4, 1, "", "ones_like"], [781, 4, 1, "", "tril"], [785, 4, 1, "", "triu"], [788, 4, 1, "", "zeros"], [792, 4, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[793, 1, 1, "", "DefaultDtype"], [793, 1, 1, "", "DefaultFloatDtype"], [793, 1, 1, "", "DefaultIntDtype"], [793, 1, 1, "", "DefaultUintDtype"], [794, 4, 1, "", "as_ivy_dtype"], [795, 4, 1, "", "as_native_dtype"], [798, 4, 1, "", "astype"], [802, 4, 1, "", "broadcast_arrays"], [806, 4, 1, "", "broadcast_to"], [810, 4, 1, "", "can_cast"], [812, 4, 1, "", "check_float"], [813, 4, 1, "", "closest_valid_dtype"], [814, 4, 1, "", "default_dtype"], [816, 4, 1, "", "default_float_dtype"], [818, 4, 1, "", "default_int_dtype"], [819, 4, 1, "", "default_uint_dtype"], [822, 4, 1, "", "dtype"], [824, 4, 1, "", "dtype_bits"], [827, 4, 1, "", "finfo"], [830, 4, 1, "", "function_supported_dtypes"], [833, 4, 1, "", "function_unsupported_dtypes"], [837, 4, 1, "", "iinfo"], [839, 4, 1, "", "invalid_dtype"], [842, 4, 1, "", "is_bool_dtype"], [846, 4, 1, "", "is_float_dtype"], [850, 4, 1, "", "is_int_dtype"], [855, 4, 1, "", "is_uint_dtype"], [857, 4, 1, "", "promote_types"], [858, 4, 1, "", "promote_types_of_inputs"], [861, 4, 1, "", "result_type"], [863, 4, 1, "", "set_default_dtype"], [864, 4, 1, "", "set_default_float_dtype"], [865, 4, 1, "", "set_default_int_dtype"], [866, 4, 1, "", "set_default_uint_dtype"], [867, 4, 1, "", "type_promote_arrays"], [868, 4, 1, "", "unset_default_dtype"], [869, 4, 1, "", "unset_default_float_dtype"], [870, 4, 1, "", "unset_default_int_dtype"], [871, 4, 1, "", "unset_default_uint_dtype"], [872, 4, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[793, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[793, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[793, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultUintDtype": [[793, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[873, 1, 1, "", "DefaultDevice"], [874, 1, 1, "", "Profiler"], [875, 4, 1, "", "as_ivy_dev"], [876, 4, 1, "", "as_native_dev"], [877, 4, 1, "", "clear_mem_on_dev"], [878, 4, 1, "", "default_device"], [881, 4, 1, "", "dev"], [883, 4, 1, "", "dev_util"], [884, 4, 1, "", "function_supported_devices"], [885, 4, 1, "", "function_unsupported_devices"], [886, 4, 1, "", "get_all_ivy_arrays_on_dev"], [887, 4, 1, "", "gpu_is_available"], [888, 4, 1, "", "num_cpu_cores"], [889, 4, 1, "", "num_gpus"], [890, 4, 1, "", "num_ivy_arrays_on_dev"], [891, 4, 1, "", "percent_used_mem_on_dev"], [892, 4, 1, "", "print_all_ivy_arrays_on_dev"], [893, 4, 1, "", "set_default_device"], [894, 4, 1, "", "set_split_factor"], [895, 4, 1, "", "split_factor"], [896, 4, 1, "", "split_func_call"], [901, 4, 1, "", "to_device"], [902, 4, 1, "", "total_mem_on_dev"], [903, 4, 1, "", "tpu_is_available"], [904, 4, 1, "", "unset_default_device"], [905, 4, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[873, 2, 1, "", "__enter__"], [873, 2, 1, "", "__exit__"], [873, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.Profiler": [[874, 2, 1, "", "__init__"], [874, 2, 1, "", "start"], [874, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[909, 4, 1, "", "abs"], [913, 4, 1, "", "acos"], [917, 4, 1, "", "acosh"], [921, 4, 1, "", "add"], [925, 4, 1, "", "asin"], [929, 4, 1, "", "asinh"], [933, 4, 1, "", "atan"], [937, 4, 1, "", "atan2"], [941, 4, 1, "", "atanh"], [945, 4, 1, "", "bitwise_and"], [949, 4, 1, "", "bitwise_invert"], [953, 4, 1, "", "bitwise_left_shift"], [957, 4, 1, "", "bitwise_or"], [961, 4, 1, "", "bitwise_right_shift"], [965, 4, 1, "", "bitwise_xor"], [969, 4, 1, "", "ceil"], [973, 4, 1, "", "cos"], [977, 4, 1, "", "cosh"], [981, 4, 1, "", "divide"], [985, 4, 1, "", "equal"], [989, 4, 1, "", "erf"], [993, 4, 1, "", "exp"], [997, 4, 1, "", "expm1"], [1001, 4, 1, "", "floor"], [1005, 4, 1, "", "floor_divide"], [1009, 4, 1, "", "greater"], [1013, 4, 1, "", "greater_equal"], [1017, 4, 1, "", "isfinite"], [1021, 4, 1, "", "isinf"], [1025, 4, 1, "", "isnan"], [1029, 4, 1, "", "less"], [1033, 4, 1, "", "less_equal"], [1037, 4, 1, "", "log"], [1041, 4, 1, "", "log10"], [1045, 4, 1, "", "log1p"], [1049, 4, 1, "", "log2"], [1053, 4, 1, "", "logaddexp"], [1057, 4, 1, "", "logical_and"], [1061, 4, 1, "", "logical_not"], [1065, 4, 1, "", "logical_or"], [1069, 4, 1, "", "logical_xor"], [1073, 4, 1, "", "maximum"], [1077, 4, 1, "", "minimum"], [1081, 4, 1, "", "multiply"], [1085, 4, 1, "", "negative"], [1089, 4, 1, "", "not_equal"], [1093, 4, 1, "", "positive"], [1097, 4, 1, "", "pow"], [1101, 4, 1, "", "remainder"], [1105, 4, 1, "", "round"], [1109, 4, 1, "", "sign"], [1113, 4, 1, "", "sin"], [1117, 4, 1, "", "sinh"], [1121, 4, 1, "", "sqrt"], [1125, 4, 1, "", "square"], [1131, 4, 1, "", "subtract"], [1135, 4, 1, "", "tan"], [1139, 4, 1, "", "tanh"], [1143, 4, 1, "", "trunc"]], "ivy.functional.ivy.general": [[1147, 4, 1, "", "all_equal"], [1149, 4, 1, "", "arg_info"], [1150, 4, 1, "", "arg_names"], [1151, 4, 1, "", "array_equal"], [1152, 4, 1, "", "arrays_equal"], [1153, 4, 1, "", "assert_supports_inplace"], [1154, 4, 1, "", "cache_fn"], [1157, 4, 1, "", "clip_matrix_norm"], [1161, 4, 1, "", "clip_vector_norm"], [1163, 4, 1, "", "container_types"], [1164, 4, 1, "", "copy_array"], [1167, 4, 1, "", "cumprod"], [1169, 4, 1, "", "cumsum"], [1170, 4, 1, "", "current_backend_str"], [1171, 4, 1, "", "default"], [1174, 4, 1, "", "einops_rearrange"], [1178, 4, 1, "", "einops_reduce"], [1182, 4, 1, "", "einops_repeat"], [1184, 4, 1, "", "exists"], [1185, 4, 1, "", "floormod"], [1186, 4, 1, "", "fourier_encode"], [1187, 4, 1, "", "function_supported_devices_and_dtypes"], [1188, 4, 1, "", "function_unsupported_devices_and_dtypes"], [1191, 4, 1, "", "gather"], [1195, 4, 1, "", "gather_nd"], [1197, 4, 1, "", "get_all_arrays_in_memory"], [1198, 4, 1, "", "get_array_mode"], [1199, 4, 1, "", "get_min_base"], [1200, 4, 1, "", "get_min_denominator"], [1201, 4, 1, "", "get_nestable_mode"], [1202, 4, 1, "", "get_num_dims"], [1203, 4, 1, "", "get_referrers_recursive"], [1206, 4, 1, "", "has_nans"], [1208, 4, 1, "", "indices_where"], [1209, 4, 1, "", "inplace_arrays_supported"], [1212, 4, 1, "", "inplace_decrement"], [1214, 4, 1, "", "inplace_increment"], [1215, 4, 1, "", "inplace_update"], [1216, 4, 1, "", "inplace_variables_supported"], [1217, 4, 1, "", "is_array"], [1218, 4, 1, "", "is_ivy_array"], [1219, 4, 1, "", "is_ivy_container"], [1220, 4, 1, "", "is_native_array"], [1221, 4, 1, "", "match_kwargs"], [1222, 4, 1, "", "multiprocessing"], [1223, 4, 1, "", "num_arrays_in_memory"], [1224, 4, 1, "", "one_hot"], [1225, 4, 1, "", "print_all_arrays_in_memory"], [1226, 4, 1, "", "queue_timeout"], [1227, 4, 1, "", "scatter_flat"], [1228, 4, 1, "", "scatter_nd"], [1229, 4, 1, "", "set_array_mode"], [1230, 4, 1, "", "set_min_base"], [1231, 4, 1, "", "set_min_denominator"], [1232, 4, 1, "", "set_nestable_mode"], [1233, 4, 1, "", "set_queue_timeout"], [1234, 4, 1, "", "set_shape_array_mode"], [1235, 4, 1, "", "set_tmp_dir"], [1236, 4, 1, "", "shape"], [1237, 4, 1, "", "shape_array_mode"], [1240, 4, 1, "", "stable_divide"], [1242, 4, 1, "", "stable_pow"], [1243, 4, 1, "", "supports_inplace"], [1244, 4, 1, "", "tmp_dir"], [1245, 4, 1, "", "to_ivy_shape"], [1249, 4, 1, "", "to_list"], [1250, 4, 1, "", "to_native_shape"], [1254, 4, 1, "", "to_numpy"], [1255, 4, 1, "", "to_scalar"], [1256, 4, 1, "", "try_else_none"], [1257, 4, 1, "", "unset_array_mode"], [1258, 4, 1, "", "unset_nestable_mode"], [1259, 4, 1, "", "unset_shape_array_mode"], [1263, 4, 1, "", "unstack"], [1264, 4, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[1265, 1, 1, "", "GradientTracking"], [1268, 4, 1, "", "adam_step"], [1271, 4, 1, "", "adam_update"], [1272, 4, 1, "", "execute_with_gradients"], [1273, 4, 1, "", "grad"], [1276, 4, 1, "", "gradient_descent_update"], [1279, 4, 1, "", "is_variable"], [1281, 4, 1, "", "jac"], [1284, 4, 1, "", "lamb_update"], [1287, 4, 1, "", "lars_update"], [1290, 4, 1, "", "optimizer_update"], [1291, 4, 1, "", "set_with_grads"], [1295, 4, 1, "", "stop_gradient"], [1296, 4, 1, "", "unset_with_grads"], [1297, 4, 1, "", "value_and_grad"], [1301, 4, 1, "", "variable"], [1305, 4, 1, "", "variable_data"], [1306, 4, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[1265, 2, 1, "", "__init__"]], "ivy.functional.ivy.layers": [[1310, 4, 1, "", "conv1d"], [1312, 4, 1, "", "conv1d_transpose"], [1313, 4, 1, "", "conv2d"], [1314, 4, 1, "", "conv2d_transpose"], [1315, 4, 1, "", "conv3d"], [1316, 4, 1, "", "conv3d_transpose"], [1317, 4, 1, "", "deconv_length"], [1320, 4, 1, "", "depthwise_conv2d"], [1322, 4, 1, "", "dropout"], [1323, 4, 1, "", "handle_padding"], [1324, 4, 1, "", "linear"], [1325, 4, 1, "", "lstm_update"], [1326, 4, 1, "", "multi_head_attention"], [1327, 4, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[1331, 4, 1, "", "cholesky"], [1335, 4, 1, "", "cross"], [1339, 4, 1, "", "det"], [1343, 4, 1, "", "diagonal"], [1347, 4, 1, "", "eigh"], [1348, 4, 1, "", "eigvalsh"], [1351, 4, 1, "", "inv"], [1355, 4, 1, "", "matmul"], [1358, 4, 1, "", "matrix_norm"], [1362, 4, 1, "", "matrix_power"], [1366, 4, 1, "", "matrix_rank"], [1370, 4, 1, "", "matrix_transpose"], [1374, 4, 1, "", "outer"], [1376, 4, 1, "", "pinv"], [1379, 4, 1, "", "qr"], [1383, 4, 1, "", "slogdet"], [1387, 4, 1, "", "solve"], [1392, 4, 1, "", "svd"], [1397, 4, 1, "", "svdvals"], [1401, 4, 1, "", "tensordot"], [1405, 4, 1, "", "trace"], [1409, 4, 1, "", "vecdot"], [1413, 4, 1, "", "vector_norm"], [1417, 4, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[1421, 4, 1, "", "binary_cross_entropy"], [1425, 4, 1, "", "cross_entropy"], [1429, 4, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[1434, 4, 1, "", "clip"], [1438, 4, 1, "", "concat"], [1442, 4, 1, "", "constant_pad"], [1445, 4, 1, "", "expand_dims"], [1449, 4, 1, "", "flip"], [1452, 4, 1, "", "permute_dims"], [1455, 4, 1, "", "repeat"], [1459, 4, 1, "", "reshape"], [1463, 4, 1, "", "roll"], [1467, 4, 1, "", "split"], [1471, 4, 1, "", "squeeze"], [1474, 4, 1, "", "stack"], [1477, 4, 1, "", "swapaxes"], [1480, 4, 1, "", "tile"], [1483, 4, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[1485, 4, 1, "", "fomaml_step"], [1486, 4, 1, "", "maml_step"], [1487, 4, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[1489, 4, 1, "", "all_nested_indices"], [1490, 4, 1, "", "copy_nest"], [1491, 4, 1, "", "index_nest"], [1492, 4, 1, "", "insert_into_nest_at_index"], [1493, 4, 1, "", "insert_into_nest_at_indices"], [1494, 4, 1, "", "map"], [1495, 4, 1, "", "map_nest_at_index"], [1496, 4, 1, "", "map_nest_at_indices"], [1497, 4, 1, "", "multi_index_nest"], [1498, 4, 1, "", "nested_any"], [1499, 4, 1, "", "nested_indices_where"], [1500, 4, 1, "", "nested_map"], [1501, 4, 1, "", "nested_multi_map"], [1502, 4, 1, "", "prune_nest_at_index"], [1503, 4, 1, "", "prune_nest_at_indices"], [1504, 4, 1, "", "set_nest_at_index"], [1505, 4, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[1509, 4, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[1513, 4, 1, "", "multinomial"], [1517, 4, 1, "", "randint"], [1521, 4, 1, "", "random_normal"], [1525, 4, 1, "", "random_uniform"], [1527, 4, 1, "", "seed"], [1530, 4, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[1535, 4, 1, "", "argmax"], [1539, 4, 1, "", "argmin"], [1544, 4, 1, "", "nonzero"], [1549, 4, 1, "", "where"]], "ivy.functional.ivy.set": [[1554, 4, 1, "", "unique_all"], [1558, 4, 1, "", "unique_counts"], [1562, 4, 1, "", "unique_inverse"], [1566, 4, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[1570, 4, 1, "", "argsort"], [1575, 4, 1, "", "searchsorted"], [1579, 4, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[1584, 4, 1, "", "einsum"], [1587, 4, 1, "", "max"], [1590, 4, 1, "", "mean"], [1593, 4, 1, "", "min"], [1596, 4, 1, "", "prod"], [1599, 4, 1, "", "std"], [1602, 4, 1, "", "sum"], [1606, 4, 1, "", "var"]], "ivy.functional.ivy.utility": [[1610, 4, 1, "", "all"], [1614, 4, 1, "", "any"]], "ivy.verbosity": [[1661, 4, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"activ": [0, 249, 705, 1624], "arraywithactiv": 1, "arrai": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 247, 657, 661, 668, 670, 677, 853, 899, 1129, 1395, 1542, 1573], "variabl": [4, 180, 599, 1298, 1300, 1301], "method": [5, 255, 669, 677, 678], "ab": [6, 256, 907, 908, 909], "aco": [7, 257, 911, 912, 913], "acosh": [8, 258, 915, 916, 917], "adam_step": [9, 259, 1266, 1267, 1268], "adam_upd": [10, 260, 1269, 1270, 1271], "add": [11, 261, 660, 919, 920, 921], "add_ivy_array_instance_method": [12, 232], "all": [13, 263, 1608, 1609, 1610], "all_equ": [14, 264, 1145, 1146, 1147], "ani": [15, 265, 1612, 1613, 1614], "argmax": [16, 266, 1533, 1534, 1535], "argmin": [17, 267, 1537, 1538, 1539], "argsort": [18, 268, 1568, 1569, 1570], "asarrai": [19, 737, 738], "asin": [20, 269, 923, 924, 925], "asinh": [21, 270, 927, 928, 929], "astyp": [22, 271, 796, 797, 798], "atan": [23, 272, 931, 932, 933], "atan2": [24, 273, 935, 936, 937], "atanh": [25, 274, 939, 940, 941], "binary_cross_entropi": [26, 275, 1419, 1420, 1421], "bitwise_and": [27, 276, 943, 944, 945], "bitwise_invert": [28, 277, 947, 948, 949], "bitwise_left_shift": [29, 278, 951, 952, 953], "bitwise_or": [30, 279, 955, 956, 957], "bitwise_right_shift": [31, 280, 959, 960, 961], "bitwise_xor": [32, 281, 963, 964, 965], "broadcast_arrai": [33, 282, 800, 801, 802], "broadcast_to": [34, 283, 804, 805, 806], "can_cast": [35, 284, 808, 809, 810], "ceil": [36, 285, 967, 968, 969], "choleski": [37, 286, 1329, 1330, 1331], "clip": [38, 287, 1432, 1433, 1434], "clip_matrix_norm": [39, 288, 1155, 1156, 1157], "clip_vector_norm": [40, 289, 1159, 1160, 1161], "concat": [41, 290, 1436, 1437, 1438], "constant_pad": [42, 291, 1440, 1441, 1442], "conv1d": [43, 292, 1308, 1309, 1310, 1636], "co": [44, 293, 971, 972, 973], "cosh": [45, 294, 975, 976, 977], "cross": [46, 295, 1333, 1334, 1335], "cross_entropi": [47, 296, 1423, 1424, 1425], "cumprod": [48, 297, 1165, 1166, 1167], "depthwise_conv2d": [49, 298, 1318, 1319, 1320], "det": [50, 299, 1337, 1338, 1339], "dev": [51, 300, 879, 880, 881], "diagon": [52, 301, 1341, 1342, 1343], "divid": [53, 302, 979, 980, 981], "dtype": [54, 303, 657, 820, 821, 822], "eigh": [55, 304, 1345, 1346, 1347], "eigvalsh": [56, 1348], "einops_rearrang": [57, 305, 1172, 1173, 1174], "einops_reduc": [58, 306, 1176, 1177, 1178], "einops_repeat": [59, 307, 1180, 1181, 1182], "einsum": [60, 308, 1582, 1583, 1584], "empty_lik": [61, 309, 741, 742, 743], "equal": [62, 310, 983, 984, 985], "erf": [63, 311, 987, 988, 989], "exp": [64, 312, 991, 992, 993], "expand_dim": [65, 313, 1443, 1444, 1445], "expm1": [66, 314, 995, 996, 997], "finfo": [67, 315, 825, 826, 827], "flip": [68, 316, 1447, 1448, 1449], "floor": [69, 317, 999, 1000, 1001], "floor_divid": [70, 318, 1003, 1004, 1005], "from_dlpack": [71, 319, 748, 749, 750], "full_lik": [72, 320, 753, 754, 755], "gather": [73, 321, 1189, 1190, 1191], "gather_nd": [74, 322, 1193, 1194, 1195], "gelu": [75, 323, 706, 707, 708, 1626], "gradient_descent_upd": [76, 324, 1274, 1275, 1276], "greater": [77, 325, 1007, 1008, 1009], "greater_equ": [78, 326, 1011, 1012, 1013], "has_nan": [79, 327, 1204, 1205, 1206], "iinfo": [80, 328, 835, 836, 837], "inplace_decr": [81, 329, 1210, 1211, 1212], "inv": [82, 330, 1349, 1350, 1351], "is_bool_dtyp": [83, 331, 840, 841, 842], "is_float_dtyp": [84, 332, 844, 845, 846], "is_int_dtyp": [85, 333, 848, 849, 850], "is_uint_dtyp": [86, 334, 852, 853, 854, 855], "is_vari": [87, 335, 1277, 1278, 1279], "isfinit": [88, 336, 1015, 1016, 1017], "isinf": [89, 337, 1019, 1020, 1021], "isnan": [90, 338, 1023, 1024, 1025], "lamb_upd": [91, 339, 1282, 1283, 1284], "lars_upd": [92, 340, 1285, 1286, 1287], "layer_norm": [93, 341, 1507, 1508, 1509], "leaky_relu": [94, 342, 710, 711, 712], "less": [95, 343, 1027, 1028, 1029], "less_equ": [96, 344, 1031, 1032, 1033], "log": [97, 345, 651, 1035, 1036, 1037], "log10": [98, 346, 1039, 1040, 1041], "log1p": [99, 347, 1043, 1044, 1045], "log2": [100, 348, 1047, 1048, 1049], "logaddexp": [101, 349, 1051, 1052, 1053], "logical_and": [102, 350, 1055, 1056, 1057], "logical_not": [103, 351, 1059, 1060, 1061], "logical_or": [104, 352, 1063, 1064, 1065], "logical_xor": [105, 353, 1067, 1068, 1069], "matmul": [106, 354, 1353, 1354, 1355], "matrix_norm": [107, 355, 1356, 1357, 1358], "matrix_rank": [108, 357, 1364, 1365, 1366], "matrix_transpos": [109, 358, 1368, 1369, 1370], "max": [110, 359, 1585, 1586, 1587], "mean": [111, 361, 1588, 1589, 1590], "meshgrid": [112, 362, 763, 764, 765], "min": [113, 363, 1591, 1592, 1593], "multinomi": [114, 365, 1511, 1512, 1513], "multipli": [115, 366, 1079, 1080, 1081], "native_arrai": [116, 367, 767, 768, 769], "neg": [117, 368, 1083, 1084, 1085], "nonzero": [118, 369, 1541, 1542, 1543, 1544], "not_equ": [119, 370, 1087, 1088, 1089], "ones_lik": [120, 371, 774, 775, 776], "optimizer_upd": [121, 372, 1288, 1289, 1290], "outer": [122, 373, 1372, 1373, 1374], "permute_dim": [123, 374, 1450, 1451, 1452], "pinv": [124, 1376], "posit": [125, 375, 657, 1091, 1092, 1093], "pow": [126, 376, 1095, 1096, 1097], "prod": [127, 377, 1594, 1595, 1596], "qr": [128, 378, 1377, 1378, 1379], "randint": [129, 379, 1515, 1516, 1517], "random_norm": [130, 380, 1519, 1520, 1521], "random_uniform": [131, 381, 1523, 1524, 1525], "relu": [132, 382, 714, 715, 716], "remaind": [133, 383, 1099, 1100, 1101], "repeat": [134, 384, 1453, 1454, 1455], "reshap": [135, 385, 1457, 1458, 1459], "result_typ": [136, 386, 859, 860, 861], "roll": [137, 387, 660, 1461, 1462, 1463], "round": [138, 388, 1103, 1104, 1105], "searchsort": [139, 389, 1572, 1573, 1574, 1575], "shuffl": [140, 390, 1528, 1529, 1530], "sigmoid": [141, 391, 718, 719, 720], "sign": [142, 392, 1107, 1108, 1109], "sin": [143, 393, 1111, 1112, 1113], "sinh": [144, 394, 1115, 1116, 1117], "softmax": [145, 396, 722, 723, 724], "softplu": [146, 397, 726, 727, 728], "solv": [147, 398, 1385, 1386, 1387], "sort": [148, 223, 399, 642, 1567, 1577, 1578, 1579], "sparse_cross_entropi": [149, 400, 1427, 1428, 1429], "split": [150, 401, 1465, 1466, 1467], "sqrt": [151, 402, 1119, 1120, 1121], "squar": [152, 403, 1123, 1124, 1125], "squeez": [153, 404, 1469, 1470, 1471], "stable_divid": [154, 405, 1238, 1239, 1240], "stack": [155, 406, 1472, 1473, 1474], "std": [156, 575, 1597, 1598, 1599], "stop_gradi": [157, 576, 1292, 1294, 1295], "subtract": [158, 577, 1127, 1129, 1130, 1131], "sum": [159, 578, 1600, 1601, 1602], "svd": [160, 579, 1389, 1391, 1392], "svdval": [161, 580, 1393, 1395, 1396, 1397], "swapax": [162, 581, 1475, 1476, 1477], "tan": [163, 582, 660, 664, 1132, 1134, 1135], "tanh": [164, 583, 1136, 1138, 1139], "tensordot": [165, 584, 1398, 1400, 1401], "tile": [166, 585, 1478, 1479, 1480], "to_devic": [167, 586, 897, 899, 900, 901], "to_list": [168, 587, 1246, 1248, 1249], "to_numpi": [169, 588, 1251, 1253, 1254], "trace": [170, 589, 1402, 1404, 1405], "tril": [171, 590, 778, 780, 781], "triu": [172, 591, 782, 784, 785], "trunc": [173, 592, 1140, 1142, 1143], "unique_al": [174, 593, 1551, 1553, 1554], "unique_count": [175, 594, 1555, 1557, 1558], "unique_invers": [176, 595, 1559, 1561, 1562], "unique_valu": [177, 596, 1563, 1565, 1566], "unstack": [178, 597, 1260, 1262, 1263], "var": [179, 598, 1603, 1605, 1606], "variable_data": [181, 600, 1302, 1304, 1305], "vecdot": [182, 601, 1406, 1408, 1409], "vector_norm": [183, 602, 1410, 1412, 1413], "vector_to_skew_symmetric_matrix": [184, 603, 1414, 1416, 1417], "where": [185, 604, 1546, 1548, 1549], "zero_pad": [186, 605, 1481, 1482, 1483], "zeros_lik": [187, 606, 789, 791, 792], "convers": [188, 607], "args_to_ivi": 189, "args_to_n": 190, "to_ivi": [191, 610], "to_n": [192, 611], "creation": [193, 612, 733], "arraywithcr": 194, "data": [195, 614, 662, 670, 678, 692, 793, 1550, 1551, 1554, 1555, 1558, 1563, 1566], "type": [195, 614, 665, 670, 692, 793], "arraywithdatatyp": 196, "devic": [197, 616, 657, 671, 873], "arraywithdevic": 198, "elementwis": [199, 618, 906], "arraywithelementwis": 200, "gener": [201, 620, 662, 1144], "arraywithgener": 202, "gradient": [203, 622, 1265], "arraywithgradi": 204, "imag": [205, 624], "arraywithimag": 206, "layer": [207, 626, 1307, 1635], "arraywithlay": 208, "linear": [209, 628, 1324, 1328, 1645], "algebra": [209, 628, 1328], "arraywithlinearalgebra": 210, "loss": [211, 630, 1418], "arraywithloss": 212, "manipul": [213, 632, 1431], "arraywithmanipul": 214, "norm": [215, 634, 1506, 1649], "arraywithnorm": 216, "random": [217, 636, 1510], "arraywithrandom": 218, "search": [219, 638, 1532], "arraywithsearch": 220, "set": [221, 640, 651, 666, 1550], "arraywithset": 222, "arraywithsort": 224, "statist": [225, 644, 1581], "arraywithstatist": 226, "util": [227, 229, 646, 1607], "arraywithutil": [228, 230], "wrap": [231, 648, 667], "backend": [233, 656, 666, 675, 692], "handler": [233, 675], "choose_random_backend": 234, "clear_backend_stack": 235, "current_backend": 236, "get_backend": 237, "set_backend": 238, "try_import_ivy_jax": 239, "try_import_ivy_mxnet": 240, "try_import_ivy_numpi": 241, "try_import_ivy_tf": 242, "try_import_ivy_torch": 243, "unset_backend": 244, "background": [245, 1617], "ml": 246, "explos": 246, "standard": 247, "skeptic": 247, "complimentari": 247, "v": [247, 692], "competit": 247, "do": [247, 662], "work": [247, 654], "The": [247, 652, 677, 692], "api": [247, 653, 656, 661, 669, 675, 677, 679, 680], "why": [248, 662], "unifi": [248, 677], "No": [248, 651], "more": [248, 651], "re": 248, "implement": 248, "infinit": 248, "shelf": 248, "life": 248, "containerwithactiv": 250, "base": 251, "containerbas": 252, "contain": [253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 652, 669, 678, 707, 709, 711, 713, 715, 717, 719, 721, 723, 725, 727, 729, 736, 739, 742, 744, 747, 749, 751, 754, 756, 759, 762, 764, 766, 768, 770, 773, 775, 777, 779, 780, 783, 784, 787, 790, 791, 797, 799, 801, 803, 805, 807, 809, 811, 817, 821, 823, 826, 828, 831, 834, 836, 838, 841, 843, 845, 847, 849, 851, 854, 856, 860, 862, 880, 882, 898, 900, 908, 910, 912, 914, 916, 918, 920, 922, 924, 926, 928, 930, 932, 934, 936, 938, 940, 942, 944, 946, 948, 950, 952, 954, 956, 958, 960, 962, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 984, 986, 988, 990, 992, 994, 996, 998, 1000, 1002, 1004, 1006, 1008, 1010, 1012, 1014, 1016, 1018, 1020, 1022, 1024, 1026, 1028, 1030, 1032, 1034, 1036, 1038, 1040, 1042, 1044, 1046, 1048, 1050, 1052, 1054, 1056, 1058, 1060, 1062, 1064, 1066, 1068, 1070, 1072, 1074, 1076, 1078, 1080, 1082, 1084, 1086, 1088, 1090, 1092, 1094, 1096, 1098, 1100, 1102, 1104, 1106, 1108, 1110, 1112, 1114, 1116, 1118, 1120, 1122, 1124, 1126, 1128, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1146, 1148, 1156, 1158, 1160, 1162, 1166, 1168, 1173, 1175, 1177, 1179, 1181, 1183, 1190, 1192, 1194, 1196, 1205, 1207, 1211, 1213, 1239, 1241, 1247, 1248, 1252, 1253, 1261, 1262, 1267, 1270, 1275, 1278, 1280, 1283, 1286, 1289, 1293, 1294, 1299, 1300, 1303, 1304, 1309, 1311, 1319, 1321, 1330, 1332, 1334, 1336, 1338, 1340, 1342, 1344, 1346, 1350, 1352, 1354, 1357, 1359, 1361, 1363, 1365, 1367, 1369, 1371, 1373, 1375, 1378, 1380, 1382, 1384, 1386, 1388, 1390, 1391, 1394, 1396, 1399, 1400, 1403, 1404, 1407, 1408, 1411, 1412, 1415, 1416, 1420, 1422, 1424, 1426, 1428, 1430, 1433, 1435, 1437, 1439, 1441, 1444, 1446, 1448, 1451, 1454, 1456, 1458, 1460, 1462, 1464, 1466, 1468, 1470, 1473, 1476, 1479, 1482, 1508, 1512, 1514, 1516, 1518, 1520, 1522, 1524, 1526, 1529, 1531, 1534, 1536, 1538, 1540, 1543, 1545, 1547, 1548, 1552, 1553, 1556, 1557, 1560, 1561, 1564, 1565, 1569, 1571, 1574, 1576, 1578, 1580, 1583, 1586, 1589, 1592, 1595, 1598, 1601, 1604, 1605, 1609, 1611, 1613, 1615], "add_ivy_container_instance_method": [262, 649], "matrix_pow": [356, 1360, 1361, 1362], "maximum": [360, 1071, 1072, 1073], "minimum": [364, 1075, 1076, 1077], "slogdet": [395, 1381, 1382, 1383], "static_ab": [407, 910], "static_aco": [408, 914], "static_acosh": [409, 918], "static_add": [410, 922], "static_al": [411, 1611], "static_all_equ": [412, 1148], "static_ani": [413, 1615], "static_arang": [414, 736], "static_argmax": [415, 1536], "static_argmin": [416, 1540], "static_argsort": [417, 1571], "static_asarrai": [418, 739], "static_asin": [419, 926], "static_asinh": [420, 930], "static_astyp": [421, 799], "static_atan": [422, 934], "static_atan2": [423, 938], "static_atanh": [424, 942], "static_binary_cross_entropi": [425, 1422], "static_bitwise_and": [426, 946], "static_bitwise_invert": [427, 950], "static_bitwise_left_shift": [428, 954], "static_bitwise_or": [429, 958], "static_bitwise_right_shift": [430, 962], "static_bitwise_xor": [431, 966], "static_broadcast_arrai": [432, 803], "static_broadcast_to": [433, 807], "static_can_cast": [434, 811], "static_ceil": [435, 970], "static_choleski": [436, 1332], "static_clip": [437, 1435], "static_clip_matrix_norm": [438, 1158], "static_clip_vector_norm": [439, 1162], "static_concat": [440, 1439], "static_conv1d": [441, 1311], "static_co": [442, 974], "static_cosh": [443, 978], "static_cross": [444, 1336], "static_cross_entropi": [445, 1426], "static_cumprod": [446, 1168], "static_default_float_dtyp": [447, 817], "static_depthwise_conv2d": [448, 1321], "static_det": [449, 1340], "static_dev": [450, 882], "static_diagon": [451, 1344], "static_divid": [452, 982], "static_dtyp": [453, 823], "static_einops_rearrang": [454, 1175], "static_einops_reduc": [455, 1179], "static_einops_repeat": [456, 1183], "static_empty_lik": [457, 744], "static_equ": [458, 986], "static_erf": [459, 990], "static_exp": [460, 994], "static_expand_dim": [461, 1446], "static_expm1": [462, 998], "static_ey": [463, 747], "static_finfo": [464, 828], "static_floor": [465, 1002], "static_floor_divid": [466, 1006], "static_from_dlpack": [467, 751], "static_full_lik": [468, 756], "static_function_supported_dtyp": [469, 831], "static_function_unsupported_dtyp": [470, 834], "static_gath": [471, 1192], "static_gather_nd": [472, 1196], "static_gelu": [473, 709], "static_great": [474, 1010], "static_greater_equ": [475, 1014], "static_has_nan": [476, 1207], "static_iinfo": [477, 838], "static_inplace_decr": [478, 1213], "static_inv": [479, 1352], "static_is_bool_dtyp": [480, 843], "static_is_float_dtyp": [481, 847], "static_is_int_dtyp": [482, 851], "static_is_uint_dtyp": [483, 856], "static_is_vari": [484, 1280], "static_isfinit": [485, 1018], "static_isinf": [486, 1022], "static_isnan": [487, 1026], "static_leaky_relu": [488, 713], "static_less": [489, 1030], "static_less_equ": [490, 1034], "static_linspac": [491, 759], "static_log": [492, 1038], "static_log10": [493, 1042], "static_log1p": [494, 1046], "static_log2": [495, 1050], "static_logaddexp": [496, 1054], "static_logical_and": [497, 1058], "static_logical_not": [498, 1062], "static_logical_or": [499, 1066], "static_logical_xor": [500, 1070], "static_logspac": [501, 762], "static_matrix_norm": [502, 1359], "static_matrix_pow": [503, 1363], "static_matrix_rank": [504, 1367], "static_matrix_transpos": [505, 1371], "static_maximum": [506, 1074], "static_meshgrid": [507, 766], "static_minimum": [508, 1078], "static_multinomi": [509, 1514], "static_multipli": [510, 1082], "static_native_arrai": [511, 770], "static_neg": [512, 1086], "static_nonzero": [513, 1545], "static_not_equ": [514, 1090], "static_on": [515, 773], "static_ones_lik": [516, 777], "static_out": [517, 1375], "static_posit": [518, 1094], "static_pow": [519, 1098], "static_qr": [520, 1380], "static_randint": [521, 1518], "static_random_norm": [522, 1522], "static_random_uniform": [523, 1526], "static_relu": [524, 717], "static_remaind": [525, 1102], "static_repeat": [526, 1456], "static_reshap": [527, 1460], "static_result_typ": [528, 862], "static_rol": [529, 1464], "static_round": [530, 1106], "static_searchsort": [531, 1576], "static_shuffl": [532, 1531], "static_sigmoid": [533, 721], "static_sign": [534, 1110], "static_sin": [535, 1114], "static_sinh": [536, 1118], "static_slogdet": [537, 1384], "static_softmax": [538, 725], "static_softplu": [539, 729], "static_solv": [540, 1388], "static_sort": [541, 1580], "static_sparse_cross_entropi": [542, 1430], "static_split": [543, 1468], "static_sqrt": [544, 1122], "static_squar": [545, 1126], "static_stable_divid": [546, 1241], "static_stop_gradi": [547, 1293], "static_subtract": [548, 1128], "static_svd": [549, 1390], "static_svdv": [550, 1394], "static_tan": [551, 1133], "static_tanh": [552, 1137], "static_tensordot": [553, 1399], "static_to_devic": [554, 898], "static_to_list": [555, 1247], "static_to_numpi": [556, 1252], "static_trac": [557, 1403], "static_tril": [558, 779], "static_triu": [559, 783], "static_trunc": [560, 1141], "static_unique_al": [561, 1552], "static_unique_count": [562, 1556], "static_unique_invers": [563, 1560], "static_unique_valu": [564, 1564], "static_unstack": [565, 1261], "static_var": [566, 1604], "static_vari": [567, 1299], "static_variable_data": [568, 1303], "static_vecdot": [569, 1407], "static_vector_norm": [570, 1411], "static_vector_to_skew_symmetric_matrix": [571, 1415], "static_wher": [572, 1547], "static_zero": [573, 787], "static_zeros_lik": [574, 790], "static_to_ivi": 608, "static_to_n": 609, "containerwithcr": 613, "containerwithdatatyp": 615, "containerwithdevic": 617, "containerwithelementwis": 619, "containerwithgener": 621, "containerwithgradi": 623, "containerwithimag": 625, "containerwithlay": 627, "containerwithlinearalgebra": 629, "containerwithloss": 631, "containerwithmanipul": 633, "containerwithnorm": 635, "containerwithrandom": 637, "containerwithsearch": 639, "containerwithset": 641, "containerwithsort": 643, "containerwithstatist": 645, "containerwithutil": 647, "contribut": [650, 1617], "up": 651, "clone": 651, "ivi": [651, 652, 656, 660, 662, 663, 664, 668, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 707, 708, 709, 711, 712, 713, 715, 716, 717, 719, 720, 721, 723, 724, 725, 727, 728, 729, 735, 736, 738, 739, 742, 743, 744, 746, 747, 749, 750, 751, 754, 755, 756, 758, 759, 761, 762, 764, 765, 766, 768, 769, 770, 772, 773, 775, 776, 777, 779, 780, 781, 783, 784, 785, 787, 788, 790, 791, 792, 797, 798, 799, 801, 802, 803, 805, 806, 807, 809, 810, 811, 816, 817, 821, 822, 823, 826, 827, 828, 830, 831, 833, 834, 836, 837, 838, 841, 842, 843, 845, 846, 847, 849, 850, 851, 853, 854, 855, 856, 860, 861, 862, 880, 881, 882, 898, 899, 900, 901, 908, 909, 910, 912, 913, 914, 916, 917, 918, 920, 921, 922, 924, 925, 926, 928, 929, 930, 932, 933, 934, 936, 937, 938, 940, 941, 942, 944, 945, 946, 948, 949, 950, 952, 953, 954, 956, 957, 958, 960, 961, 962, 964, 965, 966, 968, 969, 970, 972, 973, 974, 976, 977, 978, 980, 981, 982, 984, 985, 986, 988, 989, 990, 992, 993, 994, 996, 997, 998, 1000, 1001, 1002, 1004, 1005, 1006, 1008, 1009, 1010, 1012, 1013, 1014, 1016, 1017, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1028, 1029, 1030, 1032, 1033, 1034, 1036, 1037, 1038, 1040, 1041, 1042, 1044, 1045, 1046, 1048, 1049, 1050, 1052, 1053, 1054, 1056, 1057, 1058, 1060, 1061, 1062, 1064, 1065, 1066, 1068, 1069, 1070, 1072, 1073, 1074, 1076, 1077, 1078, 1080, 1081, 1082, 1084, 1085, 1086, 1088, 1089, 1090, 1092, 1093, 1094, 1096, 1097, 1098, 1100, 1101, 1102, 1104, 1105, 1106, 1108, 1109, 1110, 1112, 1113, 1114, 1116, 1117, 1118, 1120, 1121, 1122, 1124, 1125, 1126, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1137, 1138, 1139, 1141, 1142, 1143, 1146, 1147, 1148, 1156, 1157, 1158, 1160, 1161, 1162, 1166, 1167, 1168, 1173, 1174, 1175, 1177, 1178, 1179, 1181, 1182, 1183, 1190, 1191, 1192, 1194, 1195, 1196, 1205, 1206, 1207, 1211, 1212, 1213, 1239, 1240, 1241, 1247, 1248, 1249, 1252, 1253, 1254, 1261, 1262, 1263, 1267, 1268, 1270, 1271, 1275, 1276, 1278, 1279, 1280, 1283, 1284, 1286, 1287, 1289, 1290, 1293, 1294, 1295, 1299, 1300, 1301, 1303, 1304, 1305, 1309, 1310, 1311, 1319, 1320, 1321, 1330, 1331, 1332, 1334, 1335, 1336, 1338, 1339, 1340, 1342, 1343, 1344, 1346, 1347, 1350, 1351, 1352, 1354, 1355, 1357, 1358, 1359, 1361, 1362, 1363, 1365, 1366, 1367, 1369, 1370, 1371, 1373, 1374, 1375, 1378, 1379, 1380, 1382, 1383, 1384, 1386, 1387, 1388, 1390, 1391, 1392, 1394, 1395, 1396, 1397, 1399, 1400, 1401, 1403, 1404, 1405, 1407, 1408, 1409, 1411, 1412, 1413, 1415, 1416, 1417, 1420, 1421, 1422, 1424, 1425, 1426, 1428, 1429, 1430, 1433, 1434, 1435, 1437, 1438, 1439, 1441, 1442, 1444, 1445, 1446, 1448, 1449, 1451, 1452, 1454, 1455, 1456, 1458, 1459, 1460, 1462, 1463, 1464, 1466, 1467, 1468, 1470, 1471, 1473, 1474, 1476, 1477, 1479, 1480, 1482, 1483, 1508, 1509, 1512, 1513, 1514, 1516, 1517, 1518, 1520, 1521, 1522, 1524, 1525, 1526, 1529, 1530, 1531, 1534, 1535, 1536, 1538, 1539, 1540, 1542, 1543, 1544, 1545, 1547, 1548, 1549, 1552, 1553, 1554, 1556, 1557, 1558, 1560, 1561, 1562, 1564, 1565, 1566, 1569, 1570, 1571, 1573, 1574, 1575, 1576, 1578, 1579, 1580, 1583, 1584, 1586, 1587, 1589, 1590, 1592, 1593, 1595, 1596, 1598, 1599, 1601, 1602, 1604, 1605, 1606, 1609, 1610, 1611, 1613, 1614, 1615], "pycharm": [651, 652], "virtual": 651, "environ": 651, "docker": [651, 652, 654], "us": [651, 654, 661, 678], "miniconda": [651, 654], "venv": [651, 654], "interpret": 651, "window": 651, "maco": 651, "ubuntu": 651, "detail": 651, "hypothesi": [651, 662], "github": 651, "codespac": 651, "pre": [651, 673], "commit": [651, 652, 673], "basic": [652, 663], "get": 652, "help": 652, "todo": 652, "list": 652, "issu": 652, "extens": [652, 690, 1617], "manag": 652, "your": 652, "fork": 652, "who": 652, "To": 652, "ask": 652, "With": 652, "command": 652, "line": 652, "browser": 652, "pull": 652, "request": 652, "small": 652, "often": 652, "interact": 652, "run": [652, 661], "test": [652, 661, 662, 664], "local": 652, "most": 652, "out": [652, 657, 672], "id": [652, 661], "open": 653, "task": 653, "function": [653, 657, 658, 662, 665, 667, 669, 670, 671, 675, 680, 692], "format": [653, 673], "checklist": 653, "frontend": [653, 663, 664, 680], "build": [654, 675], "doc": 654, "dockerless": 654, "document": 654, "pipelin": [654, 692], "make_doc": 654, "sh": 654, "entrypoint": 654, "_make_doc": 654, "generate_src_rst_fil": 654, "py": 654, "sphinx": 654, "correct_built_html_fil": 654, "remove_fil": 654, "deep": 655, "dive": 655, "navig": 656, "code": 656, "categor": 656, "submodul": [656, 658], "design": [656, 674, 1617], "argument": [657, 670, 671, 672], "exampl": [657, 658, 660, 663, 664, 673], "keyword": 657, "number": 657, "oper": [657, 677, 692], "integ": [657, 670], "sequenc": 657, "nestabl": [657, 665, 669], "helper": [658, 662], "1": 658, "2": 658, "docstr": [659, 660], "bash": 661, "file": 661, "import": 662, "strategi": 662, "integr": 662, "we": 662, "need": 662, "how": 662, "write": 662, "effect": 662, "bonu": 662, "extend": 662, "featur": 662, "self": 662, "consist": 662, "explicit": 662, "test_array_funct": 662, "introduct": [663, 664], "composit": [663, 665], "further": 663, "full": [664, 752], "primari": 665, "mix": 665, "standalon": 665, "conveni": 665, "nativ": 668, "handl": [668, 692], "instanc": [669, 677], "static": 669, "special": 669, "modul": [670, 671, 679, 1647, 1648], "other": [670, 671], "unsupport": 670, "support": [670, 692], "inplac": 672, "updat": 672, "copi": 672, "lint": 673, "check": [673, 692], "hook": 673, "automat": 673, "reformat": 673, "befor": 673, "block": 675, "graph": [675, 680], "compil": [675, 680, 730, 731], "framework": 676, "class": 677, "monkei": 677, "patch": 677, "construct": 678, "represent": 678, "recurs": 678, "built": 678, "ins": 678, "access": 678, "save": 678, "load": 678, "comparison": 678, "custom": [678, 692], "case": 678, "compartment": 678, "configur": 678, "network": [678, 680], "weight": 678, "state": [679, 692], "initi": [679, 1629], "optim": [679, 1651, 1655], "transpil": 680, "role": 680, "convert": [680, 1627], "model": [680, 687, 692], "builder": 682, "ecosystem": 683, "gym": [684, 691], "mech": 685, "memori": [686, 691], "robot": [688, 691], "vision": [689, 691], "appli": 691, "librari": 691, "mechan": 691, "faq": 692, "maintain": 692, "version": 692, "dynam": 692, "size": 692, "shape": [692, 1236, 1550, 1551, 1554, 1555, 1558, 1563, 1566], "gpu": 692, "deploy": 692, "control": 692, "flow": 692, "auto": 692, "differenti": 692, "replica": 692, "parallel": 692, "altern": 692, "structur": 692, "func": 693, "wrapper": 693, "from_zero_dim_arrays_to_float": 694, "handle_nest": 695, "handle_out_argu": 696, "infer_devic": 697, "infer_dtyp": 698, "inputs_to_ivy_arrai": 699, "inputs_to_native_arrai": 700, "integer_array_to_float": 701, "outputs_to_ivy_arrai": 702, "to_native_arrays_and_back": 703, "constant": 732, "note": [733, 748, 750], "arang": [734, 735], "empti": 740, "ey": [745, 746], "linspac": [757, 758], "logspac": [760, 761], "ones": [771, 772], "zero": [786, 788, 1634], "as_ivy_dtyp": 794, "as_native_dtyp": 795, "check_float": 812, "closest_valid_dtyp": 813, "default_dtyp": 814, "default_float_dtyp": [815, 816], "default_int_dtyp": 818, "default_uint_dtyp": 819, "dtype_bit": 824, "function_supported_dtyp": [829, 830], "function_unsupported_dtyp": [832, 833], "invalid_dtyp": 839, "promote_typ": 857, "promote_types_of_input": 858, "set_default_dtyp": 863, "set_default_float_dtyp": 864, "set_default_int_dtyp": 865, "set_default_uint_dtyp": 866, "type_promote_arrai": 867, "unset_default_dtyp": 868, "unset_default_float_dtyp": 869, "unset_default_int_dtyp": 870, "unset_default_uint_dtyp": 871, "valid_dtyp": 872, "profil": 874, "as_ivy_dev": 875, "as_native_dev": 876, "clear_mem_on_dev": 877, "default_devic": 878, "dev_util": 883, "function_supported_devic": 884, "function_unsupported_devic": 885, "get_all_ivy_arrays_on_dev": 886, "gpu_is_avail": 887, "num_cpu_cor": 888, "num_gpu": 889, "num_ivy_arrays_on_dev": 890, "percent_used_mem_on_dev": 891, "print_all_ivy_arrays_on_dev": 892, "set_default_devic": 893, "set_split_factor": 894, "split_factor": 895, "split_func_cal": 896, "total_mem_on_dev": 902, "tpu_is_avail": 903, "unset_default_devic": 904, "used_mem_on_dev": 905, "arg_info": 1149, "arg_nam": 1150, "array_equ": 1151, "arrays_equ": 1152, "assert_supports_inplac": 1153, "cache_fn": 1154, "container_typ": 1163, "copy_arrai": 1164, "cumsum": 1169, "current_backend_str": 1170, "default": 1171, "exist": 1184, "floormod": 1185, "fourier_encod": 1186, "function_supported_devices_and_dtyp": 1187, "function_unsupported_devices_and_dtyp": 1188, "get_all_arrays_in_memori": 1197, "get_array_mod": 1198, "get_min_bas": 1199, "get_min_denomin": 1200, "get_nestable_mod": 1201, "get_num_dim": 1202, "get_referrers_recurs": 1203, "indices_wher": 1208, "inplace_arrays_support": 1209, "inplace_incr": 1214, "inplace_upd": 1215, "inplace_variables_support": 1216, "is_arrai": 1217, "is_ivy_arrai": 1218, "is_ivy_contain": 1219, "is_native_arrai": 1220, "match_kwarg": 1221, "multiprocess": 1222, "num_arrays_in_memori": 1223, "one_hot": 1224, "print_all_arrays_in_memori": 1225, "queue_timeout": 1226, "scatter_flat": 1227, "scatter_nd": 1228, "set_array_mod": 1229, "set_min_bas": 1230, "set_min_denomin": 1231, "set_nestable_mod": 1232, "set_queue_timeout": 1233, "set_shape_array_mod": 1234, "set_tmp_dir": 1235, "shape_array_mod": 1237, "stable_pow": 1242, "supports_inplac": 1243, "tmp_dir": 1244, "to_ivy_shap": 1245, "to_native_shap": 1250, "to_scalar": 1255, "try_else_non": 1256, "unset_array_mod": 1257, "unset_nestable_mod": 1258, "unset_shape_array_mod": 1259, "value_is_nan": 1264, "execute_with_gradi": 1272, "grad": 1273, "jac": 1281, "set_with_grad": 1291, "unset_with_grad": 1296, "value_and_grad": 1297, "with_grad": 1306, "conv1d_transpos": 1312, "conv2d": [1313, 1638], "conv2d_transpos": 1314, "conv3d": [1315, 1640], "conv3d_transpos": 1316, "deconv_length": 1317, "dropout": [1322, 1643], "handle_pad": 1323, "lstm_updat": 1325, "multi_head_attent": 1326, "scaled_dot_product_attent": 1327, "meta": 1484, "fomaml_step": 1485, "maml_step": 1486, "reptile_step": 1487, "nest": 1488, "all_nested_indic": 1489, "copy_nest": 1490, "index_nest": 1491, "insert_into_nest_at_index": 1492, "insert_into_nest_at_indic": 1493, "map": 1494, "map_nest_at_index": 1495, "map_nest_at_indic": 1496, "multi_index_nest": 1497, "nested_ani": 1498, "nested_indices_wher": 1499, "nested_map": 1500, "nested_multi_map": 1501, "prune_nest_at_index": 1502, "prune_nest_at_indic": 1503, "set_nest_at_index": 1504, "set_nest_at_indic": 1505, "seed": 1527, "depend": [1550, 1551, 1554, 1555, 1558, 1563, 1566], "output": [1550, 1551, 1554, 1555, 1558, 1563, 1566], "glossari": 1616, "content": 1617, "overview": 1617, "quick": 1617, "start": 1617, "roadmap": [1617, 1623], "citat": 1617, "inspect": 1620, "add_array_spec": 1621, "fn_array_spec": 1622, "geglu": 1625, "to_ivy_modul": 1628, "firstlayersiren": 1630, "glorotuniform": 1631, "Ones": 1632, "siren": 1633, "conv1dtranspos": 1637, "conv2dtranspos": 1639, "conv3dtranspos": 1641, "depthwiseconv2d": 1642, "lstm": 1644, "multiheadattent": 1646, "layernorm": 1650, "adam": 1652, "lamb": 1653, "lar": 1654, "sgd": 1656, "sequenti": [1657, 1658], "verbos": 1660, "cprint": 1661}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})